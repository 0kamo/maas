[buildout]
parts =
  cli
  cli-test
  cluster
  cluster-test
  config-test
  flake8
  region
  region-test
  repl
  sphinx
  testing-test
extensions = buildout-versions
buildout_versions_file = versions.cfg
versions = versions
extends = versions.cfg
offline = false
newest = false

# Since MAAS's main deployment target is Ubuntu, all runtime
# dependencies should come from python packages. However, it's okay
# for development-time dependencies to come from eggs.
include-site-packages = true

prefer-final = true
allow-picked-versions = false

[common]
extra-paths =
  ${buildout:directory}/etc
  ${buildout:directory}/src
  ${buildout:directory}
test-eggs =
  coverage
  fixtures
  mock
  nose
  postgresfixture
  python-subunit
  sst
  testresources
  testscenarios
  testtools
initialization =
  from os import environ
  environ.setdefault("MAAS_CONFIG_DIR", "${buildout:directory}/etc/maas")
  environ.setdefault("MAAS_ROOT", "${buildout:directory}/run")

[database]
recipe = z3c.recipe.scripts
eggs = postgresfixture
extra-paths = ${common:extra-paths}
interpreter =
entry-points = database=postgresfixture.main:main
scripts = database

[region]
recipe = zc.recipe.egg
dev-eggs =
  django-debug-toolbar
test-eggs =
  ${common:test-eggs}
  django-nose
eggs =
  ${region:dev-eggs}
  ${region:test-eggs}
  djorm-ext-pgarray
  docutils
  crochet
  iscpy
entry-points =
  maas-region-admin=django.core.management:execute_from_command_line
  twistd.region=twisted.scripts.twistd:run
initialization =
  ${common:initialization}
  environ.setdefault("DJANGO_SETTINGS_MODULE", "maas.development")
scripts =
  maas-region-admin
  twistd.region
extra-paths =
  ${common:extra-paths}

[region-test]
recipe = zc.recipe.egg
eggs =
  ${region:eggs}
entry-points =
  test.region=django.core.management:execute_from_command_line
initialization =
  ${region:initialization}
  sys.argv[1:1] = [
      "test", "--noinput", "--exclude=provisioningserver",
      "--exclude=maastesting", "--exclude=maascli",
      "--logging-level=INFO", "--logging-clear-handlers",
      # Reduce the logging level to INFO here as
      # DebuggingLoggerMiddleware logs the content of all the
      # requests at DEBUG level: we don't want this in the
      # tests as it's too verbose.
  ]
scripts = test.region
extra-paths =
  ${region:extra-paths}

[cli]
recipe = zc.recipe.egg
eggs =
entry-points =
  maas=maascli:main
extra-paths =
  ${common:extra-paths}
scripts =
  maas

[cli-test]
recipe = zc.recipe.egg
eggs =
  ${region:eggs}
  ${common:test-eggs}
entry-points =
  test.cli=nose.core:TestProgram
initialization =
  sys.argv[1:1] = ["--where=src/maascli"]
extra-paths = ${cli:extra-paths}
scripts =
  test.cli

[js-test]
recipe = zc.recipe.egg
eggs =
  crochet
entry-points =
  test.js=maastesting.karma:run_karma
extra-paths =
  ${common:extra-paths}
scripts =
  test.js
initialization =
  ${common:initialization}

[testing-test]
recipe = zc.recipe.egg
eggs =
  ${common:test-eggs}
entry-points =
  test.testing=nose.core:TestProgram
initialization =
  sys.argv[1:1] = ["--where=src/maastesting"]
extra-paths = ${common:extra-paths}
scripts =
  test.testing
scripts = test.testing
extra-paths =
  ${region:extra-paths}

[cluster]
recipe = zc.recipe.egg
eggs =
  crochet
entry-points =
  maas-probe-dhcp=provisioningserver.dhcp.probe:main
  maas-provision=provisioningserver.__main__:main
  twistd.cluster=twisted.scripts.twistd:run
extra-paths =
  ${common:extra-paths}
scripts =
  maas-probe-dhcp
  maas-provision
  twistd.cluster
initialization =
  ${common:initialization}
  environ.setdefault("MAAS_PROVISION_CMD", "${buildout:directory}/bin/maas-provision")
  environ.setdefault("MAAS_CLUSTER_DEVELOP", "TRUE")

[cluster-test]
recipe = zc.recipe.egg
eggs =
  ${cluster:eggs}
  ${common:test-eggs}
entry-points =
  test.cluster=nose.core:TestProgram
initialization =
  ${common:initialization}
  sys.argv[1:1] = ["--where=src/provisioningserver"]
extra-paths = ${cluster:extra-paths}
scripts =
  test.cluster

[config-test]
recipe = zc.recipe.egg
eggs =
  ${common:test-eggs}
entry-points =
  test.config=nose.core:TestProgram
initialization =
  ${common:initialization}
  sys.argv[1:1] = ["--where=etc/maas/templates/commissioning-user-data"]
extra-paths = ${common:extra-paths}
scripts =
  test.config

[e2e-test]
recipe = zc.recipe.egg
eggs =
  ${region:dev-eggs}
  ${region:test-eggs}
  djorm-ext-pgarray
  docutils
  crochet
  iscpy
entry-points =
  test.e2e=maastesting.protractor.runner:run_protractor
extra-paths =
  ${common:extra-paths}
scripts =
  test.e2e
initialization =
  ${cluster:initialization}
  environ.setdefault("MAAS_ROOT", "${buildout:directory}/run-e2e")
  environ.setdefault("DJANGO_SETTINGS_MODULE", "maas.development")

[flake8]
recipe = zc.recipe.egg
eggs =
  flake8
entry-points =
  flake8=flake8.run:main

[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs
build = ${buildout:directory}/docs/_build
extra-paths = ${common:extra-paths}
eggs =
  ${region:eggs}
  ${cluster:eggs}

# Convenient REPLs with all eggs available.
[repl]
recipe = z3c.recipe.scripts
eggs =
  ${region:eggs}
  ${cluster:eggs}
  ${common:test-eggs}
extra-paths = ${common:extra-paths}
interpreter = py
scripts = ipy
entry-points =
  ipy=IPython.frontend.terminal.ipapp:launch_new_instance
