{"version":3,"sources":["webpack:///webpack/bootstrap 3b6caf85bc6f1c91ffe1","webpack:///./src/maasserver/static/js/enums.js","webpack:///./src/maasserver/static/js/io.js","webpack:///./src/maasserver/static/js/os_distro_select.js","webpack:///./src/maasserver/static/js/prefs.js","webpack:///./src/maasserver/static/js/reveal.js","webpack:///./src/maasserver/static/js/shortpoll.js","webpack:///./src/maasserver/static/js/ui/maas-ui.js","webpack:///./src/maasserver/static/js/angular/maas.js","webpack:///./src/maasserver/static/js/angular/controllers/add_device.js","webpack:///./src/maasserver/static/js/angular/controllers/add_domain.js","webpack:///./src/maasserver/static/js/angular/controllers/add_hardware.js","webpack:///./src/maasserver/static/js/angular/controllers/dashboard.js","webpack:///./src/maasserver/static/js/angular/controllers/domain_details.js","webpack:///./src/maasserver/static/js/angular/controllers/domains_list.js","webpack:///./src/maasserver/static/js/angular/controllers/fabric_details.js","webpack:///./src/maasserver/static/js/angular/controllers/images.js","webpack:///./src/maasserver/static/js/angular/controllers/intro_user.js","webpack:///./src/maasserver/static/js/angular/controllers/intro.js","webpack:///./src/maasserver/static/js/angular/controllers/networks_list.js","webpack:///./src/maasserver/static/js/angular/controllers/node_details_networking.js","webpack:///./src/maasserver/static/js/angular/controllers/node_details_storage_filesystems.js","webpack:///./src/maasserver/static/js/angular/controllers/node_details_storage.js","webpack:///./src/maasserver/static/js/angular/controllers/node_details.js","webpack:///./src/maasserver/static/js/angular/controllers/node_events.js","webpack:///./src/maasserver/static/js/angular/controllers/node_result.js","webpack:///./src/maasserver/static/js/angular/controllers/node_results.js","webpack:///./src/maasserver/static/js/angular/controllers/nodes_list.js","webpack:///./src/maasserver/static/js/angular/controllers/pod_details.js","webpack:///./src/maasserver/static/js/angular/controllers/pods_list.js","webpack:///./src/maasserver/static/js/angular/controllers/prefs.js","webpack:///./src/maasserver/static/js/angular/controllers/settings.js","webpack:///./src/maasserver/static/js/angular/controllers/space_details.js","webpack:///./src/maasserver/static/js/angular/controllers/subnet_details.js","webpack:///./src/maasserver/static/js/angular/controllers/vlan_details.js","webpack:///./src/maasserver/static/js/angular/controllers/zone_details.js","webpack:///./src/maasserver/static/js/angular/controllers/zones_list.js","webpack:///./src/maasserver/static/js/angular/directives/accordion.js","webpack:///./src/maasserver/static/js/angular/directives/boot_images.js","webpack:///./src/maasserver/static/js/angular/directives/call_to_action.js","webpack:///./src/maasserver/static/js/angular/directives/card_loader.js","webpack:///./src/maasserver/static/js/angular/directives/code_lines.js","webpack:///./src/maasserver/static/js/angular/directives/contenteditable.js","webpack:///./src/maasserver/static/js/angular/directives/controller_image_status.js","webpack:///./src/maasserver/static/js/angular/directives/controller_status.js","webpack:///./src/maasserver/static/js/angular/directives/dbl_click_overlay.js","webpack:///./src/maasserver/static/js/angular/directives/enter_blur.js","webpack:///./src/maasserver/static/js/angular/directives/enter.js","webpack:///./src/maasserver/static/js/angular/directives/error_overlay.js","webpack:///./src/maasserver/static/js/angular/directives/error_toggle.js","webpack:///./src/maasserver/static/js/angular/directives/ipranges.js","webpack:///./src/maasserver/static/js/angular/directives/maas_obj_form.js","webpack:///./src/maasserver/static/js/angular/directives/mac_address.js","webpack:///./src/maasserver/static/js/angular/directives/machines_table.js","webpack:///./src/maasserver/static/js/angular/directives/notifications.js","webpack:///./src/maasserver/static/js/angular/directives/os_select.js","webpack:///./src/maasserver/static/js/angular/directives/placeholder.js","webpack:///./src/maasserver/static/js/angular/directives/pod_parameters.js","webpack:///./src/maasserver/static/js/angular/directives/power_parameters.js","webpack:///./src/maasserver/static/js/angular/directives/proxy_settings.js","webpack:///./src/maasserver/static/js/angular/directives/release_name.js","webpack:///./src/maasserver/static/js/angular/directives/release_options.js","webpack:///./src/maasserver/static/js/angular/directives/script_results_list.js","webpack:///./src/maasserver/static/js/angular/directives/script_runtime.js","webpack:///./src/maasserver/static/js/angular/directives/script_select.js","webpack:///./src/maasserver/static/js/angular/directives/script_status.js","webpack:///./src/maasserver/static/js/angular/directives/ssh_keys.js","webpack:///./src/maasserver/static/js/angular/directives/switches_table.js","webpack:///./src/maasserver/static/js/angular/directives/toggle_control.js","webpack:///./src/maasserver/static/js/angular/directives/type.js","webpack:///./src/maasserver/static/js/angular/directives/version_reloader.js","webpack:///./src/maasserver/static/js/angular/directives/window_width.js","webpack:///./src/maasserver/static/js/angular/filters/by_fabric.js","webpack:///./src/maasserver/static/js/angular/filters/by_space.js","webpack:///./src/maasserver/static/js/angular/filters/by_subnet.js","webpack:///./src/maasserver/static/js/angular/filters/by_vlan.js","webpack:///./src/maasserver/static/js/angular/filters/nodes.js","webpack:///./src/maasserver/static/js/angular/filters/order_by_date.js","webpack:///./src/maasserver/static/js/angular/filters/remove_default_vlan.js","webpack:///./src/maasserver/static/js/angular/services/browser.js","webpack:///./src/maasserver/static/js/angular/services/converter.js","webpack:///./src/maasserver/static/js/angular/services/error.js","webpack:///./src/maasserver/static/js/angular/services/json.js","webpack:///./src/maasserver/static/js/angular/services/log.js","webpack:///./src/maasserver/static/js/angular/services/manager.js","webpack:///./src/maasserver/static/js/angular/services/managerhelper.js","webpack:///./src/maasserver/static/js/angular/services/pollingmanager.js","webpack:///./src/maasserver/static/js/angular/services/search.js","webpack:///./src/maasserver/static/js/angular/services/validation.js","webpack:///./src/maasserver/static/js/angular/factories/bootresources.js","webpack:///./src/maasserver/static/js/angular/factories/configs.js","webpack:///./src/maasserver/static/js/angular/factories/controllers.js","webpack:///./src/maasserver/static/js/angular/factories/devices.js","webpack:///./src/maasserver/static/js/angular/factories/dhcpsnippets.js","webpack:///./src/maasserver/static/js/angular/factories/discoveries.js","webpack:///./src/maasserver/static/js/angular/factories/domains.js","webpack:///./src/maasserver/static/js/angular/factories/events.js","webpack:///./src/maasserver/static/js/angular/factories/fabrics.js","webpack:///./src/maasserver/static/js/angular/factories/general.js","webpack:///./src/maasserver/static/js/angular/factories/ipranges.js","webpack:///./src/maasserver/static/js/angular/factories/machines.js","webpack:///./src/maasserver/static/js/angular/factories/node_results.js","webpack:///./src/maasserver/static/js/angular/factories/nodes.js","webpack:///./src/maasserver/static/js/angular/factories/notifications.js","webpack:///./src/maasserver/static/js/angular/factories/packagerepositories.js","webpack:///./src/maasserver/static/js/angular/factories/pods.js","webpack:///./src/maasserver/static/js/angular/factories/region.js","webpack:///./src/maasserver/static/js/angular/factories/scripts.js","webpack:///./src/maasserver/static/js/angular/factories/services.js","webpack:///./src/maasserver/static/js/angular/factories/spaces.js","webpack:///./src/maasserver/static/js/angular/factories/sshkeys.js","webpack:///./src/maasserver/static/js/angular/factories/staticroutes.js","webpack:///./src/maasserver/static/js/angular/factories/subnets.js","webpack:///./src/maasserver/static/js/angular/factories/switches.js","webpack:///./src/maasserver/static/js/angular/factories/tags.js","webpack:///./src/maasserver/static/js/angular/factories/users.js","webpack:///./src/maasserver/static/js/angular/factories/vlans.js","webpack:///./src/maasserver/static/js/angular/factories/zones.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","YUI","add","Y","log","namespace","BMC_TYPE","BMC","DEFAULT","POD","BOND_LACP_RATE","FAST","SLOW","BOND_MODE","ACTIVE_BACKUP","BALANCE_ALB","BALANCE_RR","BALANCE_TLB","BALANCE_XOR","BROADCAST","LINK_AGGREGATION","BOND_XMIT_HASH_POLICY","ENCAP2_3","ENCAP3_4","LAYER2","LAYER2_3","LAYER3_4","BOOT_RESOURCE_FILE_TYPE","ARCHIVE_TAR_XZ","BOOTLOADER","BOOT_DTB","BOOT_INITRD","BOOT_KERNEL","ROOT_DD","ROOT_DDBZ2","ROOT_DDGZ","ROOT_DDRAW","ROOT_DDTAR","ROOT_DDTBZ","ROOT_DDTGZ","ROOT_DDTXZ","ROOT_DDXZ","ROOT_IMAGE","ROOT_TGZ","SQUASHFS_IMAGE","BOOT_RESOURCE_TYPE","GENERATED","SYNCED","UPLOADED","CACHE_MODE_TYPE","WRITEAROUND","WRITEBACK","WRITETHROUGH","COMPONENT","IMPORT_PXE_FILES","PSERV","RACK_CONTROLLERS","REGION_IMAGE_IMPORT","DEVICE_IP_ASSIGNMENT_TYPE","DYNAMIC","EXTERNAL","STATIC","ENDPOINT","API","UI","FILESYSTEM_GROUP_TYPE","BCACHE","LVM_VG","RAID_0","RAID_1","RAID_10","RAID_5","RAID_6","FILESYSTEM_TYPE","BCACHE_BACKING","BCACHE_CACHE","BTRFS","EXT2","EXT4","FAT32","LVM_PV","RAID","RAID_SPARE","RAMFS","SWAP","TMPFS","VFAT","XFS","ZFSROOT","HARDWARE_TYPE","CPU","MEMORY","NODE","STORAGE","INTERFACE_LINK_TYPE","AUTO","DHCP","LINK_UP","INTERFACE_TYPE","ALIAS","BOND","BRIDGE","PHYSICAL","UNKNOWN","VLAN","IPADDRESS_FAMILY","IPv4","IPv6","IPADDRESS_TYPE","DISCOVERED","STICKY","USER_RESERVED","IPRANGE_TYPE","RESERVED","KEYS_PROTOCOL_TYPE","GH","LP","NODE_CREATION_TYPE","MANUAL","PRE_EXISTING","NODE_METADATA","PHYSICAL_HARDWARE_REV","PHYSICAL_MFG_NAME","PHYSICAL_MODEL_NAME","PHYSICAL_NAME","PHYSICAL_SERIAL_NUM","VENDOR_NAME","NODE_PERMISSION","ADMIN","EDIT","LOCK","VIEW","NODE_STATUS","ALLOCATED","BROKEN","COMMISSIONING","DEPLOYED","DEPLOYING","DISK_ERASING","ENTERING_RESCUE_MODE","EXITING_RESCUE_MODE","FAILED_COMMISSIONING","FAILED_DEPLOYMENT","FAILED_DISK_ERASING","FAILED_ENTERING_RESCUE_MODE","FAILED_EXITING_RESCUE_MODE","FAILED_RELEASING","FAILED_TESTING","MISSING","NEW","READY","RELEASING","RESCUE_MODE","RETIRED","TESTING","NODE_TYPE","DEVICE","MACHINE","RACK_CONTROLLER","REGION_AND_RACK_CONTROLLER","REGION_CONTROLLER","PARTITION_TABLE_TYPE","GPT","MBR","POWER_STATE","ERROR","OFF","ON","PRESEED_TYPE","CURTIN","ENLIST","RDNS_MODE","DISABLED","ENABLED","RFC2317","RESULT_TYPE","INSTALLATION","SCRIPT_PARALLEL","ANY","INSTANCE","SCRIPT_STATUS","ABORTED","DEGRADED","FAILED","FAILED_INSTALLING","INSTALLING","PASSED","PENDING","RUNNING","TIMEDOUT","SCRIPT_TYPE","SERVICE_STATUS","DEAD","SIGNAL_STATUS","OK","WORKING","USERDATA_TYPE","getIO","io","IO","header","Cookie","requires","OSReleaseWidget","_io","maas","superclass","constructor","apply","this","arguments","NAME","extend","Widget","initializer","cfg","initialSkip","bindTo","osNode","event_name","self","one","on","e","osValue","currentTarget","switchTo","newOSValue","options","all","selected","each","option","sel","modifyOption","selectVisableOption","value","split_value","split","removeClass","set","addClass","first_option","Array","hasClass","use","releaseWidget","os_distro_select","srcNode","render","TokenWidget","ATTRS","nb_tokens","readOnly","size","displayError","message","status_node","create_link","Node","create","spinnerNode","append","confirm","bindDeleteRow","row","preventDefault","deleteToken","bindUI","requestKeys","token_key","method","data","QueryString","stringify","op","sync","start","bind","showSpinner","end","hideSpinner","success","id","out","remove","failure","status","send","MAAS_config","uris","account_handler","insert","createTokenFromKeys","consumer_key","token_secret","addToken","token","list","keys","JSON","parse","response","Reveal","get_style_int","node","attribute","parseInt","getStyle","config","targetNode","linkNode","hideText","showText","quick","renderUI","target","reveal","syncUI","fire","setStyle","set_hidden_link","is_visible","link","new_text","undefined","set_visible_link","get_animation_duration","suggested_duration","create_slide_in","publisher","anim","Anim","duration","to","height","create_slide_out","content_node","new_height","run","script_entry","ShortPollManager","shortpoll_start_event","shortpoll_fail_event","MAX_SHORT_DELAY_FAILED_ATTEMPTS","SHORT_DELAY","LONG_DELAY","_repoll","uri","eventKey","valueFn","guid","Base","_started","_failed_attempts","_sequence","successPoll","responseText","failurePoll","_pollDelay","repoll","failed","delay","later","poll","that","Lang","isValue","poll_uri","indexOf","dropdowns","click","openMenu","closeAllMenus","MAASUI","utils","ready","fn","document","attachEvent","readyState","addEventListener","toggleClass","el","className","classList","toggle","classes","existingIndex","splice","push","join","replace","RegExp","contains","test","dropdown","event","stopPropagation","forEach","init","querySelectorAll","sublinks","angular","$interpolateProvider","$routeProvider","$httpProvider","versionedPath","path","files_version","startSymbol","endSymbol","defaults","xsrfCookieName","xsrfHeaderName","href","element","attr","location","pathname","length","routes","when","templateUrl","controller","redirectTo","reloadOnSearch","controllerAs","superuser","otherwise","$rootScope","$location","$on","next","current","completed_intro","user_completed_intro","window","ga","q","Date","userId","analytics_user_id","version","uuid","hash","$scope","DevicesManager","SubnetsManager","DomainsManager","ManagerHelperService","ValidationService","newDevice","cloneDevice","isObject","domain","interfaces","mac","ipAssignment","subnetId","ipAddress","getDefaultDomain","$parent","addDeviceScope","subnets","getItems","domains","viewable","error","ipAssignments","title","device","show","hide","$emit","nameHasError","validateHostname","macHasError","deviceInterface","validateMAC","ipHasError","validateIP","validateIPInNetwork","cidr","isNumber","subnet","getItemFromList","deviceHasError","externalIpError","staticIpError","addInterface","isPrimaryInterface","deleteInterface","cancel","save","addAnother","convertedDevice","hostname","primary_mac","extra_macs","nic","ip_assignment","ip_address","convertDeviceToProtocol","then","parseValidationError","loadManagers","addDomainScope","authoritative","validateDomainName","domainHasError","copy","convertDomainToProtocol","$http","ZonesManager","MachinesManager","GeneralManager","RegionConnection","addHardwareScope","model","zones","architectures","getData","hwe_kernels","default_min_hwe_kernel","power_types","macAddressRegex","machine","chassis","virshFields","label","field_type","default","choices","required","defaultArchitecture","newMachine","cloneMachine","macs","zone","architecture","min_hwe_kernel","power","type","parameters","text","newChassis","cloneChassis","chassisPowerTypes","description","fields","mode","startPolling","stopPolling","showMachine","showChassis","addMac","removeMac","idx","invalidName","validateMac","machineHasError","in_error","chassisHasErrors","power_type","field","isUndefined","powerParametersHasError","saveMachine","pxe_mac","shift","map","power_parameters","saveChassis","params","chassis_type","username","url","$","param","headers","Content-Type","loadManager","$window","$routeParams","DiscoveriesManager","VLANsManager","ConfigsManager","deviceIPOptions","page","loaded","discoveredDevices","machines","devices","configManager","networkDiscovery","column","selectedDevice","convertTo","predicate","last_seen","sortTable","reverse","proxyManager","updateItem","createItem","createInterface","Error","getDiscoveryName","discovery","getSubnetName","getName","getVLANName","vlanId","vlan","toggleSelected","deviceId","discovered","getDomainByName","slice","parent","goTo","saved","filter","preProcess","item","mac_address","ip","afterSave","obj","_removeItem","isString","search","tab","UsersManager","ErrorService","domainLoaded","displayname","isSuperUser","isDefaultDomain","canBeDeleted","rrsets","deleteButton","confirmingDelete","cancelDeleteButton","deleteConfirmButton","deleteDomain","activeDomain","getActiveItem","requestedDomain","domain_id","isNaN","raiseError","setActiveItem","$filter","currentpage","loading","addDomain","cancelAddDomain","FabricsManager","SpacesManager","ControllersManager","fabricLoaded","fabric","$watch","updateVLANs","rows","racks","vlans","space","space_name","vlan_name","subnet_name","rack_sids","rack_sid","rack","system_id","key","fabricManager","editSummary","controllers","enterEditSummary","exitEditSummary","isDefaultFabric","deleteFabric","reply","activeFabric","requestedFabric","fabric_id","BootResourcesManager","bootResources","autoImport","isArray","resources","user","skip","clickContinue","canContinue","sshkeys_count","force","markIntroComplete","reload","getAuthUser","PackageRepositoriesManager","repoManager","hasImages","maasName","upstreamDNS","mainArchive","portsArchive","httpProxy","welcomeInError","form","$maasForm","hasErrors","networkInError","inError","objs","managers","repo","filterByVLAN","filterByFabric","filterBySpace","filterByNullSpace","getURLParameters","by","groupBy","ADD_FABRIC_ACTION","selectedTitle","objectName","ADD_VLAN_ACTION","ADD_SPACE_ACTION","ADD_SUBNET_ACTION","subnetManager","fabrics","spaceManager","spaces","vlanManager","group","orphanVLANs","actionObjectInitializers","vlan_ids","updateGroupBy","previous_space","index","updateOrphanVLANs","previous_fabric","previous_vlan","fabric_name","updateFabricsGroupBy","updateActions","actionOptions","actionChanged","newObject","actionOption","cancelAction","getFabricNameById","fabricId","actionSubnetPreSave","originalInterfaces","filtered","usedVLANs","inter","parents","vlan_id","childInterface","found","link_id","interfaceType","vid","modes","isFunction","getValue","links","nicType","allowLinkUp","JSONService","INTERFACE_TYPE_TEXTS","physical","bond","bridge","alias","LINK_MODE","LINK_MODE_TEXTS","auto","static","dhcp","link_up","SELECTION_MODE","NONE","SINGLE","MULTI","DELETE","ADD","CREATE_BOND","CREATE_BRIDGE","CREATE_PHYSICAL","IP_ASSIGNMENT","updateLoaded","nodeHasLoaded","managersHaveLoaded","updateInterfaces","vlanTable","addedVlans","children","child","editInterface","selectedMode","tags","formatted","members","tag","isController","vlanRecord","primary_rack","secondary_rack","sort_key","getVLANText","sort","a","b","localeCompare","nic_copy","subnet_id","interfaceLinksMap","linkMaps","newInterface","parentId","linkId","newParent","iType","isAlias","isVLAN","canAddAlias","canAddVLAN","addTypeChanged","leaveSingleSelectionMode","updateNewInterface","mapNICToOriginalLink","nic_id","originalInteface","getDefaultVLAN","default_vlan_id","getUnusedVLANs","ignoreVLANs","getSelectedInterfaces","selectedInterfaces","splitKey","getNextName","prefix","tableInfo","interfaceErrorsByLinkId","newBondInterface","newBridgeInterface","bondOptions","nodeLoaded","isLimitedEditingAllowed","isDevice","isAllNetworkingDisabled","isBootInterface","is_boot","getInterfaceTypeText","isDefined","getLinkModeText","getSubnetText","getSubnet","isInterfaceNameInvalid","otherNic","isLinkModeDisabled","getInterfaceError","isIPAddressInvalid","getUniqueKey","toggleInterfaceSelect","isInterfaceSelected","cannotEditInterface","isEditing","edit","defaultSubnet","fabricChanged","vlanChanged","fabricChangedForm","updateValue","vlanChangedForm","subnetChanged","subnetChangedForm","modeChanged","modeChangedForm","originalLink","editCancel","preProcessInterface","interface_id","saveInterface","nodesManager","updateInterface","console","saveInterfaceLink","linkSubnet","editSave","isShowingDeleteConfirm","isShowingAdd","canAddAliasOrVLAN","canAddAnotherVLAN","getRemoveTypeText","canBeRemoved","quickRemove","confirmRemove","unlinkSubnet","defaultVLAN","defaultMode","quickAdd","getAddName","aliasIdx","createVLANInterface","isDisabled","canCreateBond","isShowingCreateBond","showCreateBond","primary","lacpRate","xmitHashPolicy","hasBootInterface","getInterfacePlaceholderMACAddress","isMACAddressInvalid","invalidEmpty","showLACPRate","showXMITHashPolicy","cannotAddBond","addBond","bond_mode","bond_lacp_rate","bond_xmit_hash_policy","createBondInterface","canCreateBridge","isShowingCreateBridge","showCreateBridge","bridge_stp","bridge_fd","cannotAddBridge","addBridge","createBridgeInterface","isShowingCreatePhysical","showCreatePhysical","macError","errorMsg","cannotAddPhysicalInterface","addPhysicalInterface","createPhysicalInterface","errorStr","tryParse","controllerLoaded","SpecialFilesystem","fstype","mountPoint","mountOptions","isValid","startsWith","describe","parts","match","addSpecialFilesystem","addSpecialFilesystemFinished","filesystem","canMount","mount","mountSpecialFilesystem","disks","availableNew","single","disk","ConverterService","MIN_PARTITION_SIZE","MUTLI","UNMOUNT","UNFORMAT","FORMAT_AND_MOUNT","PARTITION","VOLUME_GROUP","LOGICAL_VOLUME","RAID_MODES","level","min_disks","allows_spares","calculateSize","minSize","numDisks","hasMountedFilesystem","mount_point","hasFormattedUnmountedFilesystem","isInUse","is_format_fstype","available_size","getTags","cache_set_id","block_id","partition_id","updateDisks","used","cachesets","filesystems","has_disks","size_human","mount_options","filesystem_id","original_type","original","parent_type","partitions","partition","special_filesystems","oldFilesystem","filesystemsMap","$selected","updateFilesystemSelection","used_by","used_for","cacheset","oldCacheSet","cachesetsMap","updateCacheSetsSelection","available","has_partitions","available_size_human","used_size_human","serial","test_status","firmware_version","oldDisk","availableMap","$options","newDevices","updateAvailableSelection","updateAvailable","filesystemMode","filesystemAllSelected","cachesetsMode","cachesetsAllSelected","availableMode","availableAllSelected","deselectAll","items","capitalizeFirstLetter","string","charAt","toUpperCase","getIndexFromName","exec","dIdx","Math","max","isNameAlreadyInUse","exclude_disk","j","isLogicalVolume","showMembers","isBootDiskDisabled","section","setAsBootDisk","setBootDisk","getSelectedFilesystems","toggleFilesystemSelect","toggleFilesystemAllSelect","isFilesystemsDisabled","isAllStorageDisabled","filesystemCancel","filesystemUnmount","quickFilesystemUnmount","filesystemConfirmUnmount","updateFilesystem","filesystemDelete","quickFilesystemDelete","filesystemConfirmDelete","unmountSpecialFilesystem","deletePartition","deleteFilesystem","hasUnmountedFilesystem","showFreeSpace","getDeviceType","getSelectedAvailable","toggleAvailableSelect","toggleAvailableAllSelect","isAvailableDisabled","canFormatAndMount","getPartitionButtonText","availablePartitionSpace","space_to_reserve","partition_table_type","INITIAL_PARTITION_OFFSET","roundByBlockSize","canAddPartition","isNameInvalid","nameHasChanged","parentName","availableCancel","usesMountPoint","usesStorage","isMountPointInvalid","canDelete","used_size","availableDelete","availableQuickDelete","canEdit","availableEdit","editingTags","editingFilesystem","availableQuickEdit","availableConfirmEdit","updateDisk","availableConfirmDelete","deleteVolumeGroup","deleteDisk","availablePartition","size_and_units","sizeUnits","availableQuickPartition","getAddPartitionName","isAddPartitionSizeInvalid","bytes","unitsToBytes","roundUnits","availableConfirmPartition","removeDisk","available_space","createPartition","getSelectedCacheSets","toggleCacheSetSelect","toggleCacheSetAllSelect","isCacheSetsDisabled","cacheSetCancel","canDeleteCacheSet","cacheSetDelete","quickCacheSetDelete","cacheSetConfirmDelete","deleteCacheSet","canCreateCacheSet","createCacheSet","getCannotCreateBcacheMsg","canCreateBcache","createBcache","cacheMode","fstypeChanged","isNewDiskNameInvalid","createBcacheCanSave","availableConfirmCreateBcache","cache_set","cache_mode","canCreateRAID","createRAID","spares","getAvailableRAIDModes","getTotalNumberOfAvailableSpares","diff","getNumberOfRemainingSpares","allowed","showSparesColumn","RAIDModeChanged","isActiveRAIDMember","isSpareRAIDMember","setAsActiveRAIDMember","setAsSpareRAIDMember","getNewRAIDSize","Number","MAX_VALUE","deviceSize","min","bytesToUnits","createRAIDCanSave","availableConfirmCreateRAID","block_devices","spare_devices","spare_partitions","canCreateVolumeGroup","createVolumeGroup","getNewVolumeGroupSize","total","createVolumeGroupCanSave","availableConfirmCreateVolumeGroup","canAddLogicalVolume","availableLogicalVolume","namePrefix","isLogicalVolumeNameInvalid","newLogicalVolumeNameChanged","isAddLogicalVolumeSizeInvalid","availableConfirmLogicalVolume","createLogicalVolume","authUser","is_superuser","owner","hasStorageLayoutIssues","storage_layout_issues","$interval","TagsManager","ServicesManager","ScriptsManager","DEVICE_IP_ASSIGNMENT","external","dynamic","updateTitle","fqdn","updateHeader","editing","editing_domain","updateAvailableActionOptions","action","availableOptions","allOptions","getAllActionOptions","node_type","actions","updatePower","bmc_node_count","power_bmc_node_count","updateSummary","summary","hasUsableArchitectures","hasInvalidArchitecture","updateServices","services","getServices","service","updateDevices","nicIdx","deviceWithMAC","lIdx","deviceWithLink","$watchCollection","storageController","networkingController","showing_confirmation","osinfo","area","osSelection","osystem","release","hwe_kernel","commissionOptions","enableSSH","skipNetworking","skipStorage","updateFirmware","configureHBA","commissioningSelection","testSelection","releaseOptions","checkingPower","scripts","getDeviceIPAssignment","events","limit","0","1","2","3","4","updateNode","queryPower","checkPowerState","tagsAutocomplete","query","autocomplete","getPowerStateClass","power_state","getPowerStateText","canCheckPowerState","isUbuntuOS","isUbuntuCoreOS","isCustomOS","isActionError","isDeployError","missing_osinfo","osystems","isSSHKeyError","getSSHKeyCount","optionChanged","actionCancel","actionGo","extra","distro_series","enable_ssh","skip_networking","skip_storage","commissioning_scripts","testing_scripts","status_code","erase","secure_erase","secureErase","quick_erase","quickErase","performAction","$reset","getArchitecturePlaceholder","invalidArchitecture","isRackControllerConnected","isLocked","locked","editHeaderDomain","editHeader","editHeaderInvalid","cancelEditHeader","saveEditHeader","cancelEditSummary","saveEditSummary","invalidPowerType","editPower","cancelEditPower","saveEditPower","allowShowMoreEvents","showMoreEvents","getEventText","getPowerEventError","hasPowerEventError","getPowerEventErrorText","hasActionPowerError","actionName","hasPowerError","missing_packages","getPowerErrors","result","packages","getServiceClass","hasCustomCommissioningScripts","script_type","scope","showFailedTestWarning","testing_status","getCPUSubtext","cpu_count","cpu_speed","type_name","type_name_title","activeNode","EventsManagerFactory","eventsManager","getManager","days","getMaximumDays","loadItems","eventsLoaded","loadMore","loadMaximumDays","destroy","NodeResultsManagerFactory","nodeResultsManager","requestedResult","getItem","get_result_data","output","resultLoaded","updateLogs","had_installation","logs","installation_results","selectedLog","commissioning_results","testing_results","results","updateLogOutput","resultsLoaded","logOutput","getSummaryXML","getSummaryYAML","hlist","history_list","SearchService","SwitchesManager","isViewingSelected","tabs","toLowerCase","enterViewSelected","previous_search","leaveViewSelected","updateFilters","updateAllViewableChecked","filtered_items","allViewableChecked","clearAction","resetActionProgress","zoneSelection","shouldClearAction","selectedItems","removeEmptyFilter","updateActionErrorCount","actionErrorCount","supportsAction","action_failed","progress","actionProgress","completed","errors","affected_nodes","updateSelectedItems","hasActionsFailed","manager","unselectItem","hasActionsInProgress","nodes","switches","showswitches","pagetitle","searchValid","getSelectedItems","metadata","getMetadata","filters","getEmptyFilter","takeActionOptions","syncStatuses","addController","registerUrl","register_url","registerSecret","register_secret","addHardwareOption","addHardwareOptions","toggleTab","clearSearch","toggleChecked","isSelected","selectItem","toggleCheckAll","onNodeListingChanged","showSelected","toggleFilter","filtersToString","isFilterActive","getCurrentFilters","selectColumnOrSort","actionOptionSelected","zone_id","addErrorToActionProgress","addHardwareOptionChanged","addDevice","cancelAddDevice","statusPoll","storeFilters","nodesFilter","retrieveFilters","devicesFilter","controllersFilter","switchesFilter","PodsManager","pod","podManager","sentence","operation","refresh","deleteItem","inProgress","compose","storage","boot","powerTypes","machinesSearch","actionOptionChanged","getPodTypeTitle","powerType","canCompose","capabilities","composeMachine","composePreProcess","sorted","constraint","cancelCompose","composeAddStorage","composeSetBootDisk","composeRemoveDisk","startWatching","now","getDefaultZone","activePod","pods","filteredItems","open","action_error","addPod","cancelAddPod","getPowerTypeTitle","DHCPSnippetsManager","snippetsManager","snippets","known_architectures","pockets_to_disable","components_to_disable","packageRepositoriesManager","repositories","newSnippet","editSnippet","deleteSnippet","snippetTypes","newRepository","editRepository","deleteRepository","repositoryEnabledToggle","repository","repositoryEnterRemove","repositoryExitRemove","repositoryConfirmRemove","isPPA","isMirror","repositoryEnterEdit","repositoryExitEdit","repositoryAdd","enabled","arches","distributions","components","repositoryAddCancel","getSnippetTypeText","snippet","getSnippetAppliesToObject","getSnippetAppliesToText","snippetEnterRemove","snippetExitRemove","snippetConfirmRemove","snippetEnterEdit","snippetExitEdit","snippetToggle","snippetAdd","snippetAddCancel","spaceLoaded","updateSubnets","isDefaultSpace","subnet_ids","deleteSpace","activeSpace","requestedSpace","space_id","source","StaticRoutesManager","active_discovery_data","active_discovery_interval","staticRoutes","staticRoutesManager","actionError","newStaticRoute","editStaticRoute","deleteStaticRoute","MAP_SUBNET_ACTION","DELETE_ACTION","ALLOC_TYPES","5","6","NODE_TYPES","updateIPVersion","ipVersion","subnetLoaded","updateFabric","ipSort","ipv4ToInteger","ipv6Expand","getAllocType","allocType","str","getSubnetCIDR","destId","allocTypeSort","alloc_type","getUsageForIP","node_summary","nodeType","bmcs","dns_records","nodeTypeSort","ownerSort","sortIPTable","actionRetry","scanSubnet","scan_started_on","deleteSubnet","subnetPreSave","changedFields","addStaticRoute","gateway_ip","destination","metric","cancelAddStaticRoute","isStaticRouteInEditMode","route","staticRouteToggleEditMode","isStaticRouteInDeleteMode","staticRouteEnterDeleteMode","staticRouteCancelDelete","staticRouteConfirmDelete","choice","activeSubnet","requestedSubnet","objects","vm","updateManagementRacks","primaryRack","secondaryRack","updateRelatedControllers","relatedControllers","updateRelatedSubnets","relatedSubnets","updatePossibleActions","relay_vlan","RELAY_DHCP_ACTION","DISABLE_DHCP_ACTION","dhcp_on","PROVIDE_DHCP_ACTION","isFabricDefault","vlanLoaded","provideDHCPAction","getSpaceName","getActionByName","initProvideDHCP","forRelay","relayVLAN","maxIPs","startIP","endIP","gatewayIP","needsDynamicRange","iprange","statistics","suggested_dynamic_range","needsGatewayIP","subnetMissingGatewayIP","updatePrimaryRack","updateSecondaryRack","updateSubnet","filterPrimaryRack","suggested_gateway","num_addresses","startPlaceholder","endPlaceholder","gatewayPlaceholder","canPerformAction","gateway","configureDHCP","extraDHCP","relay","disableDHCP","deleteVLAN","getFullVLANName","getDHCPStatus","activeVLAN","requestedVLAN","zoneLoaded","zoneManager","isDefaultZone","activeZone","requestedZone","addZone","closeZone","directive","restrict","attrs","clickHandler","evt","find","off","template","$element","$document","design","saving","stopping","ubuntuImages","isNew","tooMany","showingAdvanced","connecting","errorMessage","source_type","keyring_filename","keyring_data","releases","selections","changed","ubuntuCoreImages","ubuntu_core","images","otherImages","other","generatedImages","customImages","ubuntuDeleteId","removingImage","getTitleIcon","showMirrorPath","isShowingAdvancedOptions","toggleAdvancedOptions","bothKeyringOptionsSet","showConnectButton","sourceChanged","currentSources","ubuntu","sources","prevNew","updateSource","regenerateUbuntuImages","connect","isConnectButtonDisabled","getSourceParams","selectDefaults","arch","fetch","fromJson","showConnectBlock","showSelections","getUbuntuLTSReleases","deleted","getUbuntuNonLTSReleases","getArchitectures","toggleSelection","showImagesTable","getResource","resource","resource_os","rtype","image","icon","beingDeleted","resourceId","downloading","name_split","regenerateUbuntuCoreImages","ubuntuCoreImage","checked","regenerateOtherImages","otherImage","_regenerateImages","image_id","regenerateGeneratedImages","regenerateCustomImages","ltsIsSelected","commissioningSeriesSelected","commissioning_series","cancelRemove","deleteImage","showStopImportButton","region_import_running","showSaveSelection","canSaveSelection","commissioning_series_being_deleted","commissioning_series_arches","getSaveSelectionText","canStopImport","getStopImportText","stopImport","saveSelection","saveUbuntu","getNewSelections","newObjs","oldSelections","newSelections","selection","source_len","toggleUbuntuCoreSelection","saveUbuntuCoreSelection","saveUbuntuCore","toggleOtherSelection","saveOtherSelection","saveOther","confirmDeleteImage","ubuntu_core_images","other_images","$templateCache","put","require","maasCta","ngModel","ngModelCtrl","defaultTitle","select","shown","$setViewValue","getTitle","$modelValue","secondary","getOptionTitle","$viewChangeListeners","$eval","ngChange","$apply","$compile","include","maasCardLoader","html","contents","maasCodeLines","attributes","empty","lines","newLine","ngDisabled","maasEditing","focusHandler","blur","changeHandler","$render","$viewValue","unbind","$timeout","statuses","updateStatuses","controllerIds","checkImageStates","register","known","runningInterval","startTimeout","CHECK_INTERVAL","unregister","getImageStatus","ControllerImageStatusService","systemId","unwatch","registered","textOnly","getClass","countClass","class_name","counter","updateStatusClass","serviceClass","serviceText","styleElement","createElement","innerHTML","getElementsByTagName","appendChild","BrowserService","transclude","maasDblClickOverlay","clickElement","overlay","tagName","createEvent","initMouseEvent","dispatchEvent","css","cursor","triggerHandler","overlayClick","overlayDblClick","browser","which","maasEnter","jasmine","Image","src","markDisconnected","connected","showDisconnected","clientError","wasConnected","watchConnection","isConnected","_error","disconnectedPromise","cancelTimeout","watchConnectionAndError","IPRangesManager","ipranges","iprangeManager","newRange","editIPRange","deleteIPRange","addRange","start_ip","end_ip","comment","cancelAddRange","ipRangeCanBeModified","range","isIPRangeInEditMode","ipRangeToggleEditMode","ipRangeClearEditMode","isIPRangeInDeleteMode","ipRangeEnterDeleteMode","ipRangeCancelDelete","ipRangeConfirmDelete","ipRangeSort","MAASFormController","savingKeys","managerMethod","cloneObject","clonedObj","isTableForm","tableForm","saveOnBlur","isSaving","showInputSaving","errorScope","registerField","unregisterField","startEditingField","stopEditingField","clearErrors","updatedObj","newObj","errorJson","errorField","setErrors","v","saveForm","newValue","inline","MAASGroupController","timeout","formController","keyIdx","pre","onChange","subtleText","subtle","missingAttrs","disableLabel","labelElement","labelWidth","labelLeft","labelInfo","infoWrapper","infoIcon","infoTooltip","inputWrapper","inputWidth","placeholder","inputElement","blurOnEnter","val","currentValue","disabled","placeholderEnabled","childScope","$new","_ngDisabled","_selectValue","_selectNgChange","_change","values","checkScope","_selectedValues","_checked","_toggleChecked","tagsScope","_tags","switchScope","_toggle","_changed","onValue","offValue","inputClass","errorsElement","helpText","helpTextElement","setTimeout","focus","subtleTextElement","removeAttr","ul","ele","macAddressFormat","numbers","$parsers","$formatters","hideCheckboxes","onListingChange","onCheckAll","onCheck","SPINNER_STATUSES","table","filteredMachines","updateAllChecked","$machine","showNodeStatus","other_test_status","getReleaseTitle","os_release","getStatusText","releaseTitle","trim","$machines","NotificationsManager","notifications","dismiss","categories","categoryTitles","warning","info","categoryClasses","categoryNotifications","cns","category","notification","maasOsSelect","getSelectableReleases","allChoices","getSelectableKernels","kernels","os","osKernels","getDefaultOrFirst","array","defaultValue","weightValue","first","weightedPresent","setDefault","default_osystem","default_release","kernel","selectedOSChanged","selectedReleaseChanged","ngPlaceholder","hideType","podTypes","fieldsElement","updateFields","podType","$destroy","maasObjForm","getType","driver_type","isPolling","req","input_type","replaceWith","maasPowerParameters","$sce","enableHttpProxy","usePeerProxy","proxy_type","releaseName","setText","maasReleaseOptions","onEraseChange","globalOptions","startTime","runTime","estimatedRunTime","scriptStatus","incrementCounter","start_date","setSeconds","seconds","floor","minutes","hours","new_counter","promise","$q","scriptType","allScripts","getScripts","script","tags_string","onTagAdding","refocus","tagsInput","tagsInputScope","isolateScope","eventHandlers","input","change","for_hardware","getIcon","SSHKeysManager","groupedKeys","authId","sourceTitles","lp","gh","upload","openRow","rowMode","trustAsHtml","close","canImportKeys","importKeys","protocol","auth_id","__all__","confirmDelete","keyMap","groupObj","keysource","keysourceKey","switchHasError","filteredSwitches","switch_","$switch_","$switches","$attr","isToggled","toggleMenu","ngType","valid_types","LogService","reloadPage","enableAutoReload","site","oldValue","onResize","windowWidth","innerWidth","foreign_objects","standardFilter","mappings","cpu","cores","ram","memory","pod-id","isInteger","matches","lowerTerm","exact","negate","parseFloat","_matches","terms","term","matched","mapFunc","substring","no_match","field2","aDate","bDate","getTime","regex","matcher","navigator","userAgent","UNITS","unit","converted","abs","toFixed","units","block_size","ipv4ToOctets","octets","part","pow","expandedAddress","groups","substr","ipv6ToGroups","jsonString","logging","logLevel","performance","_debug","debug","_log","_info","_warn","warn","formatMilliseconds","milliseconds","__log","args","unshift","METADATA_ACTIONS","CREATE","UPDATE","Manager","_pk","_batchKey","_name_field","_handler","_items","_type","_scopes","_loaded","_isLoading","_extraLoadDefers","_extraReloadDefers","_actionQueue","_selectedItems","_autoReload","_activeItem","_metadata","_metadataAttributes","_getIndexOfItem","pk_value","len","_replaceItemInArray","_removeItemByIdFromArray","_initBatchLoadParameters","_batchLoadItems","extra_func","defer","callLoad","callMethod","resolve","reject","_resolveDefers","defersArray","_rejectDefers","clear","reloadItems","_updateMetadata","_processItem","processActions","updatedIdx","updatedItem","updateItems","_reloadFunc","registerHandler","disableAutoReload","unregisterHandler","isLoaded","isLoading","_replaceItem","clearActiveItem","canProcessActions","onNotify","_getMetadataValue","metadatas","_addMetadataValue","count","_removeMetadataValue","_updateMetadataArrayEntry","added","oldArray","_updateMetadataValueEntry","_updateMetadataEntry","oldItem","func","defaultConnect","loadedManagers","loadedManager","tryParsingJSON","SyntaxError","getPrintableString","dict","showNames","factory","PollingManager","_polling","_nextPromise","_pollTimeout","_pollErrorTimeout","_pollEmptyTimeout","_poll","_pollAgain","pollTimeout","emptyFilter","_","getSplitSearch","fixedTerms","spanningParentheses","startIdx","searchTerms","_getFilterValueIndex","storedFilters","domainnamePattern","hostnamePattern","macPattern","ipv4Pattern","cidrMatcher","two","bits","domainname","macAddress","validateIPv4","validateIPv6","network","networkSplit","networkAddress","cidrBits","validateIPInRange","lowAddress","highAddress","ipOctets","lowOctets","highOctets","_data","_loadData","newData","connection_error","registerNotifier","NodesManager","service_ids","service_id","EventsManager","nodeId","_nodeId","_factory","_maxDays","_managers","node_id","max_days","destroyManager","setMaximumDays","_getManager","machine_actions","polling","nextPromise","device_actions","region_controller_actions","rack_controller_actions","region_and_rack_controller_actions","min_hwe_kernels","replaceData","oldData","isEmpty","bond_options","newPowerType","oldPowerType","newItem","release_options","_getInternalData","isDataLoaded","isDataPolling","waitingCount","storage_tags","NodeResultsManager","_node","hardware_type","_getStorageSubtext","deviceinfo","_updateObject","existing","updated","_addOrReplace","showing_results","showing_history","showing_menu","result_section","result_type","subtext","hardware_type_results","physical_blockdevice","hw_type","ret","_area","has_surfaced","script_id","data_type","state","updateInterfaceForm","volume_group_id","blockdevice_id","partition_size","$cookies","MSG_TYPE","RESPONSE_TYPE","callbacks","requests","requestId","websocket","autoReconnect","retryTimeout","defaultConnectDefer","handlers","notifiers","newRequestId","unregisterNotifier","buildSocket","WebSocket","_buildUrl","onopen","onerror","onclose","onmessage","onMessage","_getProtocol","host","port","proto","csrftoken","base","newPath","newPort","encodeURIComponent","opened","errored","msg","onResponse","request_id","remembered_request","request","handler","remember","toJson","getLargestRange","largest_range","ranges","equals","purpose","hasDynamicRange","matching","_authUser","authuser","_loadAuthUser","addRackController"],"mappings":"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","file":"maas-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3b6caf85bc6f1c91ffe1","/*\nGenerated file.  DO NOT EDIT.\n\nThis file was generated by jsenums.py,\non 2018-02-26 18:47:04.606436.\n*/\n\nYUI.add('maas.enums', function(Y) {\nY.log('loading maas.enums');\nvar module = Y.namespace('maas.enums');\n\nmodule.BMC_TYPE = {\n    \"BMC\": 0,\n    \"DEFAULT\": 0,\n    \"POD\": 1\n};\n\nmodule.BOND_LACP_RATE = {\n    \"FAST\": \"fast\",\n    \"SLOW\": \"slow\"\n};\n\nmodule.BOND_MODE = {\n    \"ACTIVE_BACKUP\": \"active-backup\",\n    \"BALANCE_ALB\": \"balance-alb\",\n    \"BALANCE_RR\": \"balance-rr\",\n    \"BALANCE_TLB\": \"balance-tlb\",\n    \"BALANCE_XOR\": \"balance-xor\",\n    \"BROADCAST\": \"broadcast\",\n    \"LINK_AGGREGATION\": \"802.3ad\"\n};\n\nmodule.BOND_XMIT_HASH_POLICY = {\n    \"ENCAP2_3\": \"encap2+3\",\n    \"ENCAP3_4\": \"encap3+4\",\n    \"LAYER2\": \"layer2\",\n    \"LAYER2_3\": \"layer2+3\",\n    \"LAYER3_4\": \"layer3+4\"\n};\n\nmodule.BOOT_RESOURCE_FILE_TYPE = {\n    \"ARCHIVE_TAR_XZ\": \"archive.tar.xz\",\n    \"BOOTLOADER\": \"bootloader\",\n    \"BOOT_DTB\": \"boot-dtb\",\n    \"BOOT_INITRD\": \"boot-initrd\",\n    \"BOOT_KERNEL\": \"boot-kernel\",\n    \"ROOT_DD\": \"root-dd\",\n    \"ROOT_DDBZ2\": \"root-dd.bz2\",\n    \"ROOT_DDGZ\": \"root-dd.gz\",\n    \"ROOT_DDRAW\": \"root-dd.raw\",\n    \"ROOT_DDTAR\": \"root-dd.tar\",\n    \"ROOT_DDTBZ\": \"root-dd.tar.bz2\",\n    \"ROOT_DDTGZ\": \"root-dd\",\n    \"ROOT_DDTXZ\": \"root-dd.tar.xz\",\n    \"ROOT_DDXZ\": \"root-dd.xz\",\n    \"ROOT_IMAGE\": \"root-image.gz\",\n    \"ROOT_TGZ\": \"root-tgz\",\n    \"SQUASHFS_IMAGE\": \"squashfs\"\n};\n\nmodule.BOOT_RESOURCE_TYPE = {\n    \"GENERATED\": 1,\n    \"SYNCED\": 0,\n    \"UPLOADED\": 2\n};\n\nmodule.CACHE_MODE_TYPE = {\n    \"WRITEAROUND\": \"writearound\",\n    \"WRITEBACK\": \"writeback\",\n    \"WRITETHROUGH\": \"writethrough\"\n};\n\nmodule.COMPONENT = {\n    \"IMPORT_PXE_FILES\": \"maas-import-pxe-files script\",\n    \"PSERV\": \"provisioning server\",\n    \"RACK_CONTROLLERS\": \"clusters\",\n    \"REGION_IMAGE_IMPORT\": \"Image importer\"\n};\n\nmodule.DEVICE_IP_ASSIGNMENT_TYPE = {\n    \"DYNAMIC\": \"dynamic\",\n    \"EXTERNAL\": \"external\",\n    \"STATIC\": \"static\"\n};\n\nmodule.ENDPOINT = {\n    \"API\": 0,\n    \"UI\": 1\n};\n\nmodule.FILESYSTEM_GROUP_TYPE = {\n    \"BCACHE\": \"bcache\",\n    \"LVM_VG\": \"lvm-vg\",\n    \"RAID_0\": \"raid-0\",\n    \"RAID_1\": \"raid-1\",\n    \"RAID_10\": \"raid-10\",\n    \"RAID_5\": \"raid-5\",\n    \"RAID_6\": \"raid-6\"\n};\n\nmodule.FILESYSTEM_TYPE = {\n    \"BCACHE_BACKING\": \"bcache-backing\",\n    \"BCACHE_CACHE\": \"bcache-cache\",\n    \"BTRFS\": \"btrfs\",\n    \"EXT2\": \"ext2\",\n    \"EXT4\": \"ext4\",\n    \"FAT32\": \"fat32\",\n    \"LVM_PV\": \"lvm-pv\",\n    \"RAID\": \"raid\",\n    \"RAID_SPARE\": \"raid-spare\",\n    \"RAMFS\": \"ramfs\",\n    \"SWAP\": \"swap\",\n    \"TMPFS\": \"tmpfs\",\n    \"VFAT\": \"vfat\",\n    \"XFS\": \"xfs\",\n    \"ZFSROOT\": \"zfsroot\"\n};\n\nmodule.HARDWARE_TYPE = {\n    \"CPU\": 1,\n    \"MEMORY\": 2,\n    \"NODE\": 0,\n    \"STORAGE\": 3\n};\n\nmodule.INTERFACE_LINK_TYPE = {\n    \"AUTO\": \"auto\",\n    \"DHCP\": \"dhcp\",\n    \"LINK_UP\": \"link_up\",\n    \"STATIC\": \"static\"\n};\n\nmodule.INTERFACE_TYPE = {\n    \"ALIAS\": \"alias\",\n    \"BOND\": \"bond\",\n    \"BRIDGE\": \"bridge\",\n    \"PHYSICAL\": \"physical\",\n    \"UNKNOWN\": \"unknown\",\n    \"VLAN\": \"vlan\"\n};\n\nmodule.IPADDRESS_FAMILY = {\n    \"IPv4\": 4,\n    \"IPv6\": 6\n};\n\nmodule.IPADDRESS_TYPE = {\n    \"AUTO\": 0,\n    \"DHCP\": 5,\n    \"DISCOVERED\": 6,\n    \"STICKY\": 1,\n    \"USER_RESERVED\": 4\n};\n\nmodule.IPRANGE_TYPE = {\n    \"DYNAMIC\": \"dynamic\",\n    \"RESERVED\": \"reserved\"\n};\n\nmodule.KEYS_PROTOCOL_TYPE = {\n    \"GH\": \"gh\",\n    \"LP\": \"lp\"\n};\n\nmodule.NODE_CREATION_TYPE = {\n    \"DYNAMIC\": 3,\n    \"MANUAL\": 2,\n    \"PRE_EXISTING\": 1\n};\n\nmodule.NODE_METADATA = {\n    \"PHYSICAL_HARDWARE_REV\": \"physical-hardware-rev\",\n    \"PHYSICAL_MFG_NAME\": \"physical-mfg-name\",\n    \"PHYSICAL_MODEL_NAME\": \"physical-model-name\",\n    \"PHYSICAL_NAME\": \"physical-name\",\n    \"PHYSICAL_SERIAL_NUM\": \"physical-serial-num\",\n    \"VENDOR_NAME\": \"vendor-name\"\n};\n\nmodule.NODE_PERMISSION = {\n    \"ADMIN\": \"admin_node\",\n    \"EDIT\": \"edit_node\",\n    \"LOCK\": \"lock_node\",\n    \"VIEW\": \"view_node\"\n};\n\nmodule.NODE_STATUS = {\n    \"ALLOCATED\": 10,\n    \"BROKEN\": 8,\n    \"COMMISSIONING\": 1,\n    \"DEFAULT\": 0,\n    \"DEPLOYED\": 6,\n    \"DEPLOYING\": 9,\n    \"DISK_ERASING\": 14,\n    \"ENTERING_RESCUE_MODE\": 17,\n    \"EXITING_RESCUE_MODE\": 19,\n    \"FAILED_COMMISSIONING\": 2,\n    \"FAILED_DEPLOYMENT\": 11,\n    \"FAILED_DISK_ERASING\": 15,\n    \"FAILED_ENTERING_RESCUE_MODE\": 18,\n    \"FAILED_EXITING_RESCUE_MODE\": 20,\n    \"FAILED_RELEASING\": 13,\n    \"FAILED_TESTING\": 22,\n    \"MISSING\": 3,\n    \"NEW\": 0,\n    \"READY\": 4,\n    \"RELEASING\": 12,\n    \"RESCUE_MODE\": 16,\n    \"RESERVED\": 5,\n    \"RETIRED\": 7,\n    \"TESTING\": 21\n};\n\nmodule.NODE_TYPE = {\n    \"DEFAULT\": 0,\n    \"DEVICE\": 1,\n    \"MACHINE\": 0,\n    \"RACK_CONTROLLER\": 2,\n    \"REGION_AND_RACK_CONTROLLER\": 4,\n    \"REGION_CONTROLLER\": 3\n};\n\nmodule.PARTITION_TABLE_TYPE = {\n    \"GPT\": \"GPT\",\n    \"MBR\": \"MBR\"\n};\n\nmodule.POWER_STATE = {\n    \"ERROR\": \"error\",\n    \"OFF\": \"off\",\n    \"ON\": \"on\",\n    \"UNKNOWN\": \"unknown\"\n};\n\nmodule.PRESEED_TYPE = {\n    \"COMMISSIONING\": \"commissioning\",\n    \"CURTIN\": \"curtin\",\n    \"ENLIST\": \"enlist\"\n};\n\nmodule.RDNS_MODE = {\n    \"DEFAULT\": 2,\n    \"DISABLED\": 0,\n    \"ENABLED\": 1,\n    \"RFC2317\": 2\n};\n\nmodule.RESULT_TYPE = {\n    \"COMMISSIONING\": 0,\n    \"INSTALLATION\": 1,\n    \"TESTING\": 2\n};\n\nmodule.SCRIPT_PARALLEL = {\n    \"ANY\": 2,\n    \"DISABLED\": 0,\n    \"INSTANCE\": 1\n};\n\nmodule.SCRIPT_STATUS = {\n    \"ABORTED\": 5,\n    \"DEGRADED\": 6,\n    \"FAILED\": 3,\n    \"FAILED_INSTALLING\": 8,\n    \"INSTALLING\": 7,\n    \"PASSED\": 2,\n    \"PENDING\": 0,\n    \"RUNNING\": 1,\n    \"TIMEDOUT\": 4\n};\n\nmodule.SCRIPT_TYPE = {\n    \"COMMISSIONING\": 0,\n    \"TESTING\": 2\n};\n\nmodule.SERVICE_STATUS = {\n    \"DEAD\": \"dead\",\n    \"DEGRADED\": \"degraded\",\n    \"OFF\": \"off\",\n    \"ON\": \"on\",\n    \"RUNNING\": \"running\",\n    \"UNKNOWN\": \"unknown\"\n};\n\nmodule.SIGNAL_STATUS = {\n    \"DEFAULT\": \"OK\",\n    \"FAILED\": \"FAILED\",\n    \"INSTALLING\": \"INSTALLING\",\n    \"OK\": \"OK\",\n    \"TESTING\": \"TESTING\",\n    \"TIMEDOUT\": \"TIMEDOUT\",\n    \"WORKING\": \"WORKING\"\n};\n\nmodule.USERDATA_TYPE = {\n    \"CURTIN\": \"curtin_userdata\",\n    \"ENLIST\": \"enlist_userdata\"\n};\n\n}, '0.1');\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/enums.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * IO module.\n *\n */\n\nYUI.add('maas.io', function(Y) {\n\nY.log('loading maas.io');\n\nvar module = Y.namespace('maas.io');\n\n/**\n * Return a Y.IO object to talk to the MAAS website.\n *\n * @method getIO\n */\nmodule.getIO = function() {\n    var io = new Y.IO();\n    // Populate the header used by Django for CSRF protection.\n    Y.io.header('X-CSRFTOKEN', Y.Cookie.get(\"csrftoken\"));\n    return io;\n};\n\n}, '0.1', {'requires': ['cookie', 'io-base']}\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/io.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * OS/Release seletion utilities.\n *\n * @module Y.maas.power_parameter\n */\n\nYUI.add('maas.os_distro_select', function(Y) {\n\nY.log('loading maas.os_distro_select');\nvar module = Y.namespace('maas.os_distro_select');\n\n// Only used to mockup io in tests.\nmodule._io = new Y.maas.io.getIO();\n\nvar OSReleaseWidget;\n\n/**\n * A widget class that modifies the viewable options of the release\n * field, based on the selected operating system field.\n *\n */\nOSReleaseWidget = function() {\n    OSReleaseWidget.superclass.constructor.apply(this, arguments);\n};\n\nOSReleaseWidget.NAME = 'os-release-widget';\n\nY.extend(OSReleaseWidget, Y.Widget, {\n\n   /**\n    * Initialize the widget.\n    * - cfg.srcNode is the node which will be updated when the selected\n    *   value of the 'os node' will change.\n    * - cfg.osNode is the node containing a 'select' element.  When\n    *   the selected element will change, the srcNode HTML will be\n    *   updated.\n    *\n    * @method initializer\n    */\n    initializer: function(cfg) {\n        this.initialSkip = true;\n    },\n\n   /**\n    * Bind the widget to events (to name 'event_name') generated by the given\n    * 'osNode'.\n    *\n    * @method bindTo\n    */\n    bindTo: function(osNode, event_name) {\n        var self = this;\n        if (!osNode) {\n            return;\n        }\n        Y.one(osNode).on(event_name, function(e) {\n            var osValue = e.currentTarget.get('value');\n            self.switchTo(osValue);\n        });\n        var osValue = Y.one(osNode).get('value');\n        self.switchTo(osValue);\n    },\n\n   /**\n    * React to a new value of the os node: update the HTML of\n    * 'srcNode'.\n    *\n    * @method switchTo\n    */\n    switchTo: function(newOSValue) {\n        var srcNode = this.get('srcNode');\n        var options = srcNode.all('option');\n        var selected = false;\n        options.each(function(option) {\n            var sel = this.modifyOption(option, newOSValue);\n            if (selected === false) {\n                selected = sel;\n            }\n        }, this);\n\n        // We skip selection on first load, as Django will already\n        // provide the users, current selection. Without this the\n        // current selection will be clobered.\n        if (this.initialSkip === true) {\n            this.initialSkip = false;\n            return;\n        }\n\n        // See if a selection was made, if not then we need\n        // to select the first visible as a default is not\n        // present.\n        if(!selected) {\n            this.selectVisableOption(options);\n        }\n    },\n\n   /**\n    * Modify an option to make it visible or hidden. Returns true\n    * if the method also make the selection active.\n    *\n    * @method modifyOption\n    */\n    modifyOption: function(option, newOSValue) {\n        var selected = false;\n        var value = option.get('value');\n        var split_value = value.split(\"/\");\n\n        // If \"Default OS\" is selected, then\n        // only show \"Default OS Release\".\n        if(newOSValue === '') {\n            if(value === '') {\n                option.removeClass('hidden');\n                option.set('selected', 'selected');\n            }\n            else {\n                option.addClass('hidden');\n            }\n        }\n        else {\n            if(split_value[0] === newOSValue) {\n                option.removeClass('hidden');\n                if(split_value[1] === '' && !this.initialSkip) {\n                    selected = true;\n                    option.set('selected', 'selected');\n                }\n            }\n            else {\n                option.addClass('hidden');\n            }\n        }\n        return selected;\n    },\n\n   /**\n    * Selected the first option that is not hidden.\n    *\n    * @method selectVisableOption\n    */\n    selectVisableOption: function(options) {\n        var first_option = null;\n        Y.Array.each(options, function(option) {\n            if(!option.hasClass('hidden')) {\n                if(first_option === null) {\n                    first_option = option;\n                }\n            }\n        });\n        if(first_option !== null) {\n            first_option.set('selected', 'selected');\n        }\n    }\n});\n\nmodule.OSReleaseWidget = OSReleaseWidget;\n\n}, '0.1', {'requires': ['widget', 'maas.io']}\n);\n\nYUI().use(\n  'maas.os_distro_select',\n  function (Y) {\n  Y.on('load', function() {\n    // Create OSDistroWidget so that the release field will be\n    // updated each time the value of the os field changes.\n    var releaseWidget = new Y.maas.os_distro_select.OSReleaseWidget({\n        srcNode: '#id_deploy-default_distro_series'\n        });\n    releaseWidget.bindTo(Y.one('#id_deploy-default_osystem'), 'change');\n    releaseWidget.render();\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/os_distro_select.js","/* Copyright 2012-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Utilities for the user preferences page.\n *\n * @module Y.maas.prefs\n */\n\nYUI.add('maas.prefs', function(Y) {\n\nY.log('loading maas.prefs');\nvar module = Y.namespace('maas.prefs');\n\n// Only used to mockup io in tests.\nmodule._io = new Y.maas.io.getIO();\n\nvar TokenWidget;\n\nTokenWidget = function() {\n    TokenWidget.superclass.constructor.apply(this, arguments);\n};\n\nTokenWidget.NAME = 'profile-widget';\n\nTokenWidget.ATTRS = {\n    // The number of tokens displayed.\n    nb_tokens: {\n        readOnly: true,\n        getter: function() {\n            return this.get('srcNode').all('.js-bundle').size();\n        }\n    }\n};\n\nY.extend(TokenWidget, Y.Widget, {\n\n    displayError: function(message) {\n        this.status_node.set('text', message);\n    },\n\n    initializer: function(cfg) {\n        this.create_link = Y.Node.create('<a />')\n            .set('href', '#')\n            .set('id','create_token')\n            .addClass('p-button--neutral')\n            .addClass('u-float--right')\n            .set('text', \"Generate MAAS key\");\n        this.status_node = Y.Node.create('<div />')\n            .set('id','create_error');\n        this.spinnerNode = Y.Node.create('<img />')\n            .addClass('u-animation--spin')\n            .addClass('icon')\n            .addClass('icon--loading');\n        this.get('srcNode').one('#token_creation_placeholder')\n            .append(this.create_link)\n            .append(this.status_node);\n    },\n\n    confirm: function(message) {\n        return confirm(message);\n    },\n\n    bindDeleteRow: function(row) {\n        var self = this;\n        var delete_link = row.one('a.js-delete-link');\n        delete_link.on('click', function(e) {\n            e.preventDefault();\n            if (self.confirm(\"Are you sure you want to delete this key?\")) {\n                self.deleteToken(row);\n            }\n        });\n    },\n\n    bindUI: function() {\n        var self = this;\n        this.create_link.on('click', function(e) {\n            e.preventDefault();\n            self.requestKeys();\n        });\n        Y.each(this.get('srcNode').all('.js-bundle'), function(row) {\n            self.bindDeleteRow(row);\n        });\n    },\n\n   /**\n    * Delete the token contained in the provided row.\n    * Call the API to delete the token and then remove the table row.\n    *\n    * @method deleteToken\n    */\n    deleteToken: function(row) {\n        var token_key = row.one('input').get('id');\n        var self = this;\n        var cfg = {\n            method: 'POST',\n            data: Y.QueryString.stringify({\n                op: 'delete_authorisation_token',\n                token_key: token_key\n                }),\n            sync: false,\n            on: {\n                start: Y.bind(self.showSpinner, self),\n                end: Y.bind(self.hideSpinner, self),\n                success: function(id, out) {\n                    row.remove();\n                 },\n                failure: function(id, out) {\n                    Y.log(out);\n                    if (out.status === 404) {\n                        self.displayError(\"The key has already been deleted.\");\n                    }\n                    else {\n                        self.displayError(\"Unable to delete the key.\");\n                    }\n                }\n            }\n        };\n        var request = module._io.send(\n            MAAS_config.uris.account_handler, cfg);\n    },\n\n    showSpinner: function() {\n        this.displayError('');\n        this.status_node.insert(this.spinnerNode, 'after');\n    },\n\n    hideSpinner: function() {\n        this.spinnerNode.remove();\n    },\n\n   /**\n    * Create a single string token from a key set.\n    *\n    * A key set is composed of 3 keys: consumer_key, token_key, token_secret.\n    * For an easy copy and paste experience, the string handed over to the\n    * user is a colon separated concatenation of these keys called 'token'.\n    *\n    * @method createTokenFromKeys\n    */\n    createTokenFromKeys: function(consumer_key, token_key, token_secret) {\n        return consumer_key + ':' + token_key + ':' + token_secret;\n    },\n\n   /**\n    * Add a token to the list of tokens.\n    *\n    * @method addToken\n    */\n    addToken: function(token, token_key) {\n        var list = this.get('srcNode').one('ul');\n        var row = Y.Node.create('<li />')\n            .addClass('js-bundle')\n            .addClass('u-equal-height')\n            .append(Y.Node.create('<div />')\n                .addClass('col-8')\n                .addClass('p-code-snippet')\n                    .append(Y.Node.create('<input />')\n                        .set('type', 'text')\n                        .addClass('p-code-snippet__input')\n                        .set('id', token_key)\n                        .set('value', token)))\n            .append(Y.Node.create(\n                '<div class=\"col-1 u-vertically-center\">' +\n                '<a class=\"p-tooltip p-tooltip--top-center js-delete-link\">' +\n                '<i class=\"p-icon--delete\"></i>' +\n                '<span class=\"p-tooltip__message\" role=\"tooltip\">' +\n                'Delete API key</span></a></div>'))\n       list.append(row);\n       this.bindDeleteRow(row);\n    },\n\n   /**\n    * Request a new OAuth key set from the API.\n    *\n    * @method requestKeys\n    */\n    requestKeys: function() {\n        var self = this;\n        var cfg = {\n            method: 'POST',\n            data: 'op=create_authorisation_token',\n            sync: false,\n            on: {\n                start: Y.bind(self.showSpinner, self),\n                end: Y.bind(self.hideSpinner, self),\n                success: function(id, out) {\n                    var keys;\n                    try {\n                        keys = JSON.parse(out.response);\n                    }\n                    catch(e) {\n                        // Parsing error.\n                        self.displayError('Unable to create a new token.');\n                    }\n                    // Generate a token from the keys.\n                    var token = self.createTokenFromKeys(\n                        keys.consumer_key, keys.token_key,\n                        keys.token_secret);\n                    // Add the new token to the list of tokens.\n                    self.addToken(token, keys.token_key);\n                 },\n                failure: function(id, out) {\n                    self.displayError('Unable to create a new token.');\n                }\n            }\n        };\n        var request = module._io.send(\n            MAAS_config.uris.account_handler, cfg);\n    }\n});\n\nmodule.TokenWidget = TokenWidget;\n\n}, '0.1', {'requires': ['widget', 'maas.io']}\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/prefs.js","/* Copyright 2012-2014 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Widget to expand (make visible) or fold (make invisible) a content div,\n * in response to clicks on a button link.\n *\n * Write your initial HTML for the visible state.  If the client does not\n * execute the script, the content div will be visible.  Upon initialization,\n * the widget immediately goes into its \"hidden\" state.\n *\n * Once the widget is set up, its reveal() method will toggle it between its\n * visible and invisible states.  The transition is animated with a sliding\n * effect.\n *\n * The widget fires a \"hiding\" event before hiding, and \"hidden\" after.\n * Similarly, it fires \"revealing\" before revealing and \"revealed\" after.\n *\n * Synonyms: expander, collapsible, foldable.\n *\n * @module Y.maas.reveal\n */\n\nYUI.add('maas.reveal', function(Y) {\n\nY.log('loading maas.reveal');\n\nvar module = Y.namespace('maas.reveal');\n\nvar Reveal;\n\nReveal = function(config) {\n    Reveal.superclass.constructor.apply(this, arguments);\n};\n\nReveal.NAME = 'reveal';\n\nReveal.ATTRS = {\n    /**\n     * DOM node for the content div.  This is the div that will be hidden\n     * or revealed.  It must contain exactly one tag.\n     *\n     * The widget will add the \"slider\" class to this node, and the \"content\"\n     * class to its child node.\n     *\n     * Hiding the content is done by setting the target node's height to zero;\n     * it's child node keeps its original size but becomes invisible.\n     *\n     * @attribute targetNode\n     * @type node\n     */\n    targetNode: {\n        value: null\n    },\n\n    /**\n     * DOM node for the button link that triggers the reveal.\n     *\n     * @attribute linkNode\n     * @type node\n     */\n    linkNode: {\n        value: null\n    },\n\n    /**\n     * The text the button link should contain when the content div is\n     * visible.\n     *\n     * @attribute hideText\n     * @type string\n     */\n    hideText: {\n        value: null\n    },\n\n    /**\n     * The text the button link should contain when the content div is hidden.\n     *\n     * @attribute showText\n     * @type string\n     */\n    showText: {\n        value: null\n    },\n\n    /**\n     * Skip animations?\n     *\n     * Use this when testing, to avoid wasting time on delays.\n     *\n     * @attribute quick\n     * @type bool\n     */\n    quick: {\n        value: false\n    }\n};\n\n\n// Return a style attribute for a node, as an int.\n// Any suffix to the number, such as the typical \"px,\" is ignored.\nfunction get_style_int(node, attribute) {\n    return parseInt(node.getStyle(attribute), 10);\n}\n\n\nY.extend(Reveal, Y.Widget, {\n    /**\n     * Standard YUI hook: prepare the DOM for the widget.\n     *\n     * @method renderUI\n     */\n    renderUI: function() {\n        var target = this.get('targetNode');\n        target.addClass('slider');\n        target.get('children').addClass('content');\n    },\n\n    /**\n     * Standard YUI hook: install event listeners for the widget.\n     *\n     * @method bindUI\n     */\n    bindUI: function() {\n        var self = this;\n        this.get('linkNode').on('click', function(e) {\n            e.preventDefault();\n            self.reveal();\n        });\n    },\n\n    /**\n     * Standard YUI hook: update UI to match the widget's state at the time\n     * it is rendered.\n     *\n     * The HTML is written in an expanded state, but during rendering, the\n     * widget immediately (and without animation) goes into its hidden state.\n     *\n     * @method syncUI\n     */\n    syncUI: function() {\n        this.fire(\"hiding\");\n        this.get('targetNode').setStyle('height', 0);\n        this.set_hidden_link(this.get('linkNode'));\n        this.fire(\"hidden\");\n    },\n\n    /**\n     * Is this widget currently in its visible state?\n     *\n     * @method is_visible\n     */\n    is_visible: function() {\n        return get_style_int(this.get('targetNode'), 'height') > 0;\n    },\n\n    /**\n     * Set link to its \"hidden\" state.\n     *\n     * @method set_hidden_link\n     */\n    set_hidden_link: function(link) {\n        var new_text = this.get('showText');\n        if (new_text !== null && new_text !== undefined) {\n            link.set('text', new_text);\n        }\n    },\n\n    /**\n     * Set link to its \"visible\" state.\n     *\n     * @method set_visible_link\n     */\n    set_visible_link: function(link) {\n        var new_text = this.get('hideText');\n        if (new_text !== null && new_text !== undefined) {\n            link.set('text', new_text);\n        }\n    },\n\n    /**\n     * Get the desired duration for an animation.\n     *\n     * Returns the suggested duration, unless the \"quick\" attribute is set\n     * in which case it returns a very brief duration.\n     *\n     * @method get_animation_duration\n     */\n    get_animation_duration: function(suggested_duration) {\n        if (this.get('quick')) {\n            return 0.01;\n        }\n        else {\n            return suggested_duration;\n        }\n    },\n\n    /**\n     * Create the animation for sliding in the content div.\n     *\n     * @method create_slide_in\n     */\n    create_slide_in: function(node, publisher) {\n        var anim = new Y.Anim({\n            node: node,\n            duration: this.get_animation_duration(0.3),\n            to: {height: 0}\n        });\n        anim.on('end', function() {\n            publisher.fire('hidden');\n        });\n        return anim;\n    },\n\n    /**\n     * Create the animation for sliding out the content div.\n     *\n     * @method create_slide_out\n     */\n    create_slide_out: function(node, publisher) {\n        // The target node contains exactly one node of content.  Its height\n        // is constant.  We calculate the appropriate expanded height for the\n        // target node from the height of the content node, plus marings and\n        // padding.\n        var content_node = node.one('.content');\n        var new_height = (\n            get_style_int(content_node, 'height') +\n            get_style_int(content_node, 'paddingTop') +\n            get_style_int(content_node, 'paddingBottom') +\n            get_style_int(content_node, 'marginTop') +\n            get_style_int(content_node, 'marginBottom'));\n        var anim = new Y.Anim({\n            node: node,\n            duration: this.get_animation_duration(0.2),\n            to: {height: new_height}\n        });\n        anim.on('end', function() {\n            publisher.fire('revealed');\n        });\n        return anim;\n    },\n\n    /**\n     * Toggle between the hidden and revealed states.\n     *\n     * @method reveal\n     */\n    reveal: function() {\n        var target = this.get('targetNode');\n        var link = this.get('linkNode');\n        if (this.is_visible()) {\n            this.fire('hiding');\n            this.create_slide_in(target, this).run();\n            this.set_hidden_link(link);\n        }\n        else {\n            this.fire('revealing');\n            this.create_slide_out(target, this).run();\n            this.set_visible_link(link);\n        }\n    }\n});\n\nmodule.Reveal = Reveal;\n\n}, '0.1', {'requires': ['widget', 'node', 'event', 'anim']});\n\nYUI().use('maas.reveal', function (Y) {\n  Y.on('domready', function() {\n    Y.all('.p-script-expander').each(function (script_entry) {\n      var script_expander = new Y.maas.reveal.Reveal({\n        targetNode: script_entry.one('.p-script-expander__content'),\n        linkNode: script_entry.one('.p-script-expander__trigger')\n        });\n      script_expander.render();\n    });\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/reveal.js","/* Copyright 2014-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * The shortpoll module provides the functionality to deal with updating\n * in-browser data by polling the server.\n *\n * @module shortpoll\n */\nYUI.add('maas.shortpoll', function(Y) {\n\nvar namespace = Y.namespace('maas.shortpoll');\n\n// Event fired when the short-polling request starts.\nnamespace.shortpoll_start_event = 'maas.shortpoll.start';\n\n// Event fired each time the short-polling request fails (to connect or\n// to parse the returned result).\nnamespace.shortpoll_fail_event = 'maas.shortpoll.failure';\n\n// After MAX_SHORT_DELAY_FAILED_ATTEMPTS failed connections (real failed\n// connections or connection getting an invalid return) separated\n// by SHORT_DELAY (millisec), wait LONG_DELAY (millisec) between\n// each failed connection.\nnamespace.MAX_SHORT_DELAY_FAILED_ATTEMPTS = 5;\nnamespace.SHORT_DELAY = 15 * 1000;  // 15 seconds.\nnamespace.LONG_DELAY = 3 * 60 * 1000;  // 3 minutes.\n\n// Ugly hack for tests, to prevent repolling.\nnamespace._repoll = true;\n\n// Overridden by tests.\nnamespace._io = new Y.maas.io.getIO();\n\n/**\n *\n * A ShortPollManager creates and manages a polling connection to the server\n * to fetch objects.\n *\n * @class ShortPollManager\n */\nfunction ShortPollManager(config) {\n    ShortPollManager.superclass.constructor.apply(this, arguments);\n}\n\nShortPollManager.NAME = \"shortPollManager\";\n\nShortPollManager.ATTRS = {\n    /**\n     * The URI to poll.\n     *\n     * @attribute uri\n     * @type string\n     */\n    uri: {\n        value: \"\"\n    },\n\n    /**\n     * The key with which to publish polled responses.\n     *\n     * @attribute eventKey\n     * @type string\n     */\n    eventKey: {\n        valueFn: function() {\n            return Y.guid(\"shortpoll_\");\n        }\n    },\n\n    /**\n     * The IO instance used.\n     *\n     * @attribute io\n     * @type Y.IO\n     */\n    io: {\n        readOnly: true,\n        getter: function() {\n            return namespace._io;\n        }\n    }\n};\n\nY.extend(ShortPollManager, Y.Base, {\n    initializer : function(cfg) {\n        this._started = false;\n        this._failed_attempts = 0;\n        this._sequence = 0;\n    },\n\n    successPoll : function (id, response) {\n        try {\n            var eventKey = this.get(\"eventKey\");\n            var data = Y.JSON.parse(response.responseText);\n            Y.fire(eventKey, data);\n            return true;\n        }\n        catch (e) {\n            Y.fire(namespace.shortpoll_fail_event, e);\n            return false;\n        }\n    },\n\n    failurePoll : function () {\n        Y.fire(namespace.shortpoll_fail_event);\n    },\n\n    /**\n     * Return the delay (milliseconds) to wait before trying to reconnect\n     * again after a failed connection.\n     *\n     * The rationale here is that:\n     * 1. We should not try to reconnect instantaneously after a failed\n     *    connection.\n     * 2. After a certain number of failed connections, we should set the\n     *    delay between two failed connection to a bigger number because the\n     *    server may be having problems.\n     *\n     * @method _pollDelay\n     */\n    _pollDelay : function() {\n        if (this._failed_attempts >=\n                namespace.MAX_SHORT_DELAY_FAILED_ATTEMPTS) {\n            return namespace.LONG_DELAY;\n        }\n        else {\n            return namespace.SHORT_DELAY;\n        }\n    },\n\n    /**\n     * Relaunch a connection to the server after a successful or\n     * a failed connection.\n     *\n     * @method repoll\n     * @param {Boolean} failed: whether or not the previous connection\n     *     has failed.\n     */\n    repoll : function(failed) {\n        if (failed) {\n            this._failed_attempts += 1;\n        }\n        else {\n            this._failed_attempts = 0;\n        }\n        if (namespace._repoll) {\n            var delay = this._pollDelay();\n            Y.later(delay, this, this.poll);\n            return delay;\n        }\n        else {\n            return this._pollDelay();\n        }\n    },\n\n    poll : function() {\n        var that = this;\n        var config = {\n            method: \"GET\",\n            sync: false,\n            on: {\n                failure: function(id, response) {\n                    if (Y.Lang.isValue(response) &&\n                        Y.Lang.isValue(response.status) &&\n                        (response.status === 408 ||\n                         response.status === 504)) {\n                        // If the error code is:\n                        // - 408 Request timeout\n                        // - 504 Gateway timeout\n                        // Then ignore the error and start\n                        // polling again.\n                        that.repoll(false);\n                    }\n                    else {\n                        that.failurePoll();\n                        that.repoll(true);\n                    }\n                },\n                success: function(id, response) {\n                    var success = that.successPoll(id, response);\n                    that.repoll(!success);\n                }\n            }\n        };\n        this._sequence = this._sequence + 1;\n        var poll_uri = this.get(\"uri\");\n        if (poll_uri.indexOf(\"?\") >= 0) {\n            poll_uri += \"&sequence=\" + this._sequence;\n        }\n        else {\n            poll_uri += \"?sequence=\" + this._sequence;\n        }\n        if (!this._started) {\n            Y.fire(namespace.shortpoll_start_event);\n            this._started = true;\n        }\n        this.get(\"io\").send(poll_uri, config);\n    }\n});\n\nnamespace.ShortPollManager = ShortPollManager;\n\n}, \"0.1\", {\"requires\":[\"base\", \"event\", \"json\", \"maas.io\"]});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/shortpoll.js","var MAASUI = MAASUI || {};\n\n/**\n * A set of framework-agnostic JavaScript utilities for the MAAS UI\n * @namespace MAASUI.utils\n * @return {Object} public methods\n */\nMAASUI.utils = (function() {\n  /**\n   * Run the supplied function when page content is loaded\n   * @namespace MAASUI.utils\n   * @method ready\n   * @param {Object} fn - the function to run\n   */\n  var ready = function(fn) {\n    if (document.attachEvent ? document.readyState === \"complete\" :\n        document.readyState !== \"loading\") {\n      fn();\n    } else {\n      document.addEventListener('DOMContentLoaded', fn);\n    }\n  };\n\n  /**\n   * Toggle a specified class on the provided element\n   * @namespace MAASUI.utils\n   * @method toggleClass\n   * @param {Object} el - a DOM element\n   * @param {String} className - the class name to toggle\n   * @return {bool} true for success or false if incorrect params are given\n   */\n  var toggleClass = function(el, className) {\n    if (typeof(el) != 'undefined' && el != null) {\n      if (el.classList) {\n        el.classList.toggle(className);\n      } else {\n        var classes = el.className.split(' ');\n        var existingIndex = classes.indexOf(className);\n        if (existingIndex >= 0) {\n          classes.splice(existingIndex, 1);\n        } else {\n          classes.push(className);\n        }\n        el.className = classes.join(' ');\n      }\n    } else {\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * Remove a specified class from the provided element\n   * @namespace MAASUI.utils\n   * @method removeClass\n   * @param {Object} el - a DOM element\n   * @param {String} className - the class name to remove\n   * @return {bool} true for success or false if incorrect params are given\n   */\n  var removeClass = function(el, className) {\n    if (typeof(el) != 'undefined' && el != null) {\n      if (el.classList) {\n        el.classList.remove(className);\n      } else {\n        el.className = el.className.replace(new RegExp(\n          '(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n      }\n    } else {\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * Check if a DOM element has a class\n   * @namespace MAASUI.utils\n   * @method hasClass\n   * @param {Object} el - a DOM element\n   * @param {String} className - the class name to check\n   * @return {bool} is the class present\n   */\n  var hasClass = function(el, className) {\n    var hasClass = false;\n\n    if (el.classList) {\n      hasClass = el.classList.contains(className);\n    } else {\n      hasClass = new RegExp(\n        '(^| )' + className + '( |$)', 'gi').test(el.className);\n    }\n\n    return hasClass;\n  };\n\n  /**\n   * Remove a specified class from the provided element\n   * @namespace MAASUI.utils\n   * @method addClass\n   * @param {Object} el - a DOM element\n   * @param {String} className - the class name to add\n   */\n  var addClass = function(el, className) {\n    if (!hasClass(el, className)) {\n      if (el.classList) {\n        el.classList.add(className);\n      } else {\n        el.className += ' ' + className;\n      }\n    }\n  };\n\n  return {\n    ready: ready,\n    toggleClass: toggleClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    addClass: addClass\n  };\n})();\n\n/**\n * A handler for toggleable menus\n * @namespace MAASUI.dropdown\n */\nMAASUI.dropdown = (function() {\n  var wrapperClassname = \"p-dropdown\";\n  var toggleClassName = \"p-dropdown__toggle\";\n  var menuClassName = \"p-dropdown__menu\";\n  var menuItemClassName =\"p-dropdown__item\";\n  var activeClassName = \"active\"\n  var dropdowns;\n\n  /**\n   * Initialise the menu and toggle events\n   * @namespace MAASUI.dropdown\n   * @method init\n   */\n  var init = function() {\n    dropdowns = document.querySelectorAll('.' + wrapperClassname);\n\n    Array.prototype.forEach.call(dropdowns, function(dropdown, i) {\n      // Add click event for dropdown toggling.\n      dropdown.addEventListener(\"click\", click);\n\n      // Add click event to all dropdown links to close menus.\n      var sublinks = dropdown.querySelectorAll('.' + menuItemClassName);\n      Array.prototype.forEach.call(sublinks, function(link, i) {\n        link.addEventListener(\"click\", closeAllMenus);\n      });\n\n      // Add click event for whole document to close all menus when\n      // anything else is clicked.\n      document.addEventListener('click', function(event) {\n        var isClickInside = dropdown.contains(event.target);\n        if (!isClickInside) {\n          closeAllMenus();\n        }\n      });\n    });\n\n    return true;\n  }\n\n  /**\n   * A handler for a toggle menu click (intended for use on click events)\n   * @namespace MAASUI.dropdown\n   * @method click\n   * @param {Object} event - a click event\n   */\n  var click = function(event) {\n    if (MAASUI.utils.hasClass(this, activeClassName)) {\n      closeAllMenus();\n    } else {\n      openMenu(this);\n    }\n    event.stopPropagation();\n  }\n\n  /**\n   * Opens the menu for the provided dropdown element\n   * @namespace MAASUI.dropdown\n   * @method openMenu\n   * @param {Object} el - the dropdown element\n   */\n  var openMenu = function(el) {\n    closeAllMenus();\n    MAASUI.utils.addClass(el, activeClassName);\n  }\n\n  /**\n   * Closes all open menus and deactivates all toggles\n   * @namespace MAASUI.dropdown\n   * @method closeAllMenus\n   * @param {Object} event - a click event (optional)\n   */\n  var closeAllMenus = function(event) {\n    Array.prototype.forEach.call(dropdowns, function(dropdown, i) {\n      //Deactive all toggle buttons\n      MAASUI.utils.removeClass(dropdown, activeClassName);\n    });\n\n    if (typeof event != 'undefined') {\n      event.stopPropagation();\n    }\n  }\n\n  return {\n    init: init\n  };\n})();\n\nMAASUI.utils.ready(MAASUI.dropdown.init);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/ui/maas-ui.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Module\n *\n * Initializes the MAAS module with its required dependencies and sets up\n * the interpolater to use '{$' and '$}' instead of '{{' and '}}' as this\n * conflicts with Django templates.\n */\n\nangular.module('MAAS',\n    ['ngRoute', 'ngCookies', 'ngSanitize', 'ngTagsInput', 'sticky',\n    'vs-repeat']).config(\n    function($interpolateProvider, $routeProvider, $httpProvider) {\n        $interpolateProvider.startSymbol('{$');\n        $interpolateProvider.endSymbol('$}');\n\n        // Set the $httpProvider to send the csrftoken in the header of any\n        // http request.\n        $httpProvider.defaults.xsrfCookieName = 'csrftoken';\n        $httpProvider.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n        // Helper that wrappers the templateUrl to append the files version\n        // to the path. Used to override client cache.\n        function versionedPath(path) {\n            return path + \"?v=\" + MAAS_config.files_version;\n        }\n\n        // Setup routes only for the index page, all remaining pages should\n        // not use routes. Once all pages are converted to using Angular this\n        // will go away. Causing the page to never have to reload.\n        var href = angular.element(\"base\").attr('href');\n        var path = document.location.pathname;\n        if(path[path.length - 1] !== '/') {\n            path += '/';\n        }\n        if(path === href) {\n            var routes = $routeProvider.\n                when('/intro', {\n                    templateUrl: versionedPath(\n                        'static/partials/intro.html'),\n                    controller: 'IntroController'\n                }).\n                when('/intro/user', {\n                    templateUrl: versionedPath(\n                        'static/partials/intro-user.html'),\n                    controller: 'IntroUserController'\n                }).\n                when('/nodes', {\n                    templateUrl: versionedPath(\n                        'static/partials/nodes-list.html'),\n                    controller: 'NodesListController'\n                }).\n                when('/node/:type/:system_id/:result_type/:id', {\n                    templateUrl: versionedPath(\n                        'static/partials/node-result.html'),\n                    controller: 'NodeResultController'\n                }).\n                when('/node/:type/:system_id/events', {\n                    templateUrl: versionedPath(\n                        'static/partials/node-events.html'),\n                    controller: 'NodeEventsController'\n                }).\n                when('/node/:system_id/events', {\n                    templateUrl: versionedPath(\n                        'static/partials/node-events.html'),\n                    controller: 'NodeEventsController'\n                }).\n                when('/node/:type/:system_id', {\n                    templateUrl: versionedPath(\n                        'static/partials/node-details.html'),\n                    controller: 'NodeDetailsController'\n                }).\n                when('/node/:system_id', {\n                    templateUrl: versionedPath(\n                        'static/partials/node-details.html'),\n                    controller: 'NodeDetailsController'\n                }).\n                when('/pods', {\n                    templateUrl: versionedPath(\n                        'static/partials/pods-list.html'),\n                    controller: 'PodsListController'\n                }).\n                when('/pod/:id', {\n                    templateUrl: versionedPath(\n                        'static/partials/pod-details.html'),\n                    controller: 'PodDetailsController'\n                }).\n                when('/images', {\n                    templateUrl: versionedPath(\n                        'static/partials/images.html'),\n                    controller: 'ImagesController'\n                }).\n                when('/domains', {\n                    templateUrl: versionedPath(\n                        'static/partials/domains-list.html'),\n                    controller: 'DomainsListController'\n                }).\n                when('/domain/:domain_id', {\n                    templateUrl: versionedPath(\n                        'static/partials/domain-details.html'),\n                    controller: 'DomainDetailsController'\n                }).\n                when('/space/:space_id', {\n                    templateUrl: versionedPath(\n                        'static/partials/space-details.html'),\n                    controller: 'SpaceDetailsController'\n                }).\n                when('/fabric/:fabric_id', {\n                    templateUrl: versionedPath(\n                        'static/partials/fabric-details.html'),\n                    controller: 'FabricDetailsController'\n                }).\n                when('/subnets', {\n                    redirectTo: '/networks?by=fabric'\n                }).\n                when('/networks', {\n                    templateUrl: versionedPath(\n                        'static/partials/networks-list.html'),\n                    controller: 'NetworksListController',\n                    reloadOnSearch: false\n                }).\n                when('/subnet/:subnet_id', {\n                    templateUrl: versionedPath(\n                        'static/partials/subnet-details.html'),\n                    controller: 'SubnetDetailsController'\n                }).\n                when('/vlan/:vlan_id', {\n                    templateUrl: versionedPath(\n                        'static/partials/vlan-details.html'),\n                    controller: 'VLANDetailsController',\n                    controllerAs: 'vlanDetails'\n                }).\n                when('/settings/:section', {\n                    templateUrl: versionedPath(\n                        'static/partials/settings.html'),\n                    controller: 'SettingsController'\n                }).\n                when('/zone/:zone_id', {\n                    templateUrl: versionedPath(\n                        'static/partials/zone-details.html'),\n                    controller: 'ZoneDetailsController'\n                }).\n                when('/zones', {\n                    templateUrl: versionedPath(\n                        'static/partials/zones-list.html'),\n                    controller: 'ZonesListController',\n                    reloadOnSearch: false\n                });\n            if(MAAS_config.superuser) {\n                // Only superuser's can access the dashboard at the moment.\n                routes = routes.when('/dashboard', {\n                    templateUrl: versionedPath(\n                        'static/partials/dashboard.html'),\n                    controller: 'DashboardController'\n                }).\n                otherwise({\n                    redirectTo: '/dashboard'\n                });\n            } else {\n                routes = routes.otherwise({\n                    redirectTo: '/nodes'\n                });\n            }\n        }\n    });\n\n// Force users to #/intro when it has not been completed.\nangular.module('MAAS').run(['$rootScope', '$location',\n    function ($rootScope, $location) {\n        $rootScope.$on('$routeChangeStart', function(event, next, current) {\n            if(!MAAS_config.completed_intro) {\n                if(next.controller !== 'IntroController') {\n                    $location.path('/intro');\n                }\n            } else if (!MAAS_config.user_completed_intro) {\n                if(next.controller !== 'IntroUserController') {\n                    $location.path('/intro/user');\n                }\n            }\n        });\n    }]);\n\n// Send pageview to Google Anayltics when the route has changed.\nangular.module('MAAS').run(['$rootScope',\n    function ($rootScope) {\n        window.ga = window.ga || function() {\n            (window.ga.q = window.ga.q || []).push(arguments);\n        };\n        window.ga.l = +new Date();\n        window.ga('create', 'UA-1018242-63', 'auto', {\n          userId: MAAS_config.analytics_user_id\n        });\n        window.ga('set', 'dimension1', MAAS_config.version);\n        window.ga('set', 'dimension2', MAAS_config.uuid);\n        $rootScope.$on('$routeChangeSuccess', function() {\n            var path = window.location.pathname + window.location.hash;\n            window.ga('send', 'pageview', path);\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/maas.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Add Device Controller\n */\n\nangular.module('MAAS').controller('AddDeviceController', [\n    '$scope', 'DevicesManager', 'SubnetsManager', 'DomainsManager',\n    'ManagerHelperService', 'ValidationService', function(\n        $scope, DevicesManager, SubnetsManager, DomainsManager,\n        ManagerHelperService, ValidationService) {\n\n        // Set the addDeviceScope in the parent, so it can call functions\n        // in this controller.\n        var parentScope = $scope.$parent;\n        parentScope.addDeviceScope = $scope;\n\n        // Set initial values.\n        $scope.subnets = SubnetsManager.getItems();\n        $scope.domains = DomainsManager.getItems();\n        $scope.viewable = false;\n        $scope.error = null;\n\n        // Device ip assignment options.\n        $scope.ipAssignments = [\n            {\n                name: \"external\",\n                title: \"External\"\n            },\n            {\n                name: \"dynamic\",\n                title: \"Dynamic\"\n            },\n            {\n                name: \"static\",\n                title: \"Static\"\n            }\n        ];\n\n        // Makes a new interface.\n        function makeInterface() {\n            return {\n                mac: \"\",\n                ipAssignment: null,\n                subnetId: null,\n                ipAddress: \"\"\n            };\n        }\n\n        // Makes a new device.\n        function newDevice(cloneDevice) {\n            if(angular.isObject(cloneDevice)) {\n                return {\n                    name: \"\",\n                    domain: cloneDevice.domain,\n                    interfaces: [makeInterface()]\n                };\n            } else {\n                return {\n                    name: \"\",\n                    domain: DomainsManager.getDefaultDomain(),\n                    interfaces: [makeInterface()]\n                };\n            }\n        }\n\n        // Input values.\n        $scope.device = null;\n\n        // Converts the device information from how it is held in the UI to\n        // how it is handled over the websocket.\n        function convertDeviceToProtocol(device) {\n            // Return the new object.\n            var convertedDevice = {\n                hostname: device.name,\n                domain: device.domain,\n                primary_mac: device.interfaces[0].mac,\n                extra_macs: [],\n                interfaces: []\n            };\n            var i;\n            for(i = 1; i < device.interfaces.length; i++) {\n                convertedDevice.extra_macs.push(device.interfaces[i].mac);\n            }\n            angular.forEach(device.interfaces, function(nic) {\n                convertedDevice.interfaces.push({\n                    mac: nic.mac,\n                    ip_assignment: nic.ipAssignment.name,\n                    ip_address: nic.ipAddress,\n                    \"subnet\": nic.subnetId\n                });\n            });\n            return convertedDevice;\n        }\n\n        // Called by the parent scope when this controller is viewable.\n        $scope.show = function() {\n            // Exit early if already viewable.\n            if($scope.viewable) {\n                return;\n            }\n            $scope.device = newDevice();\n            $scope.viewable = true;\n        };\n\n        // Called by the parent scope when this controller is hidden.\n        $scope.hide = function() {\n            $scope.viewable = false;\n\n            // Emit the hidden event.\n            $scope.$emit('addDeviceHidden');\n        };\n\n        // Returns true if the name is in error.\n        $scope.nameHasError = function() {\n            // If the name is empty don't show error.\n            if($scope.device === null || $scope.device.name.length === 0) {\n                return false;\n            }\n            return !ValidationService.validateHostname($scope.device.name);\n        };\n\n        // Returns true if the MAC is in error.\n        $scope.macHasError = function(deviceInterface) {\n            // If the MAC is empty don't show error.\n            if(deviceInterface.mac.length === 0) {\n                return false;\n            }\n            // If the MAC is invalid show error.\n            if(!ValidationService.validateMAC(deviceInterface.mac)) {\n                return true;\n            }\n            // If the MAC is the same as another MAC show error.\n            var i;\n            for(i = 0; i < $scope.device.interfaces.length; i++) {\n                var isSelf = $scope.device.interfaces[i] === deviceInterface;\n                if(!isSelf &&\n                    $scope.device.interfaces[i].mac === deviceInterface.mac) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Returns true if the IP address is in error.\n        $scope.ipHasError = function(deviceInterface) {\n            // If the IP is empty don't show error.\n            if(deviceInterface.ipAddress.length === 0) {\n                return false;\n            }\n            // If ip address is invalid, then exit early.\n            if(!ValidationService.validateIP(deviceInterface.ipAddress)) {\n                return true;\n            }\n            var i, inNetwork;\n            if(angular.isObject(deviceInterface.ipAssignment)){\n                if(deviceInterface.ipAssignment.name === \"external\") {\n                    // External IP address cannot be within a known subnet.\n                    for(i = 0; i < $scope.subnets.length; i++) {\n                        inNetwork = ValidationService.validateIPInNetwork(\n                            deviceInterface.ipAddress,\n                            $scope.subnets[i].cidr);\n                        if(inNetwork) {\n                            return true;\n                        }\n                    }\n                } else if(deviceInterface.ipAssignment.name === \"static\" &&\n                    angular.isNumber(deviceInterface.subnetId)) {\n                    // Static IP address must be within a subnet.\n                    var subnet = SubnetsManager.getItemFromList(\n                        deviceInterface.subnetId);\n                    inNetwork = ValidationService.validateIPInNetwork(\n                        deviceInterface.ipAddress, subnet.cidr);\n                    if(!inNetwork) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n\n        // Return true when the device is missing information or invalid\n        // information.\n        $scope.deviceHasError = function() {\n            if($scope.device === null || $scope.device.name === '' ||\n                    $scope.nameHasError()) {\n                return true;\n            }\n\n            var i;\n            for(i = 0; i < $scope.device.interfaces.length; i++) {\n                var deviceInterface = $scope.device.interfaces[i];\n                if(deviceInterface.mac === '' ||\n                    $scope.macHasError(deviceInterface) ||\n                    !angular.isObject(deviceInterface.ipAssignment)) {\n                    return true;\n                }\n                var externalIpError = (\n                    deviceInterface.ipAssignment.name === \"external\" && (\n                        deviceInterface.ipAddress === '' ||\n                        $scope.ipHasError(deviceInterface)));\n                var staticIpError = (\n                    deviceInterface.ipAssignment.name === \"static\" && (\n                        !angular.isNumber(deviceInterface.subnetId) ||\n                        $scope.ipHasError(deviceInterface)));\n                if(externalIpError || staticIpError) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Adds new interface to device.\n        $scope.addInterface = function() {\n            $scope.device.interfaces.push(makeInterface());\n        };\n\n        // Returns true if the first interface in the device interfaces array.\n        $scope.isPrimaryInterface = function(deviceInterface) {\n            return $scope.device.interfaces.indexOf(deviceInterface) === 0;\n        };\n\n        // Removes the interface from the devices interfaces array.\n        $scope.deleteInterface = function(deviceInterface) {\n            // Don't remove the primary.\n            if($scope.isPrimaryInterface(deviceInterface)) {\n                return;\n            }\n            $scope.device.interfaces.splice(\n                $scope.device.interfaces.indexOf(deviceInterface), 1);\n        };\n\n        // Called when cancel clicked.\n        $scope.cancel = function() {\n            $scope.error = null;\n            $scope.device = newDevice();\n            $scope.hide();\n        };\n\n        // Called when save is clicked.\n        $scope.save = function(addAnother) {\n            // Do nothing if device in error.\n            if($scope.deviceHasError()) {\n                return;\n            }\n\n            // Clear the error so it can be set again, if it fails to save\n            // the device.\n            $scope.error = null;\n\n            // Create the device.\n            var device = convertDeviceToProtocol($scope.device);\n            DevicesManager.create(device).then(function(device) {\n                if(addAnother) {\n                    $scope.device = newDevice($scope.device);\n                } else {\n                    $scope.device = newDevice();\n                    // Hide the scope if not adding another.\n                    $scope.hide();\n                }\n            }, function(error) {\n                $scope.error =\n                    ManagerHelperService.parseValidationError(error);\n            });\n        };\n\n        // Load subnets to get the available subnets.\n        ManagerHelperService.loadManagers(\n            $scope, [SubnetsManager, DomainsManager]).then(function() {\n                // Initial device.\n                $scope.device = newDevice();\n            });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/add_device.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Add Domain Controller\n */\n\nangular.module('MAAS').controller('AddDomainController', [\n    '$scope', 'DomainsManager', 'ManagerHelperService',\n    'ValidationService', function($scope, DomainsManager,\n        ManagerHelperService, ValidationService) {\n\n        // Set the addDomainScope in the parent, so it can call functions\n        // in this controller.\n        var parentScope = $scope.$parent;\n        parentScope.addDomainScope = $scope;\n\n        // Set initial values.\n        $scope.viewable = false;\n        $scope.error = null;\n\n        // Makes a new domain.\n        function makeDomain() {\n            return {\n                name: \"\",\n                authoritative: true\n            };\n        }\n\n        // Initial domain.\n        $scope.domain = makeDomain();\n\n        // Converts the domain information from how it is held in the UI to\n        // how it is handled over the websocket.  Since they're identical, we\n        // just return a copy: some day, they might be different, so we retain\n        // the function against that day.\n        function convertDomainToProtocol(domain) {\n            return angular.copy(domain);\n        }\n\n        // Called by the parent scope when this controller is viewable.\n        $scope.show = function() {\n            // Exit early if already viewable.\n            if($scope.viewable) {\n                return;\n            }\n            $scope.domain = makeDomain();\n            $scope.viewable = true;\n        };\n\n        // Called by the parent scope when this controller is hidden.\n        $scope.hide = function() {\n            $scope.viewable = false;\n\n            // Emit the hidden event.\n            $scope.$emit('addDomainHidden');\n        };\n\n        // Returns true if the name is in error.\n        $scope.nameHasError = function() {\n            // If the name is empty don't show error.\n            if($scope.domain.name.length === 0) {\n                return false;\n            }\n            return !ValidationService.validateDomainName($scope.domain.name);\n        };\n\n        // Return true when the domain is missing information or invalid\n        // information.\n        $scope.domainHasError = function() {\n            if($scope.domain.name === '' || $scope.nameHasError()) {\n                return true;\n            }\n\n            return false;\n        };\n\n        // Called when cancel clicked.\n        $scope.cancel = function() {\n            $scope.error = null;\n            $scope.domain = makeDomain();\n            $scope.hide();\n        };\n\n        // Called when save is clicked.\n        $scope.save = function(addAnother) {\n            // Do nothing if domain in error.\n            if($scope.domainHasError()) {\n                return;\n            }\n\n            // Clear the error so it can be set again, if it fails to save\n            // the domain.\n            $scope.error = null;\n\n            // Create the domain.\n            var domain = convertDomainToProtocol($scope.domain);\n            DomainsManager.create(domain).then(function() {\n                $scope.domain = makeDomain();\n                if(!addAnother) {\n                    // Hide the scope if not adding another.\n                    $scope.hide();\n                }\n            }, function(error) {\n                $scope.error =\n                    ManagerHelperService.parseValidationError(error);\n            });\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/add_domain.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Add Hardware Controller\n */\n\nangular.module('MAAS').controller('AddHardwareController', [\n    '$scope', '$http', 'ZonesManager', 'MachinesManager',\n    'GeneralManager', 'DomainsManager', 'RegionConnection',\n    'ManagerHelperService', 'ValidationService', function(\n        $scope, $http, ZonesManager, MachinesManager,\n        GeneralManager, DomainsManager, RegionConnection,\n        ManagerHelperService, ValidationService) {\n\n        // Set the addHardwareScope in the parent, so it can call functions\n        // in this controller.\n        var parentScope = $scope.$parent;\n        parentScope.addHardwareScope = $scope;\n\n        // Set initial values.\n        $scope.viewable = false;\n        $scope.model = 'machine';\n        $scope.zones = ZonesManager.getItems();\n        $scope.domains = DomainsManager.getItems();\n        $scope.architectures = GeneralManager.getData(\"architectures\");\n        $scope.hwe_kernels = GeneralManager.getData(\"hwe_kernels\");\n        $scope.default_min_hwe_kernel = GeneralManager.getData(\n            \"default_min_hwe_kernel\");\n        $scope.power_types = GeneralManager.getData(\"power_types\");\n        $scope.error = null;\n        $scope.macAddressRegex = /^([0-9A-F]{2}[::]){5}([0-9A-F]{2})$/gmi;\n\n        // Input values.\n        $scope.machine = null;\n        $scope.chassis = null;\n\n        // Hard coded chassis types. This is because there is no method in\n        // MAAS to get a full list of supported chassis. This needs to be\n        // fixed ASAP.\n        var virshFields = [\n            {\n                name: 'hostname',\n                label: 'Address',\n                field_type: 'string',\n                \"default\": '',  // Using \"default\" to make lint happy.\n                choices: [],\n                required: true\n            },\n            {\n                name: 'password',\n                label: 'Password',\n                field_type: 'string',\n                \"default\": '',\n                choices: [],\n                required: false\n            },\n            {\n                name: 'prefix_filter',\n                label: 'Prefix filter',\n                field_type: 'string',\n                \"default\": '',\n                choices: [],\n                required: false\n            }\n        ];\n        $scope.chassisPowerTypes = [\n            {\n                name: 'mscm',\n                description: 'Moonshot Chassis Manager',\n                fields: [\n                    {\n                        name: 'hostname',\n                        label: 'Host',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'username',\n                        label: 'Username',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'password',\n                        label: 'Password',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'powerkvm',\n                description: 'PowerKVM',\n                fields: virshFields\n            },\n            {\n                name: 'recs_box',\n                description: 'Christmann RECS|Box',\n                fields: [\n                    {\n                        name: 'hostname',\n                        label: 'Hostname',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'port',\n                        label: 'Port',\n                        field_type: 'string',\n                        \"default\": '80',\n                        choices: [],\n                        required: false\n                    },\n                    {\n                        name: 'username',\n                        label: 'Username',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'password',\n                        label: 'Password',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'seamicro15k',\n                description: 'SeaMicro 15000',\n                fields: [\n                    {\n                        name: 'hostname',\n                        label: 'Hostname',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'username',\n                        label: 'Username',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'password',\n                        label: 'Password',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'power_control',\n                        label: 'Power Control',\n                        field_type: 'choice',\n                        \"default\": 'restapi2',\n                        choices: [\n                            ['restapi2', 'REST API V2.0'],\n                            ['restapi', 'REST API V0.9'],\n                            ['ipmi', 'IPMI']\n                        ],\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'ucsm',\n                description: 'UCS Chassis Manager',\n                fields: [\n                    {\n                        name: 'hostname',\n                        label: 'URL',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'username',\n                        label: 'Username',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'password',\n                        label: 'Password',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'virsh',\n                description: 'Virsh (virtual systems)',\n                fields: virshFields\n            },\n            {\n                name: 'vmware',\n                description: 'VMware',\n                fields: [\n                    {\n                        name: 'hostname',\n                        label: 'Host',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'username',\n                        label: 'Username',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'password',\n                        label: 'Password',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: true\n                    },\n                    {\n                        name: 'prefix_filter',\n                        label: 'Prefix filter',\n                        field_type: 'string',\n                        \"default\": '',\n                        choices: [],\n                        required: false\n                    }\n                ]\n            }\n        ];\n\n        // Get the default zone from the loaded zones.\n        function defaultZone() {\n            if($scope.zones.length === 0) {\n                return null;\n            } else {\n                return $scope.zones[0];\n            }\n        }\n\n        // Get the default architecture from the loaded architectures.\n        function defaultArchitecture() {\n            if($scope.architectures.length === 0) {\n                return '';\n            } else {\n                // Return amd64/generic first if available.\n                var i;\n                for(i = 0; i < $scope.architectures.length; i++) {\n                    if($scope.architectures[i] === \"amd64/generic\") {\n                        return $scope.architectures[i];\n                    }\n                }\n                return $scope.architectures[0];\n            }\n        }\n\n        // Return a new MAC address object.\n        function newMAC() {\n            return {\n                mac: '',\n                error: false\n            };\n        }\n\n        // Return a new machine object.\n        function newMachine(cloneMachine) {\n            // Clone the machine instead of just creating a new one.\n            // This helps the user by already having the previous selected\n            // items selected for the new machine.\n            if(angular.isObject(cloneMachine)) {\n                return {\n                    name: '',\n                    domain: cloneMachine.domain,\n                    macs: [newMAC()],\n                    zone: cloneMachine.zone,\n                    architecture: cloneMachine.architecture,\n                    min_hwe_kernel: cloneMachine.min_hwe_kernel,\n                    power: {\n                        type: cloneMachine.power.type,\n                        parameters: {}\n                    }\n                };\n            }\n\n            // No clone machine. So create a new blank machine.\n            return {\n                name: '',\n                domain: DomainsManager.getDefaultDomain(),\n                macs: [newMAC()],\n                zone: defaultZone(),\n                architecture: defaultArchitecture(),\n                min_hwe_kernel: $scope.default_min_hwe_kernel.text,\n                power: {\n                    type: null,\n                    parameters: {}\n                }\n            };\n        }\n\n        // Return a new chassis object.\n        function newChassis(cloneChassis) {\n            // Clone the chassis instead of just creating a new one.\n            // This helps the user by already having the previous selected\n            // items selected for the new machine.\n            if(angular.isObject(cloneChassis)) {\n                return {\n                    domain: cloneChassis.domain,\n                    power: {\n                        type: null,\n                        parameters: {}\n                    }\n                };\n            } else {\n                return {\n                    domain: DomainsManager.getDefaultDomain(),\n                    power: {\n                        type: null,\n                        parameters: {}\n                    }\n                };\n            }\n        }\n\n        // Converts the machine information from how it is held in the UI to\n        // how it is handled over the websocket.\n        function convertMachineToProtocol(machine) {\n            // Convert the mac addresses.\n            var macs = angular.copy(machine.macs);\n            var pxe_mac = macs.shift().mac;\n            var extra_macs = macs.map(function(mac) { return mac.mac; });\n\n            // Return the new object.\n            return {\n                hostname: machine.name,\n                domain: machine.domain,\n                architecture: machine.architecture,\n                min_hwe_kernel: machine.min_hwe_kernel,\n                pxe_mac: pxe_mac,\n                extra_macs: extra_macs,\n                power_type: machine.power.type.name,\n                power_parameters: angular.copy(machine.power.parameters),\n                zone: {\n                    id: machine.zone.id,\n                    name: machine.zone.name\n                }\n            };\n        }\n\n        // Validate that all the parameters are there for the given power type.\n        function powerParametersHasError(power_type, parameters) {\n            var i;\n            for(i = 0; i < power_type.fields.length; i++) {\n                var field = power_type.fields[i];\n                var value = parameters[field.name];\n                if(field.required) {\n                    if(angular.isUndefined(value) || value === '') {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        // Called by the parent scope when this controller is viewable.\n        $scope.show = function(mode) {\n            // Change the mode.\n            if($scope.mode !== mode) {\n                if($scope.mode === \"machine\") {\n                    $scope.machine = newMachine();\n                } else if($scope.mode === \"chassis\") {\n                    $scope.chassis = newChassis();\n                }\n                $scope.error = null;\n                $scope.mode = mode;\n            }\n\n            // Exit early if alreayd viewable.\n            if($scope.viewable) {\n                return;\n            }\n            $scope.viewable = true;\n\n            // Start the polling of architectures.\n            GeneralManager.startPolling($scope, \"architectures\");\n\n            // Start the polling of hwe_kernels.\n            GeneralManager.startPolling($scope, \"hwe_kernels\");\n\n            // Start the polling of power_types.\n            GeneralManager.startPolling($scope, \"power_types\");\n        };\n\n        // Called by the parent scope when this controller is hidden.\n        $scope.hide = function() {\n            $scope.viewable = false;\n\n            // Stop the polling of architectures.\n            GeneralManager.stopPolling($scope, \"architectures\");\n\n            // Stop the polling of hwe_kernels.\n            GeneralManager.stopPolling($scope, \"hwe_kernels\");\n\n            // Stop the polling of power_types.\n            GeneralManager.stopPolling($scope, \"power_types\");\n\n            // Emit the hidden event.\n            $scope.$emit('addHardwareHidden');\n        };\n\n        // Return True when architectures loaded and in machine mode.\n        $scope.showMachine = function() {\n            if($scope.architectures.length === 0) {\n                return false;\n            }\n            return $scope.mode === \"machine\";\n        };\n\n        // Return True when architectures loaded and in chassis mode.\n        $scope.showChassis = function() {\n            if($scope.architectures.length === 0) {\n                return false;\n            }\n            return $scope.mode === \"chassis\";\n        };\n\n        // Add a new MAC address to the machine.\n        $scope.addMac = function() {\n            $scope.machine.macs.push(newMAC());\n        };\n\n        // Remove a MAC address to the machine.\n        $scope.removeMac = function(mac) {\n            var idx = $scope.machine.macs.indexOf(mac);\n            if(idx > -1) {\n                $scope.machine.macs.splice(idx, 1);\n            }\n        };\n\n        // Return true if the machine name is invalid.\n        $scope.invalidName = function() {\n            // Not invalid if empty.\n            if($scope.machine.name.length === 0) {\n                return false;\n            }\n            return !ValidationService.validateHostname($scope.machine.name);\n        };\n\n        // Validate that the mac address is valid.\n        $scope.validateMac = function(mac) {\n            if(mac.mac === '') {\n                mac.error = false;\n            } else {\n                mac.error = !ValidationService.validateMAC(mac.mac);\n            }\n        };\n\n        // Return true when the machine is missing information or invalid\n        // information.\n        $scope.machineHasError = function() {\n            // Early-out for errors.\n            in_error = (\n                $scope.machine === null ||\n                $scope.machine.zone === null ||\n                $scope.machine.architecture === '' ||\n                $scope.machine.power.type === null ||\n                $scope.invalidName($scope.machine));\n            if(in_error) {\n                return in_error;\n            }\n\n            // Make sure none of the mac addresses are in error. The first one\n            // cannot be blank the remaining are allowed to be empty.\n            if($scope.machine.macs[0].mac === '' ||\n                $scope.machine.macs[0].error) {\n                return true;\n            }\n            var i;\n            for(i = 1; i < $scope.machine.macs.length; i++) {\n                var mac = $scope.machine.macs[i];\n                if(mac.mac !== '' && mac.error) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Return true if the chassis has errors.\n        $scope.chassisHasErrors = function() {\n            // Early-out for errors.\n            in_error = (\n                $scope.chassis === null ||\n                $scope.chassis.power.type === null);\n            if(in_error) {\n                return in_error;\n            }\n            return powerParametersHasError(\n                $scope.chassis.power.type, $scope.chassis.power.parameters);\n        };\n\n        // Called when the cancel button is pressed.\n        $scope.cancel = function() {\n            $scope.error = null;\n            $scope.machine = newMachine();\n            $scope.chassis = newChassis();\n\n            // Hide the controller.\n            $scope.hide();\n        };\n\n        // Called to perform the saving of the machine.\n        $scope.saveMachine = function(addAnother) {\n            // Does nothing if machine has errors.\n            if($scope.machineHasError()) {\n                return;\n            }\n\n            // Clear the error so it can be set again, if it fails to save\n            // the device.\n            $scope.error = null;\n\n            // Add the machine.\n            MachinesManager.create(\n                convertMachineToProtocol($scope.machine)).then(\n                    function() {\n                        if(addAnother) {\n                            $scope.machine = newMachine($scope.machine);\n                        } else {\n                            $scope.machine = newMachine();\n\n                            // Hide the scope if not adding another.\n                            $scope.hide();\n                        }\n                    }, function(error) {\n                        $scope.error =\n                            ManagerHelperService.parseValidationError(error);\n                    });\n        };\n\n        // Called to perform the saving of the chassis.\n        $scope.saveChassis = function(addAnother) {\n            // Does nothing if error exists.\n            if($scope.chassisHasErrors()) {\n                return;\n            }\n\n            // Clear the error so it can be set again, if it fails to save\n            // the device.\n            $scope.error = null;\n\n            // Create the parameters.\n            var params = angular.copy($scope.chassis.power.parameters);\n            params.chassis_type = $scope.chassis.power.type.name;\n            params.domain = $scope.chassis.domain.name;\n\n            // XXX ltrager 24-02-2016: Something is adding the username field\n            // even though its not defined in virshFields. The API rejects\n            // requests with improper fields so remove it before we send the\n            // request.\n            if(\n                    params.chassis_type === \"powerkvm\" ||\n                    params.chassis_type === \"virsh\") {\n                delete params.username;\n            }\n            // Add the chassis. For now we use the API as the websocket doesn't\n            // support probe and enlist.\n            $http({\n                method: 'POST',\n                url: 'api/2.0/machines/?op=add_chassis',\n                data: $.param(params),\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                }\n            }).then(function() {\n                if(addAnother) {\n                    $scope.chassis = newChassis($scope.chassis);\n                } else {\n                    $scope.chassis = newChassis();\n                    // Hide the scope if not adding another.\n                    $scope.hide();\n                }\n            }, function(error) {\n                $scope.error =\n                    ManagerHelperService.parseValidationError(error.data);\n            });\n        };\n\n        // Load zones and domains. Once loaded create the first machine and\n        // chassis.\n        ManagerHelperService.loadManagers(\n            $scope, [ZonesManager, DomainsManager]).then(function() {\n                // Add the first machine and chassis.\n                $scope.machine = newMachine();\n                $scope.chassis = newChassis();\n            });\n\n        // Load the general manager.\n        ManagerHelperService.loadManager(\n            $scope, GeneralManager).then(function() {\n            if($scope.architectures.length > 0) {\n                // If the machine doesn't have an architecture\n                // set then it was created before all of the\n                // architectures were loaded. Set the default\n                // architecture for that machine.\n                if(angular.isObject($scope.machine) &&\n                    $scope.machine.architecture === '') {\n                    $scope.machine.architecture = defaultArchitecture();\n                }\n            }\n        });\n\n        // Stop polling when the scope is destroyed.\n        $scope.$on(\"$destroy\", function() {\n            GeneralManager.stopPolling($scope, \"architectures\");\n            GeneralManager.stopPolling($scope, \"hwe_kernels\");\n            GeneralManager.stopPolling($scope, \"power_types\");\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/add_hardware.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Dashboard Controller\n */\n\nangular.module('MAAS').controller('DashboardController', [\n    '$scope', '$window', '$rootScope', '$routeParams', '$location',\n    'DiscoveriesManager', 'DomainsManager', 'MachinesManager',\n    'DevicesManager', 'SubnetsManager', 'VLANsManager', 'ConfigsManager',\n    'ManagerHelperService',\n    function($scope, $window, $rootScope, $routeParams, $location,\n             DiscoveriesManager, DomainsManager, MachinesManager,\n             DevicesManager, SubnetsManager, VLANsManager, ConfigsManager,\n             ManagerHelperService) {\n\n        // Default device IP options.\n        var deviceIPOptions = [\n            ['static', 'Static'],\n            ['dynamic', 'Dynamic'],\n            ['external', 'External']\n        ];\n\n        // Set title and page.\n        $rootScope.title = \"Dashboard\";\n        $rootScope.page = \"dashboard\";\n\n        // Set initial values.\n        $scope.loaded = false;\n        $scope.discoveredDevices = DiscoveriesManager.getItems();\n        $scope.domains = DomainsManager.getItems();\n        $scope.machines = MachinesManager.getItems();\n        $scope.devices = DevicesManager.getItems();\n        $scope.configManager = ConfigsManager;\n        $scope.networkDiscovery = null;\n        $scope.column = 'mac';\n        $scope.selectedDevice = null;\n        $scope.convertTo = null;\n\n        // Set default predicate to last_seen.\n        $scope.predicate = $scope.last_seen;\n\n        // Sorts the table by predicate.\n        $scope.sortTable = function(predicate) {\n            $scope.predicate = predicate;\n            $scope.reverse = !$scope.reverse;\n        };\n\n        // Proxy manager that the maas-obj-form directive uses to call the\n        // correct method based on current type.\n        $scope.proxyManager = {\n            updateItem: function(params) {\n                if($scope.convertTo.type === 'device') {\n                    return DevicesManager.createItem(params);\n                } else if($scope.convertTo.type === 'interface') {\n                    return DevicesManager.createInterface(params);\n                } else {\n                    throw new Error(\"Unknown type: \" + $scope.convertTo.type);\n                }\n            }\n        };\n\n        // Return the name name for the Discovery.\n        $scope.getDiscoveryName = function(discovery) {\n            if(discovery.hostname === null) {\n                return 'unknown';\n            }\n            else {\n                return discovery.hostname;\n            }\n        };\n\n        // Get the name of the subnet from its ID.\n        $scope.getSubnetName = function(subnetId) {\n            var subnet = SubnetsManager.getItemFromList(subnetId);\n            return SubnetsManager.getName(subnet);\n        };\n\n        // Get the name of the VLAN from its ID.\n        $scope.getVLANName = function(vlanId) {\n            var vlan = VLANsManager.getItemFromList(vlanId);\n            return VLANsManager.getName(vlan);\n        };\n\n        // Sets selected device\n        $scope.toggleSelected = function(deviceId) {\n            if($scope.selectedDevice === deviceId) {\n                $scope.selectedDevice = null;\n            } else {\n                var discovered = DiscoveriesManager.getItemFromList(deviceId);\n                var hostname = $scope.getDiscoveryName(discovered);\n                var domain;\n                if(hostname === 'unknown') {\n                    hostname = '';\n                }\n                if(hostname.indexOf('.') > 0) {\n                    domain = DomainsManager.getDomainByName(\n                        hostname.slice(hostname.indexOf('.') + 1));\n                    hostname = hostname.split(\".\", 1)[0];\n                    if(domain === null) {\n                        domain = DomainsManager.getDefaultDomain();\n                    }\n                } else {\n                    domain = DomainsManager.getDefaultDomain();\n                }\n                $scope.convertTo = {\n                    type: 'device',\n                    hostname: hostname,\n                    domain: domain,\n                    parent: null,\n                    ip_assignment: 'dynamic',\n                    goTo: false,\n                    saved: false,\n                    deviceIPOptions: deviceIPOptions.filter(\n                        function(option) {\n                            // Filter the options to not include static if\n                            // a subnet is not defined for this discovered\n                            // item.\n                            if(option[0] === 'static' &&\n                                !angular.isNumber(discovered.subnet)) {\n                                return false;\n                            } else {\n                                return true;\n                            }\n                        })\n                };\n                $scope.selectedDevice = deviceId;\n            }\n        };\n\n        // Called before the createItem is called to adjust the values\n        // passed over the call.\n        $scope.preProcess = function(item) {\n            var discovered = DiscoveriesManager.getItemFromList(\n                $scope.selectedDevice);\n            item = angular.copy(item);\n            if($scope.convertTo.type === 'device') {\n                item.primary_mac = discovered.mac_address;\n                item.extra_macs = [];\n                item.interfaces = [{\n                    mac: discovered.mac_address,\n                    ip_assignment: item.ip_assignment,\n                    ip_address: discovered.ip,\n                    subnet: discovered.subnet\n                }];\n            } else if($scope.convertTo.type === 'interface') {\n                item.mac_address = discovered.mac_address;\n                item.ip_address = discovered.ip;\n                item.subnet = discovered.subnet;\n            }\n            return item;\n        };\n\n        // Called after the createItem has been successful.\n        $scope.afterSave = function(obj) {\n            DiscoveriesManager._removeItem($scope.selectedDevice);\n            $scope.selectedDevice = null;\n            $scope.convertTo.hostname = obj.hostname;\n            $scope.convertTo.parent = obj.parent;\n            $scope.convertTo.saved = true;\n            if($scope.convertTo.goTo) {\n                if(angular.isString(obj.parent)) {\n                    $location.path('/node/' + obj.parent);\n                } else {\n                    $location.path('/nodes').search({tab: 'devices'});\n                }\n            }\n        };\n\n        // Load all the managers and get the network discovery config item.\n        ManagerHelperService.loadManagers($scope, [\n            DiscoveriesManager, DomainsManager, MachinesManager,\n            DevicesManager, SubnetsManager, VLANsManager, ConfigsManager]).then(\n            function() {\n                $scope.loaded = true;\n                $scope.networkDiscovery = ConfigsManager.getItemFromList(\n                    'network_discovery');\n            });\n    }\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/dashboard.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Domain Details Controller\n */\n\nangular.module('MAAS').controller('DomainDetailsController', [\n    '$scope', '$rootScope', '$routeParams', '$location',\n    'DomainsManager', 'UsersManager', 'ManagerHelperService', 'ErrorService',\n    function(\n        $scope, $rootScope, $routeParams, $location,\n        DomainsManager, UsersManager, ManagerHelperService, ErrorService) {\n\n        // Set title and page.\n        $rootScope.title = \"Loading...\";\n\n        // Note: this value must match the top-level tab, in order for\n        // highlighting to occur properly.\n        $rootScope.page = \"domains\";\n\n        // Initial values.\n        $scope.loaded = false;\n        $scope.domain = null;\n        $scope.predicate = \"name\";\n        $scope.reverse = false;\n\n        // Updates the page title.\n        function updateTitle() {\n            $rootScope.title = $scope.domain.displayname;\n        }\n\n        // Called when the domain has been loaded.\n        function domainLoaded(domain) {\n            $scope.domain = domain;\n            $scope.loaded = true;\n\n            updateTitle();\n        }\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        // Return true if this is the default domain.\n        $scope.isDefaultDomain = function() {\n            if(angular.isObject($scope.domain)) {\n                return $scope.domain.id === 0;\n            }\n            return false;\n        };\n\n        // Called to check if the space can be deleted.\n        $scope.canBeDeleted = function() {\n            if(angular.isObject($scope.domain)) {\n                return $scope.domain.rrsets.length === 0;\n            }\n            return false;\n        };\n\n        // Called when the delete domain button is pressed.\n        $scope.deleteButton = function() {\n            $scope.error = null;\n            $scope.confirmingDelete = true;\n        };\n\n        // Called when the cancel delete domain button is pressed.\n        $scope.cancelDeleteButton = function() {\n            $scope.confirmingDelete = false;\n        };\n\n        // Called when the confirm delete domain button is pressed.\n        $scope.deleteConfirmButton = function() {\n            DomainsManager.deleteDomain($scope.domain).then(function() {\n                $scope.confirmingDelete = false;\n                $location.path(\"/domains\");\n            }, function(error) {\n                $scope.error =\n                    ManagerHelperService.parseValidationError(error);\n            });\n        };\n\n        // Load all the required managers.\n        ManagerHelperService.loadManagers(\n            $scope, [DomainsManager, UsersManager]).then(function() {\n            // Possibly redirected from another controller that already had\n            // this domain set to active. Only call setActiveItem if not\n            // already the activeItem.\n            var activeDomain = DomainsManager.getActiveItem();\n            var requestedDomain = parseInt($routeParams.domain_id, 10);\n            if(isNaN(requestedDomain)) {\n                ErrorService.raiseError(\"Invalid domain identifier.\");\n            } else if(angular.isObject(activeDomain) &&\n                activeDomain.id === requestedDomain) {\n                domainLoaded(activeDomain);\n            } else {\n                DomainsManager.setActiveItem(\n                    requestedDomain).then(function(domain) {\n                        domainLoaded(domain);\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n            }\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/domain_details.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Domains List Controller\n */\n\nangular.module('MAAS').controller('DomainsListController', [\n    '$scope', '$rootScope', '$routeParams', '$filter', 'DomainsManager',\n    'UsersManager', 'ManagerHelperService',\n    function($scope, $rootScope, $routeParams, $filter, DomainsManager,\n        UsersManager, ManagerHelperService) {\n\n        // Load the filters that are used inside the controller.\n\n        // Set title and page.\n        $rootScope.title = \"DNS\";\n        $rootScope.page = \"domains\";\n\n        // Set initial values.\n        $scope.domains = DomainsManager.getItems();\n        $scope.currentpage = \"domains\";\n        $scope.predicate = \"name\";\n        $scope.reverse = false;\n        $scope.loading = true;\n\n        // This will hold the AddDomainController once it's initialized.  The\n        // controller will set this variable as it's always a child of this\n        // scope.\n        $scope.addDomainScope = null;\n\n        // Called when the add domain button is pressed.\n        $scope.addDomain = function() {\n            $scope.addDomainScope.show();\n        };\n\n        // Called when the cancel add domain button is pressed.\n        $scope.cancelAddDomain = function() {\n            $scope.addDomainScope.cancel();\n        };\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        ManagerHelperService.loadManagers(\n            $scope, [DomainsManager, UsersManager]).then(\n            function() {\n                $scope.loading = false;\n            });\n        }\n    ]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/domains_list.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Fabric Details Controller\n */\n\nangular.module('MAAS').controller('FabricDetailsController', [\n    '$scope', '$rootScope', '$routeParams', '$filter', '$location',\n    'FabricsManager', 'VLANsManager', 'SubnetsManager', 'SpacesManager',\n    'ControllersManager',\n    'UsersManager', 'ManagerHelperService', 'ErrorService',\n    function(\n        $scope, $rootScope, $routeParams, $filter, $location,\n        FabricsManager, VLANsManager, SubnetsManager, SpacesManager,\n        ControllersManager,\n        UsersManager, ManagerHelperService, ErrorService) {\n\n        // Set title and page.\n        $rootScope.title = \"Loading...\";\n\n        // Note: this value must match the top-level tab, in order for\n        // highlighting to occur properly.\n        $rootScope.page = \"networks\";\n\n        // Initial values.\n        $scope.fabric = null;\n        $scope.fabricManager = FabricsManager;\n        $scope.editSummary = false;\n        $scope.vlans = VLANsManager.getItems();\n        $scope.subnets = SubnetsManager.getItems();\n        $scope.controllers = ControllersManager.getItems();\n        $scope.loaded = false;\n\n        // Updates the page title.\n        function updateTitle() {\n            $rootScope.title = $scope.fabric.name;\n        }\n\n        // Called when the \"edit\" button is cliked in the fabric summary\n        $scope.enterEditSummary = function() {\n            $scope.editSummary = true;\n        };\n\n        // Called when the \"cancel\" button is cliked in the fabric summary\n        $scope.exitEditSummary = function() {\n            $scope.editSummary = false;\n        };\n\n        // Called when the fabric has been loaded.\n        function fabricLoaded(fabric) {\n            if(angular.isObject(fabric)) {\n                $scope.fabric = fabric;\n                updateTitle();\n                $scope.$watch(\"vlans\", updateVLANs, true);\n                $scope.$watch(\"subnets\", updateVLANs, true);\n                $scope.$watch(\"controllers\", updateVLANs, true);\n                $scope.loaded = true;\n                // Initial table sort order.\n                $scope.predicate = \"['vlan_name', 'vlan.id', 'subnet_name']\";\n            }\n        }\n\n        // Generate a table that can easily be rendered in the view.\n        function updateVLANs() {\n            var rows = [];\n            var racks = {};\n            angular.forEach($filter('filter')(\n                    $scope.vlans, {fabric:$scope.fabric.id}, true),\n                    function(vlan) {\n                var subnets =\n                    $filter('filter')($scope.subnets, {vlan:vlan.id}, true);\n                if(subnets.length > 0) {\n                    angular.forEach(subnets, function(subnet) {\n                        var space = SpacesManager.getItemFromList(subnet.space);\n                        var space_name = (space === null) ?\n                            \"(undefined)\" : space.name;\n                        var row = {\n                            vlan: vlan,\n                            vlan_name: VLANsManager.getName(vlan),\n                            subnet: subnet,\n                            subnet_name: SubnetsManager.getName(subnet),\n                            space: space,\n                            space_name: space_name\n                        };\n                        rows.push(row);\n                    });\n                } else {\n                    // If there are no subnets, populate a row based on the\n                    // information we have (just the VLAN).\n                    var row = {\n                        vlan: vlan,\n                        vlan_name: VLANsManager.getName(vlan),\n                        subnet: null,\n                        subnet_name: null,\n                        space: null,\n                        space_name: null\n                    };\n                    rows.push(row);\n                }\n                // Enumerate racks for vlan.\n                angular.forEach(vlan.rack_sids, function(rack_sid) {\n                    var rack = ControllersManager.getItemFromList(rack_sid);\n                    if(angular.isObject(rack)) {\n                        racks[rack.system_id] = rack;\n                    }\n                });\n            });\n            $scope.rows = rows;\n            $scope.racks = Object.keys(racks).map(function(key) {\n                return racks[key];\n            });\n        }\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        // Return true if this is the default Fabric\n        $scope.isDefaultFabric = function() {\n            if(!angular.isObject($scope.fabric)) {\n                return false;\n            }\n            return $scope.fabric.id === 0;\n        };\n\n        // Called to check if the space can be deleted.\n        $scope.canBeDeleted = function() {\n            if(angular.isObject($scope.fabric)) {\n                return $scope.fabric.id !== 0;\n            }\n            return false;\n        };\n\n        // Called when the delete fabric button is pressed.\n        $scope.deleteButton = function() {\n            $scope.error = null;\n            $scope.confirmingDelete = true;\n        };\n\n        // Called when the cancel delete fabric button is pressed.\n        $scope.cancelDeleteButton = function() {\n            $scope.confirmingDelete = false;\n        };\n\n        // Called when the confirm delete fabric button is pressed.\n        $scope.deleteConfirmButton = function() {\n            FabricsManager.deleteFabric($scope.fabric).then(function() {\n                $scope.confirmingDelete = false;\n                $location.path(\"/networks\");\n                $location.search('by', 'fabric');\n            }, function(reply) {\n                $scope.error =\n                    ManagerHelperService.parseValidationError(reply.error);\n            });\n        };\n\n        // Load all the required managers.\n        ManagerHelperService.loadManagers($scope, [\n            FabricsManager, VLANsManager, SubnetsManager, SpacesManager,\n            ControllersManager, UsersManager]).then(\n            function() {\n                // Possibly redirected from another controller that already had\n                // this fabric set to active. Only call setActiveItem if not\n                // already the activeItem.\n                var activeFabric = FabricsManager.getActiveItem();\n                var requestedFabric = parseInt($routeParams.fabric_id, 10);\n\n                if(isNaN(requestedFabric)) {\n                    ErrorService.raiseError(\"Invalid fabric identifier.\");\n                } else if(angular.isObject(activeFabric) &&\n                    activeFabric.id === requestedFabric) {\n                    fabricLoaded(activeFabric);\n                } else {\n                    FabricsManager.setActiveItem(\n                        requestedFabric).then(function(fabric) {\n                            fabricLoaded(fabric);\n                        }, function(error) {\n                            ErrorService.raiseError(error);\n                        });\n                }\n            });\n    }\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/fabric_details.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Images Controller\n */\n\nangular.module('MAAS').controller('ImagesController', [\n    '$rootScope', '$scope', 'BootResourcesManager',\n    'ConfigsManager', 'UsersManager', 'ManagerHelperService', function(\n        $rootScope, $scope, BootResourcesManager,\n        ConfigsManager, UsersManager, ManagerHelperService) {\n\n            $rootScope.page = \"images\";\n            $rootScope.title = \"Loading...\";\n\n            $scope.loading = true;\n            $scope.bootResources = BootResourcesManager.getData();\n            $scope.configManager = ConfigsManager;\n            $scope.autoImport = null;\n\n            // Return true if the user is a super user.\n            $scope.isSuperUser = function() {\n                return UsersManager.isSuperUser();\n            };\n\n            // Load the required managers.\n            ManagerHelperService.loadManagers(\n                $scope, [ConfigsManager, UsersManager]).then(function() {\n                $scope.autoImport = ConfigsManager.getItemFromList(\n                    \"boot_images_auto_import\");\n            });\n\n            // The boot-images directive will load the bootResources manager,\n            // we just watch until resources is set. That means the page is\n            // loaded.\n            $scope.$watch(\"bootResources.resources\", function() {\n                if(angular.isArray($scope.bootResources.resources)) {\n                    $scope.loading = false;\n                    $rootScope.title = \"Images\";\n                }\n            });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/images.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Intro Controller\n */\n\nangular.module('MAAS').controller('IntroUserController', [\n    '$rootScope', '$scope', '$window', '$location',\n    'UsersManager', 'ManagerHelperService',\n    function(\n        $rootScope, $scope, $window, $location,\n        UsersManager, ManagerHelperService) {\n\n            $rootScope.page = \"intro\";\n            $rootScope.title = \"Welcome\";\n\n            $scope.loading = true;\n            $scope.user = null;\n\n            // Set the skip function on the rootScope to allow skipping the\n            // intro view.\n            $rootScope.skip = function() {\n                $scope.clickContinue(true);\n            };\n\n            // Return true if super user.\n            $scope.isSuperUser = function() {\n                return UsersManager.isSuperUser();\n            };\n\n            // Return true if continue can be clicked.\n            $scope.canContinue = function() {\n                return $scope.user.sshkeys_count > 0;\n            };\n\n            // Called when continue button is clicked.\n            $scope.clickContinue = function(force) {\n                if(angular.isUndefined(force)) {\n                    force = false;\n                }\n                if(force || $scope.canContinue()) {\n                    UsersManager.markIntroComplete().then(function() {\n                        // Reload the whole page so that the MAAS_config will\n                        // be set to the new value.\n                        $window.location.reload();\n                    });\n                }\n            };\n\n            // If intro has been completed redirect to '/'.\n            if(MAAS_config.user_completed_intro) {\n                $location.path('/');\n            } else {\n                // Load the required managers.\n                ManagerHelperService.loadManager(\n                    $scope, UsersManager).then(function() {\n                        $scope.loading = false;\n                        $scope.user = UsersManager.getAuthUser();\n                    });\n            }\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/intro_user.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Intro Controller\n */\n\nangular.module('MAAS').controller('IntroController', [\n    '$rootScope', '$scope', '$window', '$location',\n    'ConfigsManager', 'PackageRepositoriesManager', 'BootResourcesManager',\n    'ManagerHelperService',\n    function(\n        $rootScope, $scope, $window, $location,\n        ConfigsManager, PackageRepositoriesManager, BootResourcesManager,\n        ManagerHelperService) {\n\n            $rootScope.page = \"intro\";\n            $rootScope.title = \"Welcome\";\n\n            $scope.loading = true;\n            $scope.configManager = ConfigsManager;\n            $scope.repoManager = PackageRepositoriesManager;\n            $scope.bootResources = BootResourcesManager.getData();\n            $scope.hasImages = false;\n            $scope.maasName = null;\n            $scope.upstreamDNS = null;\n            $scope.mainArchive = null;\n            $scope.portsArchive = null;\n            $scope.httpProxy = null;\n\n            // Set the skip function on the rootScope to allow skipping the\n            // intro view.\n            $rootScope.skip = function() {\n                $scope.clickContinue(true);\n            };\n\n            // Return true if the welcome section is not in error.\n            $scope.welcomeInError = function() {\n                var form = $scope.maasName.$maasForm;\n                if(angular.isObject(form)) {\n                    return form.hasErrors();\n                } else {\n                    return false;\n                }\n            };\n\n            // Return true if the network section is in error.\n            $scope.networkInError = function() {\n                var inError = false;\n                var objs = [\n                    $scope.upstreamDNS,\n                    $scope.mainArchive,\n                    $scope.portsArchive,\n                    $scope.httpProxy];\n                angular.forEach(objs, function(obj) {\n                    var form = obj.$maasForm;\n                    if(angular.isObject(form) && form.hasErrors()) {\n                        inError = true;\n                    }\n                });\n                return inError;\n            };\n\n            // Return true if continue can be clicked.\n            $scope.canContinue = function() {\n                return (\n                    !$scope.welcomeInError() &&\n                    !$scope.networkInError() &&\n                    $scope.hasImages);\n            };\n\n            // Called when continue button is clicked.\n            $scope.clickContinue = function(force) {\n                if(angular.isUndefined(force)) {\n                    force = false;\n                }\n                if(force || $scope.canContinue()) {\n                    ConfigsManager.updateItem({\n                        'name': 'completed_intro',\n                        'value': true\n                    }).then(function() {\n                        // Reload the whole page so that the MAAS_config will be\n                        // set to the new value.\n                        $window.location.reload();\n                    });\n                }\n            };\n\n            // If intro has been completed redirect to '/'.\n            if(MAAS_config.completed_intro) {\n                $location.path('/');\n            } else {\n                // Load the required managers.\n                var managers = [ConfigsManager, PackageRepositoriesManager];\n                ManagerHelperService.loadManagers(\n                    $scope, managers).then(function() {\n                    $scope.loading = false;\n                    $scope.maasName = ConfigsManager.getItemFromList(\n                        \"maas_name\");\n                    $scope.upstreamDNS = ConfigsManager.getItemFromList(\n                        \"upstream_dns\");\n                    $scope.httpProxy = ConfigsManager.getItemFromList(\n                        \"http_proxy\");\n                    $scope.mainArchive = (\n                        PackageRepositoriesManager.getItems().filter(\n                            function(repo) {\n                                return (repo['default'] &&\n                                    repo.name === \"main_archive\");\n                            })[0]);\n                    $scope.portsArchive = (\n                        PackageRepositoriesManager.getItems().filter(\n                            function(repo) {\n                                return (repo['default'] &&\n                                    repo.name === \"ports_archive\");\n                            })[0]);\n                });\n\n                // Don't load the boot resources as the boot-images directive\n                // performs that action. Just watch and make sure that\n                // at least one resource exists before continuing.\n                $scope.$watch(\"bootResources.resources\", function() {\n                    if(angular.isArray($scope.bootResources.resources) &&\n                        $scope.bootResources.resources.length > 0) {\n                        $scope.hasImages = true;\n                    } else {\n                        $scope.hasImages = false;\n                    }\n                });\n            }\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/intro.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Networks List Controller\n */\n\nangular.module('MAAS').controller('NetworksListController', [\n    '$scope', '$rootScope', '$routeParams', '$filter', '$location',\n    'SubnetsManager', 'FabricsManager', 'SpacesManager', 'VLANsManager',\n    'UsersManager', 'ManagerHelperService',\n    function($scope, $rootScope, $routeParams, $filter, $location,\n             SubnetsManager, FabricsManager, SpacesManager, VLANsManager,\n             UsersManager, ManagerHelperService) {\n\n        // Load the filters that are used inside the controller.\n        var filterByVLAN = $filter('filterByVLAN');\n        var filterByFabric = $filter('filterByFabric');\n        var filterBySpace = $filter('filterBySpace');\n        var filterByNullSpace = $filter('filterByNullSpace');\n\n        // Set title and page.\n        $rootScope.title = \"Subnets\";\n        $rootScope.page = \"networks\";\n\n        // Set the initial value of $scope.groupBy based on the URL\n        // parameters, but default to the 'fabric' groupBy if it's not found.\n        $scope.getURLParameters = function() {\n            if(angular.isString($location.search().by)) {\n                $scope.groupBy = $location.search().by;\n            } else {\n                $scope.groupBy = 'fabric';\n            }\n        };\n\n        $scope.ADD_FABRIC_ACTION = {\n            name: \"add_fabric\",\n            title: \"Fabric\",\n            selectedTitle: \"Add fabric\",\n            objectName: 'fabric'\n        };\n        $scope.ADD_VLAN_ACTION = {\n            name: \"add_vlan\",\n            title: \"VLAN\",\n            selectedTitle: \"Add VLAN\",\n            objectName: 'vlan'\n        };\n        $scope.ADD_SPACE_ACTION = {\n            name: \"add_space\",\n            title: \"Space\",\n            selectedTitle: \"Add space\",\n            objectName: 'space'\n        };\n        $scope.ADD_SUBNET_ACTION = {\n            name: \"add_subnet\",\n            title: \"Subnet\",\n            selectedTitle: \"Add subnet\",\n            objectName: 'subnet'\n        };\n\n        $scope.getURLParameters();\n\n        // Set initial values.\n        $scope.subnetManager = SubnetsManager;\n        $scope.subnets = SubnetsManager.getItems();\n        $scope.fabricManager = FabricsManager;\n        $scope.fabrics = FabricsManager.getItems();\n        $scope.spaceManager = SpacesManager;\n        $scope.spaces = SpacesManager.getItems();\n        $scope.vlanManager = VLANsManager;\n        $scope.vlans = VLANsManager.getItems();\n        $scope.loading = true;\n\n        $scope.group = {};\n        // Used when grouping by fabrics.\n        $scope.group.fabrics = {};\n        // User when grouping by spaces.\n        $scope.group.spaces = {};\n        $scope.group.spaces.orphanVLANs = [];\n\n        // Initializers for action objects.\n        var actionObjectInitializers = {\n            fabric: function() {\n                return {};\n            },\n            vlan: function() {\n                // Set initial fabric.\n                return {\n                    fabric: $scope.fabrics[0].id\n                };\n            },\n            space: function() {\n                return {};\n            },\n            subnet: function() {\n                // Set initial VLAN and space.\n                return {\n                    vlan: $scope.fabrics[0].vlan_ids[0]\n                };\n            }\n        };\n\n        // Return the name of the subnet.\n        function getSubnetName(subnet) {\n            return SubnetsManager.getName(subnet);\n        }\n\n        // Generate a table that can be easily rendered in the view.\n        // Traverses the fabrics and VLANs in-order so that if previous\n        // fabrics and VLANs' names are identical, they can be hidden from\n        // the table cell.\n        function updateFabricsGroupBy() {\n            var rows = [];\n            var previous_fabric = {id:-1};\n            var previous_vlan = {id:-1};\n            var fabrics = $filter('orderBy')($scope.fabrics, ['name']);\n            angular.forEach(fabrics, function(fabric) {\n                var vlans = filterByFabric($scope.vlans, fabric);\n                vlans = $filter('orderBy')(vlans, ['vid']);\n                angular.forEach(vlans, function(vlan) {\n                    var subnets = filterByVLAN($scope.subnets, vlan);\n                    if(subnets.length > 0) {\n                        angular.forEach(subnets, function(subnet) {\n                            var space = SpacesManager.getItemFromList(\n                                subnet.space);\n                            var row = {\n                                fabric: fabric,\n                                fabric_name: \"\",\n                                vlan: vlan,\n                                vlan_name: \"\",\n                                space: space,\n                                subnet: subnet,\n                                subnet_name: getSubnetName(subnet)\n                            };\n                            if(fabric.id !== previous_fabric.id) {\n                                previous_fabric.id = fabric.id;\n                                row.fabric_name = fabric.name;\n                            }\n                            if(vlan.id !== previous_vlan.id) {\n                                previous_vlan.id = vlan.id;\n                                row.vlan_name = $scope.getVLANName(vlan);\n                            }\n                            rows.push(row);\n                        });\n                    } else {\n                        var row = {\n                            fabric: fabric,\n                            fabric_name: \"\",\n                            vlan: vlan,\n                            vlan_name: $scope.getVLANName(vlan)\n                        };\n                        if(fabric.id !== previous_fabric.id) {\n                            previous_fabric.id = fabric.id;\n                            row.fabric_name = fabric.name;\n                        }\n                        rows.push(row);\n                    }\n                });\n            });\n            $scope.group.fabrics.rows = rows;\n        }\n\n        // Generate a table that can be easily rendered in the view.\n        // Traverses the spaces in-order so that if the previous space's name\n        // is identical, it can be hidden from the table cell.\n        // Note that this view only shows items that can be related to a space.\n        // That is, VLANs and fabrics with no corresponding subnets (and\n        // therefore spaces) cannot be shown in this table.\n        function updateSpacesGroupBy() {\n            var rows = [];\n            var spaces = $filter('orderBy')($scope.spaces, ['name']);\n            var previous_space = {id: -1};\n            angular.forEach(spaces, function(space) {\n                var subnets = filterBySpace($scope.subnets, space);\n                subnets = $filter('orderBy')(subnets, ['cidr']);\n                var index = 0;\n                angular.forEach(subnets, function(subnet) {\n                    index++;\n                    var vlan = VLANsManager.getItemFromList(subnet.vlan);\n                    var fabric = FabricsManager.getItemFromList(vlan.fabric);\n                    var row = {\n                        fabric: fabric,\n                        vlan: vlan,\n                        vlan_name: $scope.getVLANName(vlan),\n                        subnet: subnet,\n                        subnet_name: getSubnetName(subnet),\n                        space: space,\n                        space_name: \"\"\n                    };\n                    if(space.id !== previous_space.id) {\n                        previous_space.id = space.id;\n                        row.space_name = space.name;\n                    }\n                    rows.push(row);\n                });\n                if(index === 0) {\n                    rows.push({\n                        space: space,\n                        space_name: space.name\n                    });\n                }\n            });\n            $scope.group.spaces.rows = rows;\n        }\n\n        function updateOrphanVLANs() {\n            var rows = [];\n            var subnets = filterByNullSpace($scope.subnets);\n            subnets = $filter('orderBy')(subnets, ['cidr']);\n            angular.forEach(subnets, function(subnet) {\n                var vlan = VLANsManager.getItemFromList(subnet.vlan);\n                var fabric = FabricsManager.getItemFromList(vlan.fabric);\n                var row = {\n                    fabric: fabric,\n                    vlan: vlan,\n                    vlan_name: $scope.getVLANName(vlan),\n                    subnet: subnet,\n                    subnet_name: getSubnetName(subnet),\n                    space: null\n                };\n                rows.push(row);\n            });\n            $scope.group.spaces.orphanVLANs = rows;\n        }\n\n        // Update the \"Group by\" selection. This is called from a few places:\n        // * When the $watch notices data has changed\n        // * When the URL bar is updated, after the URL is parsed and\n        //   $scope.groupBy is updated\n        // * When the drop-down \"Group by\" selection box changes\n        $scope.updateGroupBy = function() {\n            var groupBy = $scope.groupBy;\n            if(groupBy === 'space') {\n                $location.search('by', 'space');\n                updateSpacesGroupBy();\n                updateOrphanVLANs();\n            } else {\n                // The only other option is 'fabric', but in case the user\n                // made a typo on the URL bar we just assume it was 'fabric'\n                // as a fallback.\n                $location.search('by', 'fabric');\n                updateFabricsGroupBy();\n            }\n        };\n\n        // Called when the managers load to populate the actions the user\n        // is allowed to perform.\n        $scope.updateActions = function() {\n            if(UsersManager.isSuperUser()) {\n                $scope.actionOptions = [\n                    $scope.ADD_FABRIC_ACTION,\n                    $scope.ADD_VLAN_ACTION,\n                    $scope.ADD_SPACE_ACTION,\n                    $scope.ADD_SUBNET_ACTION\n                ];\n            } else {\n                $scope.actionOptions = [];\n            }\n        };\n\n        // Called when a action is selected.\n        $scope.actionChanged = function() {\n            $scope.newObject = (\n                actionObjectInitializers[$scope.actionOption.objectName]());\n        };\n\n        // Called when the \"Cancel\" button is pressed.\n        $scope.cancelAction = function() {\n            $scope.actionOption = null;\n            $scope.newObject = null;\n        };\n\n        // Return the name name for the VLAN.\n        $scope.getVLANName = function(vlan) {\n            return VLANsManager.getName(vlan);\n        };\n\n        // Return the name of the fabric from its given ID.\n        $scope.getFabricNameById = function(fabricId) {\n            return FabricsManager.getName(\n                FabricsManager.getItemFromList(fabricId));\n        };\n\n        // Called before the subnet object is saved. Sets the fabric\n        // field to be the fabric for the selected VLAN.\n        $scope.actionSubnetPreSave = function(obj) {\n            obj.fabric = VLANsManager.getItemFromList(obj.vlan).fabric;\n            return obj;\n        };\n\n        ManagerHelperService.loadManagers($scope, [\n            SubnetsManager, FabricsManager, SpacesManager, VLANsManager,\n            UsersManager]).then(\n            function() {\n                $scope.loading = false;\n\n                $scope.updateActions();\n\n                $scope.$watch(\n                    \"[subnets, fabrics, spaces, vlans]\",\n                    $scope.updateGroupBy, true);\n\n                // If the route has been updated, a new search string must\n                // potentially be rendered.\n                $scope.$on(\"$routeUpdate\", function() {\n                    $scope.getURLParameters();\n                    $scope.updateGroupBy();\n                });\n                $scope.updateGroupBy();\n            });\n    }\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/networks_list.js","/* Copyright 2015-2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Node Networking Controller\n */\n\n// Filter that is specific to the NodeNetworkingController. Filters the\n// list of VLANs to be only those that are unused by the interface.\nangular.module('MAAS').filter('filterByUnusedForInterface', function() {\n    return function(vlans, nic, originalInterfaces) {\n        var filtered = [];\n        if(!angular.isObject(nic) ||\n            !angular.isObject(originalInterfaces)) {\n            return filtered;\n        }\n        var usedVLANs = [];\n        angular.forEach(originalInterfaces, function(inter) {\n            if(inter.type === \"vlan\") {\n                var parent = inter.parents[0];\n                if(parent === nic.id) {\n                    usedVLANs.push(inter.vlan_id);\n                }\n            }\n        });\n        angular.forEach(vlans, function(vlan) {\n            var idx = usedVLANs.indexOf(vlan.id);\n            if(idx === -1) {\n                filtered.push(vlan);\n            }\n        });\n        return filtered;\n    };\n});\n\n\n// Filter that is specific to the NodeNetworkingController. Filters the\n// list of interfaces to not include the current parent interfaces being\n// bonded together.\nangular.module('MAAS').filter('removeInterfaceParents', function() {\n    return function(interfaces, childInterface, skip) {\n        if(skip || !angular.isObject(childInterface) ||\n            !angular.isArray(childInterface.parents)) {\n            return interfaces;\n        }\n        var filtered = [];\n        angular.forEach(interfaces, function(nic) {\n            var i, parent, found = false;\n            for(i = 0; i < childInterface.parents.length; i++) {\n                parent = childInterface.parents[i];\n                if(parent.id === nic.id && parent.link_id === nic.link_id) {\n                    found = true;\n                    break;\n                }\n            }\n            if(!found) {\n                filtered.push(nic);\n            }\n        });\n        return filtered;\n    };\n});\n\n\n// Filter that is specific to the NodeNetworkingController. Remove the default\n// VLAN if the interface is a VLAN interface.\nangular.module('MAAS').filter('removeDefaultVLANIfVLAN', function() {\n    return function(vlans, interfaceType) {\n        if(!angular.isString(interfaceType)) {\n            return vlans;\n        }\n        var filtered = [];\n        angular.forEach(vlans, function(vlan) {\n            if(interfaceType !== \"vlan\") {\n                filtered.push(vlan);\n            } else if(vlan.vid !== 0) {\n                filtered.push(vlan);\n            }\n        });\n        return filtered;\n    };\n});\n\n\n// Filter that is specific to the NodeNetworkingController. Only provide the\n// available modes for that interface type.\nangular.module('MAAS').filter('filterLinkModes', function() {\n    return function(modes, nic) {\n        if(!angular.isObject(nic)) {\n            return modes;\n        }\n        var filtered = [];\n\n        // If this is not a $maasForm, make it work like one.\n        // We need to use getValue() to access attributes, because each\n        // type of maas-obj-form gets to define how values come out.\n        if(!angular.isFunction(nic.getValue)) {\n            nic.getValue = function(name) {\n                return this[name];\n            };\n        }\n\n        if(!angular.isObject(nic.getValue('subnet'))) {\n            // No subnet is configure so the only allowed mode\n            // is 'link_up'.\n            angular.forEach(modes, function(mode) {\n                if(mode.mode === \"link_up\") {\n                    filtered.push(mode);\n                }\n            });\n        } else {\n            // Don't add LINK_UP if more than one link exists or\n            // if the interface is an alias.\n            var links = nic.getValue('links');\n            var nicType = nic.getValue('type');\n            var allowLinkUp = (\n                (angular.isObject(links) && links.length > 1) ||\n                (nicType === \"alias\"));\n            angular.forEach(modes, function(mode) {\n                if(allowLinkUp && mode.mode === \"link_up\") {\n                    return;\n                }\n                // Can't run DHCP twice on one NIC.\n                if(nicType === \"alias\" && mode.mode === \"dhcp\") {\n                    return;\n                }\n                filtered.push(mode);\n            });\n        }\n        return filtered;\n    };\n});\n\n\nangular.module('MAAS').controller('NodeNetworkingController', [\n    '$scope', '$filter', 'FabricsManager', 'VLANsManager', 'SubnetsManager',\n    'MachinesManager', 'ControllersManager', 'DevicesManager',\n    'GeneralManager', 'UsersManager',\n    'ManagerHelperService', 'ValidationService', 'JSONService',\n    function(\n        $scope, $filter, FabricsManager, VLANsManager, SubnetsManager,\n        MachinesManager, ControllersManager, DevicesManager,\n        GeneralManager, UsersManager,\n        ManagerHelperService, ValidationService, JSONService) {\n\n        // Different interface types.\n        var INTERFACE_TYPE = {\n            PHYSICAL: \"physical\",\n            BOND: \"bond\",\n            BRIDGE: \"bridge\",\n            VLAN: \"vlan\",\n            ALIAS: \"alias\"\n        };\n        var INTERFACE_TYPE_TEXTS = {\n            \"physical\": \"Physical\",\n            \"bond\": \"Bond\",\n            \"bridge\": \"Bridge\",\n            \"vlan\": \"VLAN\",\n            \"alias\": \"Alias\"\n        };\n\n        // Different link modes for an interface.\n        var LINK_MODE = {\n            AUTO: \"auto\",\n            STATIC: \"static\",\n            DHCP: \"dhcp\",\n            LINK_UP: \"link_up\"\n        };\n        var LINK_MODE_TEXTS = {\n            \"auto\": \"Auto assign\",\n            \"static\": \"Static assign\",\n            \"dhcp\": \"DHCP\",\n            \"link_up\": \"Unconfigured\"\n        };\n\n        // Different selection modes.\n        var SELECTION_MODE = {\n            NONE: null,\n            SINGLE: \"single\",\n            MULTI: \"multi\",\n            DELETE: \"delete\",\n            ADD: \"add\",\n            CREATE_BOND: \"create-bond\",\n            CREATE_BRIDGE: \"create-bridge\",\n            CREATE_PHYSICAL: \"create-physical\",\n            EDIT: \"edit\"\n        };\n\n        var IP_ASSIGNMENT = {\n            DYNAMIC: \"dynamic\",\n            EXTERNAL: \"external\",\n            STATIC: \"static\"\n        };\n\n        // Device ip assignment options.\n        $scope.ipAssignments = [\n            {\n                name: IP_ASSIGNMENT.EXTERNAL,\n                text: \"External\"\n            },\n            {\n                name: IP_ASSIGNMENT.DYNAMIC,\n                text: \"Dynamic\"\n            },\n            {\n                name: IP_ASSIGNMENT.STATIC,\n                text: \"Static\"\n            }\n        ];\n\n        // Set the initial values for this scope.\n        $scope.loaded = false;\n        $scope.nodeHasLoaded = false;\n        $scope.managersHaveLoaded = false;\n        $scope.tableInfo = {column: 'name'};\n        $scope.fabrics = FabricsManager.getItems();\n        $scope.vlans = VLANsManager.getItems();\n        $scope.subnets = SubnetsManager.getItems();\n        $scope.interfaces = [];\n        $scope.interfaceLinksMap = {};\n        $scope.interfaceErrorsByLinkId = {};\n        $scope.originalInterfaces = {};\n        $scope.selectedInterfaces = [];\n        $scope.selectedMode = null;\n        $scope.newInterface = {};\n        $scope.newBondInterface = {};\n        $scope.newBridgeInterface = {};\n        $scope.editInterface = null;\n        $scope.bondOptions = GeneralManager.getData(\"bond_options\");\n        $scope.modes = [\n            {\n                mode: LINK_MODE.AUTO,\n                text: LINK_MODE_TEXTS[LINK_MODE.AUTO]\n            },\n            {\n                mode: LINK_MODE.STATIC,\n                text: LINK_MODE_TEXTS[LINK_MODE.STATIC]\n            },\n            {\n                mode: LINK_MODE.DHCP,\n                text: LINK_MODE_TEXTS[LINK_MODE.DHCP]\n            },\n            {\n                mode: LINK_MODE.LINK_UP,\n                text: LINK_MODE_TEXTS[LINK_MODE.LINK_UP]\n            }\n        ];\n\n        // Sets loaded to true if both the node has been loaded at the\n        // other required managers for this scope have been loaded.\n        function updateLoaded() {\n            $scope.loaded = $scope.nodeHasLoaded && $scope.managersHaveLoaded;\n            if($scope.loaded) {\n                updateInterfaces();\n            }\n        }\n\n        // Update the list of interfaces for the node. For each link on the\n        // interface, the interface is duplicated in the list to make render\n        // in a data-ng-repeat easier.\n        function updateInterfaces() {\n            $scope.originalInterfaces = {};\n            angular.forEach($scope.node.interfaces, function(nic) {\n                $scope.originalInterfaces[nic.id] = nic;\n            });\n\n            var interfaces = [];\n            // vlanTable contains data packaged for the 'Served VLANs' section,\n            // which is essentially Interface LEFT JOIN VLAN LEFT JOIN Subnet.\n            var vlanTable = [];\n            // Keep track of VLAN IDs we've processed.\n            var addedVlans = {};\n\n            angular.forEach($scope.node.interfaces, function(nic) {\n                // When a interface has a child that is a bond or bridge.\n                // Then that interface is not included in the interface list.\n                // Parent interface with a bond or bridge child can only have\n                // one child.\n                if(nic.children.length === 1) {\n                    var child = $scope.originalInterfaces[nic.children[0]];\n                    if(child.type === INTERFACE_TYPE.BOND ||\n                       child.type === INTERFACE_TYPE.BRIDGE) {\n                        // This parent now has a bond or bridge for a child.\n                        // If this was the editInterface, then it needs to be\n                        // unset. We only need to check the \"id\" (not\n                        // the \"link_id\"), because if this interface did have\n                        // aliases they have now been removed.\n                        if(angular.isObject($scope.editInterface) &&\n                            $scope.editInterface.id === nic.id) {\n                            $scope.editInterface = null;\n                            $scope.selectedMode = SELECTION_MODE.NONE;\n                        }\n                        return;\n                    }\n                }\n\n                // When the interface is a bond or a bridge, place the children\n                // as members for that interface.\n                if(nic.type === INTERFACE_TYPE.BOND ||\n                   nic.type === INTERFACE_TYPE.BRIDGE) {\n                    nic.members = [];\n                    angular.forEach(nic.parents, function(parent) {\n                        nic.members.push(\n                            angular.copy($scope.originalInterfaces[parent]));\n                    });\n                }\n\n                // Format the tags when they have not already been formatted.\n                if(angular.isArray(nic.tags) &&\n                    nic.tags.length > 0 &&\n                    !angular.isString(nic.tags[0].text)) {\n                    nic.tags = formatTags(nic.tags);\n                }\n\n                nic.vlan = VLANsManager.getItemFromList(nic.vlan_id);\n                if(angular.isObject(nic.vlan)) {\n                    nic.fabric = FabricsManager.getItemFromList(\n                            nic.vlan.fabric);\n\n                    // Build the vlanTable for controller detail page.\n                    if ($scope.$parent.isController) {\n                        // Skip duplicate VLANs (by id, they can share names).\n                        if(!(Object.prototype.hasOwnProperty.call(\n                                addedVlans, nic.vlan.id))) {\n                            addedVlans[nic.vlan.id] = true;\n                            var vlanRecord = {\n                                \"fabric\": nic.fabric,\n                                \"vlan\": nic.vlan,\n                                \"subnets\": $filter('filter')(\n                                    $scope.subnets, {vlan:nic.vlan.id}, true),\n                                \"primary_rack\": null,\n                                \"secondary_rack\": null,\n                                \"sort_key\": nic.fabric.name + \"|\" +\n                                    $scope.getVLANText(nic.vlan)\n                            };\n                            if(nic.vlan.primary_rack) {\n                                vlanRecord.primary_rack =\n                                    ControllersManager.getItemFromList(\n                                        nic.vlan.primary_rack);\n                            }\n                            if(nic.vlan.secondary_rack) {\n                                vlanRecord.secondary_rack =\n                                    ControllersManager.getItemFromList(\n                                        nic.vlan.secondary_rack);\n                            }\n                            vlanTable.push(vlanRecord);\n                        }\n                        // Sort the table by (VLANText, fabric.name).\n                        vlanTable.sort(function(a, b) {\n                            return a.sort_key.localeCompare(b.sort_key);\n                        });\n                    }\n                }\n\n                // Update the interface based on its links or duplicate the\n                // interface if it has multiple links.\n                if(nic.links.length === 0) {\n                    // No links on this interface. The interface is either\n                    // disabled or has no links (which means the interface\n                    // is in LINK_UP mode).\n                    nic.link_id = -1;\n                    nic.subnet = null;\n                    nic.mode = LINK_MODE.LINK_UP;\n                    nic.ip_address = \"\";\n                    interfaces.push(nic);\n                } else {\n                    var idx = 0;\n                    angular.forEach(nic.links, function(link) {\n                        var nic_copy = angular.copy(nic);\n                        nic_copy.link_id = link.id;\n                        nic_copy.subnet = SubnetsManager.getItemFromList(\n                            link.subnet_id);\n                        nic_copy.mode = link.mode;\n                        nic_copy.ip_address = link.ip_address;\n                        if(angular.isUndefined(nic_copy.ip_address)) {\n                            nic_copy.ip_address = \"\";\n                        }\n                        // We don't want to deep copy the VLAN and fabric\n                        // object so we set those back to the original.\n                        nic_copy.vlan = nic.vlan;\n                        nic_copy.fabric = nic.fabric;\n                        if(idx > 0) {\n                            // Each extra link is an alais on the original\n                            // interface.\n                            nic_copy.type = INTERFACE_TYPE.ALIAS;\n                            nic_copy.name += \":\" + idx;\n                        }\n                        idx++;\n                        interfaces.push(nic_copy);\n                    });\n                }\n            });\n\n            // Update the scopes interfaces.\n            $scope.interfaces = interfaces;\n            $scope.vlanTable = vlanTable;\n\n            // Update the scope interface links mapping.\n            $scope.interfaceLinksMap = {};\n            angular.forEach($scope.interfaces, function(nic) {\n                var linkMaps = $scope.interfaceLinksMap[nic.id];\n                if(angular.isUndefined(linkMaps)) {\n                    linkMaps = {};\n                    $scope.interfaceLinksMap[nic.id] = linkMaps;\n                }\n                linkMaps[nic.link_id] = nic;\n            });\n\n            // Clear the editInterface if it no longer exists in the\n            // interfaceLinksMap.\n            if(angular.isObject($scope.editInterface)) {\n                var links = $scope.interfaceLinksMap[$scope.editInterface.id];\n                if(angular.isUndefined(links)) {\n                    $scope.editInterface = null;\n                    $scope.selectedMode = SELECTION_MODE.NONE;\n                } else {\n                    var link = links[$scope.editInterface.link_id];\n                    if(angular.isUndefined(link)) {\n                        $scope.editInterface = null;\n                        $scope.selectedMode = SELECTION_MODE.NONE;\n                    }\n                }\n            }\n\n            // Update newInterface.parent if it has changed.\n            updateNewInterface();\n        }\n\n        // Return the original link object for the given interface.\n        function mapNICToOriginalLink(nic_id, link_id) {\n            var originalInteface = $scope.originalInterfaces[nic_id];\n            if(angular.isObject(originalInteface)) {\n                var i, link = null;\n                for(i = 0; i < originalInteface.links.length; i++) {\n                    link = originalInteface.links[i];\n                    if(link.id === link_id) {\n                        break;\n                    }\n                }\n                return link;\n            } else {\n                return null;\n            }\n        }\n\n        // Leave single selection mode.\n        function leaveSingleSelectionMode() {\n            if($scope.selectedMode === SELECTION_MODE.SINGLE ||\n                $scope.selectedMode === SELECTION_MODE.ADD ||\n                $scope.selectedMode === SELECTION_MODE.DELETE) {\n                $scope.selectedMode = SELECTION_MODE.NONE;\n            }\n        }\n\n        // Update the new interface since the interfaces list has\n        // been reloaded.\n        function updateNewInterface() {\n            if(angular.isObject($scope.newInterface.parent)) {\n                var parentId = $scope.newInterface.parent.id;\n                var linkId = $scope.newInterface.parent.link_id;\n                var links = $scope.interfaceLinksMap[parentId];\n                if(angular.isObject(links)) {\n                    var newParent = links[linkId];\n                    if(angular.isObject(newParent)) {\n                        $scope.newInterface.parent = newParent;\n\n                        var iType = $scope.newInterface.type;\n                        var isAlias = iType === INTERFACE_TYPE.ALIAS;\n                        var isVLAN = iType === INTERFACE_TYPE.VLAN;\n                        var canAddAlias = $scope.canAddAlias(newParent);\n                        var canAddVLAN = $scope.canAddVLAN(newParent);\n                        if(!canAddAlias && !canAddVLAN) {\n                            // Cannot do any adding now.\n                            $scope.newInterface = {};\n                            leaveSingleSelectionMode();\n                        } else {\n                            if(isAlias && !canAddAlias && canAddVLAN) {\n                                $scope.newInterface.type = \"vlan\";\n                                $scope.addTypeChanged();\n                            } else if(isVLAN && !canAddVLAN && canAddAlias) {\n                                $scope.newInterface.type = \"alias\";\n                                $scope.addTypeChanged();\n                            }\n                        }\n                        return;\n                    }\n                }\n\n                // Parent no longer exists. Exit the single selection modes.\n                $scope.newInterface = {};\n                leaveSingleSelectionMode();\n            }\n        }\n\n        // Return the default VLAN for a fabric.\n        function getDefaultVLAN(fabric) {\n            return VLANsManager.getItemFromList(fabric.default_vlan_id);\n        }\n\n        // Return list of unused VLANs for an interface. Also remove the\n        // ignoreVLANs from the returned list.\n        function getUnusedVLANs(nic, ignoreVLANs) {\n            var vlans = $filter('removeDefaultVLAN')($scope.vlans);\n            vlans = $filter('filterByFabric')(vlans, nic.fabric);\n            vlans = $filter('filterByUnusedForInterface')(\n                vlans, nic, $scope.originalInterfaces);\n\n            // Remove the VLAN's that should be ignored when getting the unused\n            // VLANs. This is done to help the selection of the next default.\n            if(angular.isUndefined(ignoreVLANs)) {\n                ignoreVLANs = [];\n            }\n            angular.forEach(ignoreVLANs, function(vlan) {\n                var i;\n                for(i = 0; i < vlans.length; i++) {\n                    if(vlans[i].id === vlan.id) {\n                        vlans.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            return vlans;\n        }\n\n        // Return the currently selected interface objects.\n        function getSelectedInterfaces() {\n            var interfaces = [];\n            angular.forEach($scope.selectedInterfaces, function(key) {\n                var splitKey = key.split('/');\n                var links = $scope.interfaceLinksMap[splitKey[0]];\n                if(angular.isObject(links)) {\n                    var nic = links[splitKey[1]];\n                    if(angular.isObject(nic)) {\n                        interfaces.push(nic);\n                    }\n                }\n            });\n            return interfaces;\n        }\n\n        // Get the next available name.\n        function getNextName(prefix) {\n            var idx = 0;\n            angular.forEach($scope.originalInterfaces, function(nic) {\n                if(nic.name === prefix + idx) {\n                    idx++;\n                }\n            });\n            return prefix + idx;\n        }\n\n        // Return the tags formatted for ngTagInput.\n        function formatTags(tags) {\n            var formatted = [];\n            angular.forEach(tags, function(tag) {\n                formatted.push({ text: tag });\n            });\n            return formatted;\n        }\n\n        // Called by $parent when the node has been loaded.\n        $scope.nodeLoaded = function() {\n            $scope.$watch(\"node.interfaces\", updateInterfaces);\n            // Watch subnets for the served VLANs section.\n            if ($scope.$parent.isController) {\n                $scope.$watch(\"subnets\", updateInterfaces, true);\n            }\n            $scope.nodeHasLoaded = true;\n            updateLoaded();\n        };\n\n        // Return true if only the name or mac address of an interface can\n        // be edited.\n        $scope.isLimitedEditingAllowed = function(nic) {\n            if (!$scope.isSuperUser()) {\n                // If the user is not the superuser, pretend it's not Ready.\n                return false;\n            }\n            if ($scope.$parent.isController || $scope.$parent.isDevice) {\n                // Controllers and Devices are never in limited mode.\n                return false;\n            }\n            return (\n                angular.isObject($scope.node) &&\n                $scope.node.status === \"Deployed\" &&\n                nic.type !== \"vlan\");\n        };\n\n        // Return true if the networking information cannot be edited.\n        // (it can't be changed when the node is in any state other\n        // than Ready or Broken and the user is not a superuser)\n        $scope.isAllNetworkingDisabled = function() {\n            if (!$scope.isSuperUser()) {\n                // If the user is not a superuser, disable the networking panel.\n                return true;\n            }\n            if ($scope.$parent.isController || $scope.$parent.isDevice) {\n                // Never disable the full networking panel when its a\n                // Controller or Device.\n                return false;\n            }\n            if (angular.isObject($scope.node) &&\n                    [\"Ready\", \"Allocated\", \"Broken\"].indexOf(\n                        $scope.node.status) === -1) {\n                // If a non-controller node is not ready allocated, or broken,\n                // disable networking panel.\n                return true;\n            }\n            // User must be a superuser and the node must be\n            // either ready or broken. Enable it.\n            return false;\n        };\n\n        // Return true if the interface is the boot interface or has a parent\n        // that is the boot interface.\n        $scope.isBootInterface = function(nic) {\n            if(!angular.isObject(nic)) {\n                return false;\n            }\n\n            if(nic.is_boot && nic.type !== INTERFACE_TYPE.ALIAS) {\n                return true;\n            } else if(nic.type === INTERFACE_TYPE.BOND ||\n                      nic.type === INTERFACE_TYPE.BRIDGE) {\n                var i;\n                for(i = 0; i < nic.members.length; i++) {\n                    if(nic.members[i].is_boot) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n\n        // Get the text for the type of the interface.\n        $scope.getInterfaceTypeText = function(nic) {\n            var text = INTERFACE_TYPE_TEXTS[nic.type];\n            if(angular.isDefined(text)) {\n                return text;\n            } else {\n                return nic.type;\n            }\n        };\n\n        // Get the text for the link mode of the interface.\n        $scope.getLinkModeText = function(nic) {\n            var text = LINK_MODE_TEXTS[nic.mode];\n            if(angular.isDefined(text)) {\n                return text;\n            } else {\n                return nic.mode;\n            }\n        };\n\n        // Get the text to display in the VLAN dropdown.\n        $scope.getVLANText = function(vlan) {\n            if(!angular.isObject(vlan)) {\n                return \"\";\n            }\n\n            if(vlan.vid === 0) {\n                return \"untagged\";\n            } else if(angular.isString(vlan.name) && vlan.name.length > 0) {\n                return vlan.vid + \" (\" + vlan.name + \")\";\n            } else {\n                return vlan.vid;\n            }\n        };\n\n        // Get the text to display in the subnet dropdown.\n        $scope.getSubnetText = function(subnet) {\n            if(!angular.isObject(subnet)) {\n                return \"Unconfigured\";\n            } else if(angular.isString(subnet.name) &&\n                subnet.name.length > 0 &&\n                subnet.cidr !== subnet.name) {\n                return subnet.cidr + \" (\" + subnet.name + \")\";\n            } else {\n                return subnet.cidr;\n            }\n        };\n\n        // Get the subnet from its ID.\n        $scope.getSubnet = function(subnetId) {\n            return SubnetsManager.getItemFromList(subnetId);\n        };\n\n        // Return True if the interface name that the user typed is invalid.\n        $scope.isInterfaceNameInvalid = function(nic) {\n            if(!angular.isString(nic.name) || nic.name.length === 0) {\n                return true;\n            } else if(angular.isArray($scope.node.interfaces)) {\n                var i;\n                for(i = 0; i < $scope.node.interfaces.length; i++) {\n                    var otherNic = $scope.node.interfaces[i];\n                    if(otherNic.name === nic.name && otherNic.id !== nic.id) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n\n        // Return True if the link mode select should be disabled.\n        $scope.isLinkModeDisabled = function(nic) {\n            // This is only disabled when a subnet has not been selected.\n            if(angular.isFunction(nic.getValue)) {\n                return !angular.isObject(nic.getValue('subnet'));\n            } else {\n                return !angular.isObject(nic.subnet);\n            }\n        };\n\n        // Return the interface errors.\n        $scope.getInterfaceError = function(nic) {\n            if(angular.isDefined(nic.link_id) && nic.link_id >= 0) {\n                return $scope.interfaceErrorsByLinkId[nic.link_id];\n            }\n            return null;\n        };\n\n        // Return True if the interface IP address that the user typed is\n        // invalid.\n        $scope.isIPAddressInvalid = function(nic) {\n            if(angular.isString(nic.ip_address) && nic.mode === 'static') {\n                return (\n                    !ValidationService.validateIP(nic.ip_address) ||\n                    !ValidationService.validateIPInNetwork(\n                        nic.ip_address, nic.subnet.cidr));\n            } else {\n                return false;\n            }\n        };\n\n        // Return unique key for the interface.\n        $scope.getUniqueKey = function(nic) {\n            return nic.id + \"/\" + nic.link_id;\n        };\n\n        // Toggle selection of the interface.\n        $scope.toggleInterfaceSelect = function(nic) {\n            var key = $scope.getUniqueKey(nic);\n            var idx = $scope.selectedInterfaces.indexOf(key);\n            if(idx > -1) {\n                $scope.selectedInterfaces.splice(idx, 1);\n            } else {\n                $scope.selectedInterfaces.push(key);\n            }\n\n            if($scope.selectedInterfaces.length > 1) {\n                if($scope.selectedMode !== SELECTION_MODE.BOND) {\n                    $scope.selectedMode = SELECTION_MODE.MULTI;\n                }\n            } else if($scope.selectedInterfaces.length === 1) {\n                $scope.selectedMode = SELECTION_MODE.SINGLE;\n            } else {\n                $scope.selectedMode = SELECTION_MODE.NONE;\n            }\n        };\n\n        // Return true when the interface is selected.\n        $scope.isInterfaceSelected = function(nic) {\n            return $scope.selectedInterfaces.indexOf(\n                $scope.getUniqueKey(nic)) > -1;\n        };\n\n        // Returns true if the interface is not selected\n        $scope.cannotEditInterface = function(nic) {\n            if ($scope.selectedMode === SELECTION_MODE.NONE) {\n                return false;\n            } else if (\n                  $scope.selectedMode !== SELECTION_MODE.MULTI &&\n                  $scope.isInterfaceSelected(nic)) {\n                return false;\n            } else {\n                return true;\n            }\n        };\n\n        // Return true if in editing mode for the interface.\n        $scope.isEditing = function(nic) {\n            if($scope.selectedMode !== SELECTION_MODE.EDIT) {\n                return false;\n            } else {\n                return $scope.editInterface.id === nic.id;\n            }\n        };\n\n        // Start editing this interface.\n        $scope.edit = function(nic) {\n            $scope.selectedInterfaces = [$scope.getUniqueKey(nic)];\n            $scope.selectedMode = SELECTION_MODE.EDIT;\n            if($scope.$parent.isDevice) {\n                $scope.editInterface = {\n                    id: nic.id,\n                    name: nic.name,\n                    mac_address: nic.mac_address,\n                    tags: nic.tags.map(function(tag) { return tag.text; }),\n                    subnet: nic.subnet,\n                    ip_address: nic.ip_address,\n                    ip_assignment: nic.ip_assignment,\n                    link_id: nic.link_id\n                };\n                if(nic.subnet !== undefined && nic.subnet !== null) {\n                    $scope.editInterface.defaultSubnet = nic.subnet;\n                } else {\n                    $scope.editInterface.defaultSubnet = $scope.subnets[0];\n                }\n            } else {\n                $scope.editInterface = {\n                    id: nic.id,\n                    name: nic.name,\n                    mac_address: nic.mac_address,\n                    tags: nic.tags.map(function(tag) { return tag.text; }),\n                    fabric: nic.fabric,\n                    vlan: nic.vlan,\n                    subnet: nic.subnet,\n                    mode: nic.mode,\n                    ip_address: nic.ip_address,\n                    link_id: nic.link_id\n                };\n            }\n        };\n\n        // Called when the fabric is changed.\n        $scope.fabricChanged = function(nic) {\n            // Update the VLAN on the node to be the default VLAN for that\n            // fabric. The first VLAN for the fabric is the default.\n            if(nic.fabric !== null) {\n                nic.vlan = getDefaultVLAN(nic.fabric);\n            } else {\n                nic.vlan = null;\n            }\n            $scope.vlanChanged(nic);\n        };\n\n        // Called when the fabric is changed in a maas-obj-form.\n        $scope.fabricChangedForm = function(key, value, form) {\n            var vlan;\n            if(value !== null) {\n                vlan = getDefaultVLAN(value);\n            } else {\n                vlan = null;\n            }\n            form.updateValue('vlan', vlan);\n            $scope.vlanChangedForm('vlan', vlan, form);\n        };\n\n        // Called when the VLAN is changed.\n        $scope.vlanChanged = function(nic) {\n            nic.subnet = null;\n            $scope.subnetChanged(nic);\n        };\n\n        // Called when the VLAN is changed on a maas-obj-form\n        $scope.vlanChangedForm = function(key, value, form) {\n            form.updateValue('subnet', null);\n            $scope.subnetChangedForm('subnet', null, form);\n        };\n\n        // Called when the subnet is changed.\n        $scope.subnetChanged = function(nic) {\n            if(!angular.isObject(nic.subnet)) {\n                // Set to 'Unconfigured' so the link mode should be set to\n                // 'link_up'.\n                nic.mode = LINK_MODE.LINK_UP;\n            }\n            if ($scope.$parent.isDevice) {\n                nic.ip_address = null;\n            }\n            $scope.modeChanged(nic);\n        };\n\n        // Called when the subnet is changed.\n        $scope.subnetChangedForm = function(key, value, form) {\n            if(!angular.isObject(value)) {\n                // Set to 'Unconfigured' so the link mode should be set to\n                // 'link_up'.\n                form.updateValue('mode', LINK_MODE.LINK_UP);\n            }\n            mode = form.getValue('mode');\n            form.updateValue('ip_address', null);\n            $scope.modeChangedForm('mode', mode, form);\n        };\n\n        // Called when the mode is changed.\n        $scope.modeChanged = function(nic) {\n            // Clear the IP address when the mode is changed.\n            nic.ip_address = \"\";\n            if(nic.mode === 'static') {\n                var originalLink = mapNICToOriginalLink(nic.id, nic.link_id);\n                if(angular.isObject(originalLink) &&\n                    nic.subnet.id === originalLink.subnet_id) {\n                    // Set the original IP address if same subnet.\n                    nic.ip_address = originalLink.ip_address;\n                }\n            }\n        };\n\n        // Called when the mode is changed on a maas-obj-form.\n        $scope.modeChangedForm = function(key, value, form) {\n            // Clear the IP address when the mode is changed.\n            form.updateValue('ip_address', \"\");\n            if(value === 'static') {\n                var originalLink = mapNICToOriginalLink(\n                  form.getValue('id'), form.getValue('link_id'));\n                if(angular.isObject(originalLink) &&\n                    form.getValue('subnet').id === originalLink.subnet_id) {\n                    // Set the original IP address if same subnet.\n                    form.updateValue('ip_address', originalLink.ip_address);\n                }\n            }\n        };\n\n        // Called to cancel edit mode.\n        $scope.editCancel = function(nic) {\n            $scope.selectedInterfaces = [];\n            $scope.selectedMode = SELECTION_MODE.NONE;\n            $scope.editInterface = null;\n        };\n\n        // Preprocess things for updateInterfaceForm.\n        $scope.preProcessInterface = function(nic) {\n            var params = angular.copy(nic);\n\n            delete params.id;\n            params.system_id = $scope.node.system_id;\n            params.interface_id = nic.id;\n\n            // we need IDs not objects.\n            if(nic.fabric !== undefined && nic.fabric !== null) {\n                params.fabric = nic.fabric.id;\n            } else {\n                params.fabric = null;\n            }\n            if(nic.vlan !== undefined && nic.vlan !== null) {\n                params.vlan = nic.vlan.id;\n            } else {\n                params.vlan = null;\n            }\n            if(nic.subnet !== undefined && nic.subnet !== null) {\n                params.subnet = params.subnet.id;\n            } else {\n                delete params.subnet;\n            }\n\n            if(angular.isDefined(nic.link_id) && nic.link_id >= 0) {\n                params.link_id = nic.link_id;\n                delete $scope.interfaceErrorsByLinkId[nic.link_id];\n            } else {\n                delete params.link_id;\n            }\n            if((nic.mode === LINK_MODE.STATIC ||\n                nic.ip_assignment !== IP_ASSIGNMENT.DYNAMIC) &&\n               angular.isString(nic.ip_address) &&\n               nic.ip_address.length > 0) {\n                params.ip_address = nic.ip_address;\n            } else {\n                delete params.ip_address;\n            }\n            return params;\n        };\n\n        // Save the following interface on the node.\n        $scope.saveInterface = function(nic) {\n            var params;\n            if($scope.$parent.isDevice) {\n                params = {\n                    \"name\": nic.name,\n                    \"mac_address\": nic.mac_address,\n                    \"ip_assignment\": nic.ip_assignment,\n                    \"ip_address\": nic.ip_address\n                };\n            } else {\n                params = {\n                    \"name\": nic.name,\n                    \"mac_address\": nic.mac_address,\n                    \"mode\": nic.mode,\n                    \"tags\": nic.tags.map(\n                        function(tag) { return tag.text; })\n                };\n            }\n            if(nic.fabric !== undefined && nic.fabric !== null) {\n                params.fabric = nic.fabric.id;\n            } else {\n                params.fabric = null;\n            }\n            if(nic.vlan !== undefined && nic.vlan !== null) {\n                params.vlan = nic.vlan.id;\n            } else {\n                params.vlan = null;\n            }\n            if (nic.subnet !== undefined && nic.subnet !== null) {\n                params.subnet = nic.subnet.id;\n            } else {\n                params.subnet = null;\n            }\n            if(angular.isDefined(nic.link_id) && nic.link_id >= 0) {\n                params.link_id = nic.link_id;\n                delete $scope.interfaceErrorsByLinkId[nic.link_id];\n            }\n            if(angular.isString(nic.ip_address) && nic.ip_address.length > 0) {\n                params.ip_address = nic.ip_address;\n            }\n            return $scope.$parent.nodesManager.updateInterface(\n                $scope.node, nic.id, params).then(null, function(error) {\n                    // XXX blake_r: Just log the error in the console, but\n                    // we need to expose this as a better message to the\n                    // user.\n                    console.log(error);\n\n                    // Update the interfaces so it is back to the way it\n                    // was before the user changed it.\n                    updateInterfaces();\n                });\n        };\n\n        // Save the following link on the node.\n        $scope.saveInterfaceLink = function(nic) {\n            var params = {\n                \"mode\": nic.mode\n            };\n            if($scope.$parent.isDevice) {\n                params.ip_assignment = nic.ip_assignment;\n            }\n            if(angular.isObject(nic.subnet)) {\n                params.subnet = nic.subnet.id;\n            }\n            if(angular.isDefined(nic.link_id) && nic.link_id >= 0) {\n                params.link_id = nic.link_id;\n                delete $scope.interfaceErrorsByLinkId[nic.link_id];\n            }\n            if(nic.mode === LINK_MODE.STATIC &&\n                angular.isString(nic.ip_address) &&\n                nic.ip_address.length > 0) {\n                params.ip_address = nic.ip_address;\n            }\n            return $scope.$parent.nodesManager.linkSubnet(\n                $scope.node, nic.id, params).then(null, function(error) {\n                    console.log(error);\n                    if(angular.isDefined(nic.link_id) && nic.link_id >= 0) {\n                        $scope.interfaceErrorsByLinkId[nic.link_id] = error;\n                    }\n                    // Update the interfaces so it is back to the way it\n                    // was before the user changed it.\n                    updateInterfaces();\n                    throw error;\n                });\n        };\n\n        // Called to save the interface.\n        $scope.editSave = function(editInterface) {\n            $scope.editCancel();\n            return editInterface;\n        };\n\n        // Return true if the interface delete confirm is being shown.\n        $scope.isShowingDeleteConfirm = function() {\n            return $scope.selectedMode === SELECTION_MODE.DELETE;\n        };\n\n        // Return true if the interface add interface is being shown.\n        $scope.isShowingAdd = function() {\n            return $scope.selectedMode === SELECTION_MODE.ADD;\n        };\n\n        // Return true if either an alias or VLAN can be added.\n        $scope.canAddAliasOrVLAN = function(nic) {\n            if($scope.$parent.isController) {\n                return false;\n            } else if ($scope.isAllNetworkingDisabled()) {\n                return false;\n            } else {\n                return $scope.canAddAlias(nic) || $scope.canAddVLAN(nic);\n            }\n        };\n\n        // Return true if the alias can be added to interface.\n        $scope.canAddAlias = function(nic) {\n            if(!angular.isObject(nic)) {\n                return false;\n            } else if(nic.type === INTERFACE_TYPE.ALIAS) {\n                return false;\n            } else if(nic.links.length === 0 ||\n                nic.links[0].mode === LINK_MODE.LINK_UP) {\n                return false;\n            } else {\n                return true;\n            }\n        };\n\n        // Return true if the VLAN can be added to interface.\n        $scope.canAddVLAN = function(nic) {\n            if(!angular.isObject(nic)) {\n                return false;\n            } else if(nic.type === INTERFACE_TYPE.ALIAS ||\n                nic.type === INTERFACE_TYPE.VLAN) {\n                return false;\n            }\n            var unusedVLANs = getUnusedVLANs(nic);\n            return unusedVLANs.length > 0;\n        };\n\n        // Return true if another VLAN can be added to this already being\n        // added interface.\n        $scope.canAddAnotherVLAN = function(nic) {\n            if(!$scope.canAddVLAN(nic)) {\n                return false;\n            }\n            var unusedVLANs = getUnusedVLANs(nic);\n            return unusedVLANs.length > 1;\n        };\n\n        // Return the text to use for the remove link and message.\n        $scope.getRemoveTypeText = function(nic) {\n            if(nic.type === INTERFACE_TYPE.PHYSICAL) {\n                return \"interface\";\n            } else if(nic.type === INTERFACE_TYPE.VLAN) {\n                return \"VLAN\";\n            } else {\n                return nic.type;\n            }\n        };\n\n        // Return true if the interface can be removed.\n        $scope.canBeRemoved = function() {\n            return (\n                !$scope.$parent.isController &&\n                !$scope.isAllNetworkingDisabled());\n        };\n\n        // Enter remove mode.\n        $scope.remove = function() {\n            $scope.selectedMode = SELECTION_MODE.DELETE;\n        };\n\n        // Quickly enter remove by selecting the node first.\n        $scope.quickRemove = function(nic) {\n            $scope.selectedInterfaces = [$scope.getUniqueKey(nic)];\n            $scope.remove();\n        };\n\n        // Cancel the current mode go back to sinle selection mode.\n        $scope.cancel = function() {\n            $scope.newInterface = {};\n            $scope.newBondInterface = {};\n            $scope.newBridgeInterface = {};\n            if($scope.selectedMode === SELECTION_MODE.CREATE_BOND) {\n                $scope.selectedMode = SELECTION_MODE.MULTI;\n            } else if($scope.selectedMode === SELECTION_MODE.CREATE_PHYSICAL) {\n                $scope.selectedMode = SELECTION_MODE.NONE;\n            } else {\n                $scope.selectedMode = SELECTION_MODE.SINGLE;\n            }\n        };\n\n        // Confirm the removal of interface.\n        $scope.confirmRemove = function(nic) {\n            $scope.selectedMode = SELECTION_MODE.NONE;\n            $scope.selectedInterfaces = [];\n            if(nic.type !== INTERFACE_TYPE.ALIAS) {\n                $scope.$parent.nodesManager.deleteInterface(\n                    $scope.node, nic.id);\n            } else {\n                $scope.$parent.nodesManager.unlinkSubnet(\n                    $scope.node, nic.id, nic.link_id);\n            }\n\n            // Remove the interface from available interfaces\n            var idx = $scope.interfaces.indexOf(nic);\n            if(idx > -1) {\n                $scope.interfaces.splice(idx, 1);\n            }\n        };\n\n        // Enter add mode.\n        $scope.add = function(type, nic) {\n            // When this is called right after another VLAN was just added, we\n            // remove its used VLAN from the available list.\n            var ignoreVLANs = [];\n            if(angular.isObject($scope.newInterface.vlan)) {\n                ignoreVLANs.push($scope.newInterface.vlan);\n            }\n\n            // Get the default VLAN for the new interface.\n            var vlans = getUnusedVLANs(nic, ignoreVLANs);\n            var defaultVLAN = null;\n            if(vlans.length > 0) {\n                defaultVLAN = vlans[0];\n            }\n            var defaultSubnet = null;\n            var defaultMode = LINK_MODE.LINK_UP;\n\n            // Alias used defaults based from its parent.\n            if(type === INTERFACE_TYPE.ALIAS) {\n                defaultVLAN = nic.vlan;\n                defaultSubnet = $filter('filter')(\n                    $scope.subnets, {vlan:defaultVLAN.id}, true)[0];\n                defaultMode = LINK_MODE.AUTO;\n            }\n\n            // Setup the new interface and enter add mode.\n            $scope.newInterface = {\n                type: type,\n                vlan: defaultVLAN,\n                subnet: defaultSubnet,\n                mode: defaultMode,\n                parent: nic,\n                tags: []\n            };\n            $scope.selectedMode = SELECTION_MODE.ADD;\n        };\n\n        // Quickly enter add by selecting the node first.\n        $scope.quickAdd = function(nic) {\n            $scope.selectedInterfaces = [$scope.getUniqueKey(nic)];\n            var type = 'alias';\n            if(!$scope.canAddAlias(nic)) {\n                type = 'vlan';\n            }\n            $scope.add(type, nic);\n        };\n\n        // Return the name of the interface being added.\n        $scope.getAddName = function() {\n            if($scope.newInterface.type === INTERFACE_TYPE.ALIAS) {\n                var aliasIdx = $scope.newInterface.parent.links.length;\n                return $scope.newInterface.parent.name + \":\" + aliasIdx;\n            } else if ($scope.newInterface.type === INTERFACE_TYPE.VLAN) {\n                return (\n                    $scope.newInterface.parent.name + \".\" +\n                    $scope.newInterface.vlan.vid);\n            }\n        };\n\n        // Called when the type of interface is changed.\n        $scope.addTypeChanged = function() {\n            if($scope.newInterface.type === INTERFACE_TYPE.ALIAS) {\n                $scope.newInterface.vlan = $scope.newInterface.parent.vlan;\n                $scope.newInterface.subnet = $filter('filter')(\n                    $scope.subnets,\n                    {vlan:$scope.newInterface.vlan.id}, true)[0];\n                $scope.newInterface.mode = LINK_MODE.AUTO;\n            } else if($scope.newInterface.type === INTERFACE_TYPE.VLAN) {\n                var vlans = getUnusedVLANs($scope.newInterface.parent);\n                $scope.newInterface.vlan = null;\n                if(vlans.length > 0) {\n                    $scope.newInterface.vlan = vlans[0];\n                }\n                $scope.newInterface.subnet = null;\n                $scope.newInterface.mode = LINK_MODE.LINK_UP;\n            }\n        };\n\n        // Perform the add action over the websocket.\n        $scope.addInterface = function(type) {\n            var nic;\n            if($scope.$parent.isDevice) {\n                nic = {\n                    id: $scope.newInterface.parent.id,\n                    tags: $scope.newInterface.tags.map(\n                        function(tag) { return tag.text; }),\n                    ip_assignment: $scope.newInterface.ip_assignment,\n                    subnet: $scope.newInterface.subnet,\n                    ip_address: $scope.newInterface.ip_address\n                };\n                $scope.saveInterfaceLink(nic);\n            } else if($scope.newInterface.type === INTERFACE_TYPE.ALIAS) {\n                // Add a link to the current interface.\n                nic = {\n                    id: $scope.newInterface.parent.id,\n                    mode: $scope.newInterface.mode,\n                    subnet: $scope.newInterface.subnet,\n                    ip_address: $scope.newInterface.ip_address\n                };\n                $scope.saveInterfaceLink(nic);\n            } else if($scope.newInterface.type === INTERFACE_TYPE.VLAN) {\n                var params = {\n                    parent: $scope.newInterface.parent.id,\n                    vlan: $scope.newInterface.vlan.id,\n                    mode: $scope.newInterface.mode,\n                    tags: $scope.newInterface.tags.map(\n                        function(tag) { return tag.text; })\n                };\n                if(angular.isObject($scope.newInterface.subnet)) {\n                    params.subnet = $scope.newInterface.subnet.id;\n                    params.ip_address = $scope.newInterface.ip_address;\n                }\n                $scope.$parent.nodesManager.createVLANInterface(\n                    $scope.node, params).then(null, function(error) {\n                        // Should do something better but for now just log\n                        // the error.\n                        console.log(error);\n                    });\n            }\n\n            // Add again based on the clicked option.\n            if(angular.isString(type)) {\n                $scope.add(type, $scope.newInterface.parent);\n            } else {\n                $scope.selectedMode = SELECTION_MODE.NONE;\n                $scope.selectedInterfaces = [];\n                $scope.newInterface = {};\n            }\n        };\n\n        // Return true if the networking information cannot be edited\n        // or if this interface should be disabled in the list. Only\n        // returns true when in create bond mode.\n        $scope.isDisabled = function() {\n            if ($scope.isAllNetworkingDisabled()) {\n                return true;\n            } else {\n                return (\n                    $scope.selectedMode !== SELECTION_MODE.NONE &&\n                    $scope.selectedMode !== SELECTION_MODE.SINGLE &&\n                    $scope.selectedMode !== SELECTION_MODE.MULTI);\n            }\n        };\n\n        // Return true when a bond can be created based on the current\n        // selection. Only can be done if no aliases are selected and all\n        // selected interfaces are on the same VLAN.\n        $scope.canCreateBond = function() {\n            if($scope.selectedMode !== SELECTION_MODE.MULTI) {\n                return false;\n            }\n            var interfaces = getSelectedInterfaces();\n            var i, vlan;\n            for(i = 0; i < interfaces.length; i++) {\n                var nic = interfaces[i];\n                if(nic.type === INTERFACE_TYPE.ALIAS ||\n                    nic.type === INTERFACE_TYPE.BOND) {\n                    return false;\n                } else if(!angular.isObject(vlan)) {\n                    vlan = nic.vlan;\n                } else if(vlan !== nic.vlan) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        // Return true when the create bond view is being shown.\n        $scope.isShowingCreateBond = function() {\n            return $scope.selectedMode === SELECTION_MODE.CREATE_BOND;\n        };\n\n        // Show the create bond view.\n        $scope.showCreateBond = function() {\n            if($scope.selectedMode === SELECTION_MODE.MULTI &&\n                $scope.canCreateBond()) {\n                $scope.selectedMode = SELECTION_MODE.CREATE_BOND;\n\n                var parents = getSelectedInterfaces();\n                $scope.newBondInterface = {\n                    name: getNextName(\"bond\"),\n                    tags: [],\n                    parents: parents,\n                    primary: parents[0],\n                    mac_address: \"\",\n                    mode: \"active-backup\",\n                    lacpRate: \"slow\",\n                    xmitHashPolicy: \"layer2\"\n                };\n            }\n        };\n\n        // Return true if the interface has a parent that is a boot interface.\n        $scope.hasBootInterface = function(nic) {\n            if(!angular.isArray(nic.parents)) {\n                return false;\n            }\n            var i;\n            for(i = 0; i < nic.parents.length; i++) {\n                if(nic.parents[i].is_boot) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Return the MAC address that should be shown as a placeholder. This\n        // this is the MAC address of the primary interface.\n        $scope.getInterfacePlaceholderMACAddress = function(nic) {\n            if(!angular.isObject(nic.primary)) {\n                return \"\";\n            } else {\n                return nic.primary.mac_address;\n            }\n        };\n\n        // Return true if the user has inputed a value in the MAC address field\n        // but it is invalid.\n        $scope.isMACAddressInvalid = function(mac_address, invalidEmpty) {\n            if(angular.isUndefined(invalidEmpty)) {\n                invalidEmpty = false;\n            }\n            if(!angular.isString(mac_address) || mac_address === \"\") {\n                return invalidEmpty;\n            }\n            return !ValidationService.validateMAC(mac_address);\n        };\n\n        // Return true when the LACR rate selection should be shown.\n        $scope.showLACPRate = function() {\n            return $scope.newBondInterface.mode === \"802.3ad\";\n        };\n\n        // Return true when the XMIT hash policy should be shown.\n        $scope.showXMITHashPolicy = function() {\n            return (\n                $scope.newBondInterface.mode === \"balance-xor\" ||\n                $scope.newBondInterface.mode === \"802.3ad\" ||\n                $scope.newBondInterface.mode === \"balance-tlb\");\n        };\n\n        // Return true if cannot add the bond.\n        $scope.cannotAddBond = function() {\n            return (\n                $scope.isInterfaceNameInvalid($scope.newBondInterface) ||\n                $scope.isMACAddressInvalid(\n                    $scope.newBondInterface.mac_address));\n        };\n\n        // Actually add the bond.\n        $scope.addBond = function() {\n            if($scope.cannotAddBond()) {\n               return;\n            }\n\n            var parents = $scope.newBondInterface.parents.map(\n                function(nic) { return nic.id; });\n            var mac_address = $scope.newBondInterface.mac_address;\n            if(mac_address === \"\") {\n                mac_address = $scope.newBondInterface.primary.mac_address;\n            }\n            var vlan_id, vlan = $scope.newBondInterface.primary.vlan;\n            if(angular.isObject(vlan)) {\n                vlan_id = vlan.id;\n            } else {\n                vlan_id = null;\n            }\n            var params = {\n                name: $scope.newBondInterface.name,\n                mac_address: mac_address,\n                tags: $scope.newBondInterface.tags.map(\n                    function(tag) { return tag.text; }),\n                parents: parents,\n                vlan: vlan_id,\n                bond_mode: $scope.newBondInterface.mode,\n                bond_lacp_rate: $scope.newBondInterface.lacpRate,\n                bond_xmit_hash_policy: $scope.newBondInterface.xmitHashPolicy\n            };\n            $scope.$parent.nodesManager.createBondInterface(\n                $scope.node, params).then(null, function(error) {\n                    // Should do something better but for now just log\n                    // the error.\n                    console.log(error);\n                });\n\n            // Remove the parent interfaces so that they don't show up\n            // in the listing unti the new bond appears.\n            angular.forEach($scope.newBondInterface.parents, function(parent) {\n                var idx = $scope.interfaces.indexOf(parent);\n                if(idx > -1) {\n                    $scope.interfaces.splice(idx, 1);\n                }\n            });\n\n            // Clear the bond interface and reset the mode.\n            $scope.newBondInterface = {};\n            $scope.selectedInterfaces = [];\n            $scope.selectedMode = SELECTION_MODE.NONE;\n        };\n\n        // Return true when a bridge can be created based on the current\n        // selection. Only can be done if no aliases are selected and only\n        // one interface is selected.\n        $scope.canCreateBridge = function() {\n            if($scope.selectedMode !== SELECTION_MODE.SINGLE) {\n                return false;\n            }\n            var nic = getSelectedInterfaces()[0];\n            if(nic.type === INTERFACE_TYPE.ALIAS ||\n                nic.type === INTERFACE_TYPE.BRIDGE) {\n                return false;\n            }\n            return true;\n        };\n\n        // Return true when the create bridge view is being shown.\n        $scope.isShowingCreateBridge = function() {\n            return $scope.selectedMode === SELECTION_MODE.CREATE_BRIDGE;\n        };\n\n        // Show the create bridge view.\n        $scope.showCreateBridge = function() {\n            if($scope.selectedMode === SELECTION_MODE.SINGLE &&\n                $scope.canCreateBridge()) {\n                $scope.selectedMode = SELECTION_MODE.CREATE_BRIDGE;\n\n                var parents = getSelectedInterfaces();\n                $scope.newBridgeInterface = {\n                    name: getNextName(\"br\"),\n                    tags: [],\n                    parents: parents,\n                    primary: parents[0],\n                    mac_address: \"\",\n                    bridge_stp: false,\n                    bridge_fd: 15\n                };\n            }\n        };\n\n        // Return true if cannot add the bridge.\n        $scope.cannotAddBridge = function() {\n            return (\n                $scope.isInterfaceNameInvalid($scope.newBridgeInterface) ||\n                $scope.isMACAddressInvalid(\n                    $scope.newBridgeInterface.mac_address));\n        };\n\n        // Actually add the bridge.\n        $scope.addBridge = function() {\n            if($scope.cannotAddBridge()) {\n               return;\n            }\n\n            var parents = [$scope.newBridgeInterface.primary.id];\n            var mac_address = $scope.newBridgeInterface.mac_address;\n            if(mac_address === \"\") {\n                mac_address = $scope.newBridgeInterface.primary.mac_address;\n            }\n            var params = {\n                name: $scope.newBridgeInterface.name,\n                mac_address: mac_address,\n                tags: $scope.newBridgeInterface.tags.map(\n                    function(tag) { return tag.text; }),\n                parents: parents,\n                vlan: $scope.newBridgeInterface.primary.vlan.id,\n                bridge_stp: $scope.newBridgeInterface.bridge_stp,\n                bridge_fd: $scope.newBridgeInterface.bridge_fd\n            };\n            $scope.$parent.nodesManager.createBridgeInterface(\n                $scope.node, params).then(null, function(error) {\n                    // Should do something better but for now just log\n                    // the error.\n                    console.log(error);\n                });\n\n            // Remove the parent interface so that they don't show up\n            // in the listing unti the new bond appears.\n            var idx = $scope.interfaces.indexOf(\n                $scope.newBridgeInterface.primary);\n            if(idx > -1) {\n                $scope.interfaces.splice(idx, 1);\n            }\n\n            // Clear the bridge interface and reset the mode.\n            $scope.newBridgeInterface = {};\n            $scope.selectedInterfaces = [];\n            $scope.selectedMode = SELECTION_MODE.NONE;\n        };\n\n        // Return true when the create physical interface view is being shown.\n        $scope.isShowingCreatePhysical = function() {\n            return $scope.selectedMode === SELECTION_MODE.CREATE_PHYSICAL;\n        };\n\n        // Show the create interface view.\n        $scope.showCreatePhysical = function() {\n            if($scope.selectedMode === SELECTION_MODE.NONE) {\n                $scope.selectedMode = SELECTION_MODE.CREATE_PHYSICAL;\n                if($scope.$parent.isDevice) {\n                    $scope.newInterface = {\n                        name: getNextName(\"eth\"),\n                        mac_address: \"\",\n                        macError: false,\n                        tags: [],\n                        errorMsg: null,\n                        subnet: null,\n                        ip_assignment: IP_ASSIGNMENT.DYNAMIC\n                    };\n                } else {\n                    $scope.newInterface = {\n                        name: getNextName(\"eth\"),\n                        mac_address: \"\",\n                        macError: false,\n                        tags: [],\n                        errorMsg: null,\n                        fabric: $scope.fabrics[0],\n                        vlan: getDefaultVLAN($scope.fabrics[0]),\n                        subnet: null,\n                        mode: LINK_MODE.LINK_UP\n                    };\n                }\n            }\n        };\n\n        // Return true if cannot add the interface.\n        $scope.cannotAddPhysicalInterface = function() {\n            return (\n                $scope.isInterfaceNameInvalid($scope.newInterface) ||\n                $scope.isMACAddressInvalid(\n                    $scope.newInterface.mac_address, true));\n        };\n\n        // Actually add the new physical interface.\n        $scope.addPhysicalInterface = function() {\n            if($scope.cannotAddPhysicalInterface()) {\n               return;\n            }\n\n            var params;\n            if($scope.$parent.isDevice) {\n                params = {\n                    name: $scope.newInterface.name,\n                    mac_address: $scope.newInterface.mac_address,\n                    tags: $scope.newInterface.tags.map(\n                        function(tag) { return tag.text; }),\n                    ip_assignment: $scope.newInterface.ip_assignment,\n                    ip_address: $scope.newInterface.ip_address\n                };\n            } else {\n                params = {\n                    name: $scope.newInterface.name,\n                    tags: $scope.newInterface.tags.map(\n                        function(tag) { return tag.text; }),\n                    mac_address: $scope.newInterface.mac_address,\n                    vlan: $scope.newInterface.vlan.id,\n                    mode: $scope.newInterface.mode\n                };\n            }\n            if(angular.isObject($scope.newInterface.subnet)) {\n                params.subnet = $scope.newInterface.subnet.id;\n            }\n            $scope.newInterface.macError = false;\n            $scope.newInterface.errorMsg = null;\n            $scope.$parent.nodesManager.createPhysicalInterface(\n                $scope.node, params).then(function() {\n                    // Clear the interface and reset the mode.\n                    $scope.newInterface = {};\n                    $scope.selectedMode = SELECTION_MODE.NONE;\n                },\n                function(errorStr) {\n                    error = JSONService.tryParse(errorStr);\n                    if(!angular.isObject(error)) {\n                        // Was not a JSON error. This is wrong here as it\n                        // should be, so just log to the console.\n                        console.log(errorStr);\n                    } else {\n                        macError = error.mac_address;\n                        if(angular.isArray(macError)) {\n                            $scope.newInterface.macError = true;\n                            $scope.newInterface.errorMsg = macError[0];\n                        }\n                    }\n                });\n        };\n\n        // Load all the required managers. NodesManager and GeneralManager\n        // are loaded by the parent controller \"NodeDetailsController\".\n        ManagerHelperService.loadManagers($scope, [\n            FabricsManager,\n            VLANsManager,\n            SubnetsManager,\n            UsersManager,\n            ControllersManager\n        ]).then(function() {\n            $scope.managersHaveLoaded = true;\n            updateLoaded();\n        });\n\n        // Tell $parent that the networkingController has been loaded.\n        $scope.$parent.controllerLoaded('networkingController', $scope);\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/node_details_networking.js","/*\n * Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Manage a node's filesystems, including adding special filesystems.\n */\n\n(function() {\n\n    function SpecialFilesystem() {\n        this.fstype = \"tmpfs\";\n        this.mountPoint = \"\";\n        this.mountOptions = \"\";\n    }\n\n    SpecialFilesystem.prototype.isValid = function() {\n        return this.mountPoint.startsWith(\"/\");\n    };\n\n    SpecialFilesystem.prototype.describe = function() {\n        var parts = [this.fstype];\n        // Add the mount point if specified and valid.\n        if (this.mountPoint.startsWith(\"/\")) {\n            parts.push(\"at \" + this.mountPoint);\n        }\n        // Filesystem-specific bits.\n        switch (this.fstype) {\n        case \"tmpfs\":\n            // Extract size=n parameter from mount options. Other\n            // options could be added in the future.\n            var size = this.mountOptions.match(/\\bsize=(\\d+)(%?)/);\n            if (size !== null) {\n                if (size[2] === \"%\") {\n                    parts.push(\"limited to \" + size[1] + \"% of memory\");\n                } else {\n                    parts.push(\"limited to \" + size[1] + \" bytes\");\n                }\n            }\n            break;\n        case \"ramfs\":\n            // This filesystem does not recognise any options. Consider\n            // warning about lack of a size limit.\n            break;\n        }\n        return parts.join(\" \");\n    };\n\n    function NodeFilesystemsController($scope) {\n\n        // Which drop-down is currently selected, e.g. \"special\".\n        $scope.dropdown = null;\n\n        // Select the \"special\" drop-down.\n        $scope.addSpecialFilesystem = function() {\n            $scope.dropdown = \"special\";\n        };\n\n        // Deselect the \"special\" drop-down.\n        $scope.addSpecialFilesystemFinished = function() {\n            if ($scope.dropdown === \"special\") {\n                $scope.dropdown = null;\n            }\n        };\n    }\n\n    function NodeAddSpecialFilesystemController($scope, MachinesManager) {\n\n        $scope.filesystem = new SpecialFilesystem();\n        $scope.description = null;  // Updated by watch.\n\n        $scope.$watch(\"filesystem\", function(filesystem) {\n            $scope.description = filesystem.describe();\n        }, true);\n\n        $scope.canMount = function() {\n            return $scope.filesystem.isValid();\n        };\n\n        $scope.mount = function() {\n            MachinesManager.mountSpecialFilesystem(\n                $scope.node, $scope.filesystem.fstype,\n                $scope.filesystem.mountPoint,\n                $scope.filesystem.mountOptions);\n            $scope.addSpecialFilesystemFinished();\n        };\n\n        $scope.cancel = function() {\n            $scope.filesystem = new SpecialFilesystem();\n            $scope.addSpecialFilesystemFinished();\n        };\n    }\n\n    angular.module(\"MAAS\").controller(\n        \"NodeFilesystemsController\", [\n            \"$scope\", NodeFilesystemsController\n        ]);\n\n    angular.module(\"MAAS\").controller(\n        \"NodeAddSpecialFilesystemController\", [\n            \"$scope\", \"MachinesManager\",\n            NodeAddSpecialFilesystemController\n        ]);\n\n}());\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/node_details_storage_filesystems.js","/* Copyright 2015-2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Node Storage Controller\n */\n\n\n// Filter that is specific to the NodeStorageController. Remove the available\n// disks from the list if being used in the availableNew.\nangular.module('MAAS').filter('removeAvailableByNew', function() {\n    return function(disks, availableNew) {\n        if(!angular.isObject(availableNew) || (\n            !angular.isObject(availableNew.device) &&\n            !angular.isArray(availableNew.devices))) {\n            return disks;\n        }\n\n        var filtered = [];\n        var single = true;\n        if(angular.isArray(availableNew.devices)) {\n            single = false;\n        }\n        angular.forEach(disks, function(disk) {\n            if(single) {\n                if(disk !== availableNew.device) {\n                    filtered.push(disk);\n                }\n            } else {\n                var i, found = false;\n                for(i = 0; i < availableNew.devices.length; i++) {\n                    if(disk === availableNew.devices[i]) {\n                        found = true;\n                        break;\n                    }\n                }\n                if(!found) {\n                    filtered.push(disk);\n                }\n            }\n        });\n        return filtered;\n    };\n});\n\nangular.module('MAAS').controller('NodeStorageController', [\n    '$scope', 'MachinesManager', 'ConverterService', 'UsersManager',\n    function($scope, MachinesManager, ConverterService, UsersManager) {\n\n        // From models/partitiontable.py - must be kept in sync.\n        var INITIAL_PARTITION_OFFSET = 4 * 1024 * 1024;\n        var END_OF_PARTITION_TABLE_SPACE = 1024 * 1024;\n        var PARTITION_TABLE_EXTRA_SPACE = INITIAL_PARTITION_OFFSET +\n            END_OF_PARTITION_TABLE_SPACE;\n        var PREP_PARTITION_SIZE = 8 * 1024 * 1024;\n\n        // From models/partition.py - must be kept in sync.\n        var PARTITION_ALIGNMENT_SIZE = 4 * 1024 * 1024;\n        var MIN_PARTITION_SIZE = PARTITION_ALIGNMENT_SIZE;\n\n        // Different selection modes.\n        var SELECTION_MODE = {\n            NONE: null,\n            SINGLE: \"single\",\n            MUTLI: \"multi\",\n            UNMOUNT: \"unmount\",\n            UNFORMAT: \"unformat\",\n            EDIT: \"edit\",\n            DELETE: \"delete\",\n            FORMAT_AND_MOUNT: \"format-mount\",\n            PARTITION: \"partition\",\n            BCACHE: \"bcache\",\n            RAID: \"raid\",\n            VOLUME_GROUP: \"volume-group\",\n            LOGICAL_VOLUME: \"logical-volume\"\n        };\n\n        // Different available raid modes.\n        var RAID_MODES = [\n            {\n                level: \"raid-0\",\n                title: \"RAID 0\",\n                min_disks: 2,\n                allows_spares: false,\n                calculateSize: function(minSize, numDisks) {\n                    return minSize * numDisks;\n                }\n            },\n            {\n                level: \"raid-1\",\n                title: \"RAID 1\",\n                min_disks: 2,\n                allows_spares: true,\n                calculateSize: function(minSize, numDisks) {\n                    return minSize;\n                }\n            },\n            {\n                level: \"raid-5\",\n                title: \"RAID 5\",\n                min_disks: 3,\n                allows_spares: true,\n                calculateSize: function(minSize, numDisks) {\n                    return minSize * (numDisks - 1);\n                }\n            },\n            {\n                level: \"raid-6\",\n                title: \"RAID 6\",\n                min_disks: 4,\n                allows_spares: true,\n                calculateSize: function(minSize, numDisks) {\n                    return minSize * (numDisks - 2);\n                }\n            },\n            {\n                level: \"raid-10\",\n                title: \"RAID 10\",\n                min_disks: 3,\n                allows_spares: true,\n                calculateSize: function(minSize, numDisks) {\n                    return minSize * numDisks / 2;\n                }\n            }\n        ];\n\n        $scope.tableInfo = {column: 'name'};\n        $scope.has_disks = false;\n        $scope.filesystems = [];\n        $scope.filesystemsMap = {};\n        $scope.filesystemMode = SELECTION_MODE.NONE;\n        $scope.filesystemAllSelected = false;\n        $scope.cachesets = [];\n        $scope.cachesetsMap = {};\n        $scope.cachesetsMode = SELECTION_MODE.NONE;\n        $scope.cachesetsAllSelected = false;\n        $scope.available = [];\n        $scope.availableMap = {};\n        $scope.availableMode = SELECTION_MODE.NONE;\n        $scope.availableAllSelected = false;\n        $scope.availableNew = {};\n        $scope.used = [];\n        $scope.showMembers = [];\n\n        // Return True if the filesystem is mounted.\n        function isMountedFilesystem(filesystem) {\n            return angular.isObject(filesystem) &&\n                angular.isString(filesystem.mount_point) &&\n                filesystem.mount_point !== \"\";\n        }\n\n        // Return True if the item has a filesystem and it's mounted.\n        function hasMountedFilesystem(item) {\n            return angular.isObject(item) &&\n                isMountedFilesystem(item.filesystem);\n        }\n\n        // Returns the fstype if the item has a filesystem and its unmounted.\n        function hasFormattedUnmountedFilesystem(item) {\n            if(angular.isObject(item.filesystem) &&\n                angular.isString(item.filesystem.fstype) &&\n                item.filesystem.fstype !== '' &&\n                (angular.isString(item.filesystem.mount_point) === false ||\n                    item.filesystem.mount_point === '')) {\n                return item.filesystem.fstype;\n            }else{\n                return null;\n            }\n        }\n\n        // Return True if the item is in use.\n        function isInUse(item) {\n            if(item.type === \"cache-set\") {\n                return true;\n            } else if(angular.isObject(item.filesystem)) {\n                if(item.filesystem.is_format_fstype &&\n                    angular.isString(item.filesystem.mount_point) &&\n                    item.filesystem.mount_point !== \"\") {\n                    return true;\n                } else if(!item.filesystem.is_format_fstype) {\n                    return true;\n                }\n                return false;\n            }\n            return item.available_size < MIN_PARTITION_SIZE;\n        }\n\n        // Return the tags formatted for ngTagInput.\n        function getTags(disk) {\n            var tags = [];\n            angular.forEach(disk.tags, function(tag) {\n                tags.push({ text: tag });\n            });\n            return tags;\n        }\n\n        // Return a unique key that will never change.\n        function getUniqueKey(disk) {\n            if(disk.type === \"cache-set\") {\n                return \"cache-set-\" + disk.cache_set_id;\n            } else {\n                var key = disk.type + \"-\" + disk.block_id;\n                if(angular.isNumber(disk.partition_id)) {\n                    key += \"-\" + disk.partition_id;\n                }\n                return key;\n            }\n        }\n\n        // Update the list of filesystems. Only filesystems with a mount point\n        // set go here. If no mount point is set, it goes in available.\n        function updateFilesystems() {\n            // Create the new list of filesystems.\n            var filesystems = [];\n            angular.forEach($scope.node.disks, function(disk) {\n                if(hasMountedFilesystem(disk)) {\n                    var data = {\n                        \"type\": \"filesystem\",\n                        \"name\": disk.name,\n                        \"size_human\": disk.size_human,\n                        \"fstype\": disk.filesystem.fstype,\n                        \"mount_point\": disk.filesystem.mount_point,\n                        \"mount_options\": disk.filesystem.mount_options,\n                        \"block_id\": disk.id,\n                        \"partition_id\": null,\n                        \"filesystem_id\": disk.filesystem.id,\n                        \"original_type\": disk.type,\n                        \"original\": disk\n                    };\n                    if(disk.type === \"virtual\") {\n                        disk.parent_type = disk.parent.type;\n                    }\n                    filesystems.push(data);\n                }\n                angular.forEach(disk.partitions, function(partition) {\n                    if(hasMountedFilesystem(partition)) {\n                        filesystems.push({\n                            \"type\": \"filesystem\",\n                            \"name\": partition.name,\n                            \"size_human\": partition.size_human,\n                            \"fstype\": partition.filesystem.fstype,\n                            \"mount_point\": partition.filesystem.mount_point,\n                            \"mount_options\":\n                                partition.filesystem.mount_options,\n                            \"block_id\": disk.id,\n                            \"partition_id\": partition.id,\n                            \"filesystem_id\": partition.filesystem.id,\n                            \"original_type\": \"partition\",\n                            \"original\": partition\n                        });\n                    }\n                });\n            });\n\n            // Add special filesystems to the filesystem list. A special\n            // filesystem cannot exist unless mounted, so we don't need\n            // to check.\n            angular.forEach(\n                $scope.node.special_filesystems,\n                function(filesystem) {\n                    filesystems.push({\n                        \"type\": \"filesystem\",\n                        \"name\": \"—\",\n                        \"size_human\": \"—\",\n                        \"fstype\": filesystem.fstype,\n                        \"mount_point\": filesystem.mount_point,\n                        \"mount_options\": filesystem.mount_options,\n                        \"block_id\": null,\n                        \"partition_id\": null,\n                        \"original_type\": \"special\"\n                    });\n                });\n\n            // Update the selected filesystems with the currently selected\n            // filesystems.\n            angular.forEach(filesystems, function(filesystem) {\n                var key = getUniqueKey(filesystem);\n                var oldFilesystem = $scope.filesystemsMap[key];\n                if(angular.isObject(oldFilesystem)) {\n                    filesystem.$selected = oldFilesystem.$selected;\n                } else {\n                    filesystem.$selected = false;\n                }\n            });\n\n            // Update the filesystems and filesystemsMap on the scope.\n            $scope.filesystems = filesystems;\n            $scope.filesystemsMap = {};\n            angular.forEach(filesystems, function(filesystem) {\n                $scope.filesystemsMap[getUniqueKey(filesystem)] = filesystem;\n            });\n\n            // Update the selection mode.\n            $scope.updateFilesystemSelection(false);\n        }\n\n        // Update the list of cache sets.\n        function updateCacheSets() {\n            // Create the new list of cache sets.\n            var cachesets = [];\n            angular.forEach($scope.node.disks, function(disk) {\n                if(disk.type === \"cache-set\") {\n                    cachesets.push({\n                        \"type\": \"cache-set\",\n                        \"name\": disk.name,\n                        \"size_human\": disk.size_human,\n                        \"cache_set_id\": disk.id,\n                        \"used_by\": disk.used_for\n                    });\n                }\n            });\n\n            // Update the selected cache sets with the currently selected\n            // cache sets.\n            angular.forEach(cachesets, function(cacheset) {\n                var key = getUniqueKey(cacheset);\n                var oldCacheSet = $scope.cachesetsMap[key];\n                if(angular.isObject(oldCacheSet)) {\n                    cacheset.$selected = oldCacheSet.$selected;\n                } else {\n                    cacheset.$selected = false;\n                }\n            });\n\n            // Update the cachesets and cachesetsMap on the scope.\n            $scope.cachesets = cachesets;\n            $scope.cachesetsMap = {};\n            angular.forEach(cachesets, function(cacheset) {\n                $scope.cachesetsMap[getUniqueKey(cacheset)] = cacheset;\n            });\n\n            // Update the selection mode.\n            $scope.updateCacheSetsSelection(false);\n        }\n\n        // Update list of all available disks.\n        function updateAvailable() {\n            var available = [];\n            angular.forEach($scope.node.disks, function(disk) {\n                if(!isInUse(disk)) {\n                    var has_partitions = false;\n                    if(angular.isArray(disk.partitions) &&\n                        disk.partitions.length > 0) {\n                        has_partitions = true;\n                    }\n                    var data = {\n                        \"name\": disk.name,\n                        \"size_human\": disk.size_human,\n                        \"available_size_human\": disk.available_size_human,\n                        \"used_size_human\": disk.used_size_human,\n                        \"type\": disk.type,\n                        \"model\": disk.model,\n                        \"serial\": disk.serial,\n                        \"tags\": getTags(disk),\n                        \"fstype\": hasFormattedUnmountedFilesystem(disk),\n                        \"mount_point\": null,\n                        \"mount_options\": null,\n                        \"block_id\": disk.id,\n                        \"partition_id\": null,\n                        \"has_partitions\": has_partitions,\n                        \"is_boot\": disk.is_boot,\n                        \"original\": disk,\n                        \"test_status\": disk.test_status,\n                        \"firmware_version\": disk.firmware_version\n                    };\n                    if(disk.type === \"virtual\") {\n                        data.parent_type = disk.parent.type;\n                    }\n                    available.push(data);\n                }\n                angular.forEach(disk.partitions, function(partition) {\n                    if(!isInUse(partition)) {\n                        available.push({\n                            \"name\": partition.name,\n                            \"size_human\": partition.size_human,\n                            \"available_size_human\": (\n                                partition.available_size_human),\n                            \"used_size_human\": partition.used_size_human,\n                            \"type\": \"partition\",\n                            \"model\": \"\",\n                            \"serial\": \"\",\n                            \"tags\": [],\n                            \"fstype\":\n                                hasFormattedUnmountedFilesystem(partition),\n                            \"mount_point\": null,\n                            \"mount_options\": null,\n                            \"block_id\": disk.id,\n                            \"partition_id\": partition.id,\n                            \"has_partitions\": false,\n                            \"is_boot\": false,\n                            \"original\": partition\n                        });\n                    }\n                });\n            });\n\n            // Update the selected available disks with the currently selected\n            // available disks. Also copy the $options so they are not lost\n            // for the current action.\n            angular.forEach(available, function(disk) {\n                var key = getUniqueKey(disk);\n                var oldDisk = $scope.availableMap[key];\n                if(angular.isObject(oldDisk)) {\n                    disk.$selected = oldDisk.$selected;\n                    disk.$options = oldDisk.$options;\n                } else {\n                    disk.$selected = false;\n                    disk.$options = {};\n                }\n            });\n\n            // Update available and availableMap on the scope.\n            $scope.available = available;\n            $scope.availableMap = {};\n            angular.forEach(available, function(disk) {\n                $scope.availableMap[getUniqueKey(disk)] = disk;\n            });\n\n            // Update device or devices on the availableNew object to be\n            // there new objects.\n            if(angular.isObject($scope.availableNew)) {\n                // Update device.\n                if(angular.isObject($scope.availableNew.device)) {\n                    var key = getUniqueKey($scope.availableNew.device);\n                    $scope.availableNew.device = $scope.availableMap[key];\n                // Update devices.\n                } else if(angular.isArray($scope.availableNew.devices)) {\n                    var newDevices = [];\n                    angular.forEach(\n                        $scope.availableNew.devices, function(device) {\n                            var key = getUniqueKey(device);\n                            var newDevice = $scope.availableMap[key];\n                            if(angular.isObject(newDevice)) {\n                                newDevices.push(newDevice);\n                            }\n                        });\n                    $scope.availableNew.devices = newDevices;\n                }\n            }\n\n            // Update the selection mode.\n            $scope.updateAvailableSelection(false);\n        }\n\n        // Update list of all used disks.\n        function updateUsed() {\n            var used = [];\n            angular.forEach($scope.node.disks, function(disk) {\n                if(isInUse(disk) && disk.type !== \"cache-set\") {\n                    var has_partitions = false;\n                    if(angular.isArray(disk.partitions) &&\n                        disk.partitions.length > 0) {\n                        has_partitions = true;\n                    }\n                    var data = {\n                        \"name\": disk.name,\n                        \"type\": disk.type,\n                        \"model\": disk.model,\n                        \"serial\": disk.serial,\n                        \"tags\": getTags(disk),\n                        \"used_for\": disk.used_for,\n                        \"is_boot\": disk.is_boot,\n                        \"has_partitions\": has_partitions,\n                        \"test_status\": disk.test_status,\n                        \"firmware_version\": disk.firmware_version\n                    };\n                    if(disk.type === \"virtual\") {\n                        data.parent_type = disk.parent.type;\n                    }\n                    used.push(data);\n                }\n                angular.forEach(disk.partitions, function(partition) {\n                    if(isInUse(partition) && partition.type !== \"cache-set\") {\n                        used.push({\n                            \"name\": partition.name,\n                            \"type\": \"partition\",\n                            \"model\": \"\",\n                            \"serial\": \"\",\n                            \"tags\": [],\n                            \"used_for\": partition.used_for,\n                            \"is_boot\": false\n                        });\n                    }\n                });\n            });\n            $scope.used = used;\n        }\n\n        // Updates the filesystem, available, and used list.\n        function updateDisks() {\n            if(angular.isArray($scope.node.disks)) {\n                $scope.has_disks = $scope.node.disks.length > 0;\n                updateFilesystems();\n                updateCacheSets();\n                updateAvailable();\n                updateUsed();\n            } else {\n                $scope.has_disks = false;\n                $scope.filesystems = [];\n                $scope.filesystemsMap = {};\n                $scope.filesystemMode = SELECTION_MODE.NONE;\n                $scope.filesystemAllSelected = false;\n                $scope.cachesets = [];\n                $scope.cachesetsMap = {};\n                $scope.cachesetsMode = SELECTION_MODE.NONE;\n                $scope.cachesetsAllSelected = false;\n                $scope.available = [];\n                $scope.availableMap = {};\n                $scope.availableMode = SELECTION_MODE.NONE;\n                $scope.availableAllSelected = false;\n                $scope.availableNew = {};\n                $scope.used = [];\n            }\n        }\n\n        // Deselect all items in the array.\n        function deselectAll(items) {\n            angular.forEach(items, function(item) {\n                item.$selected = false;\n            });\n        }\n\n        // Capitalize the first letter of the string.\n        function capitalizeFirstLetter(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n\n        // Return true if the string is a number.\n        function isNumber(string) {\n            var pattern = /^-?\\d+\\.?\\d*$/;\n            return pattern.test(string);\n        }\n\n        // Extract the index from the name based on prefix.\n        function getIndexFromName(prefix, name) {\n            var pattern = new RegExp(\"^\" + prefix + \"([0-9]+)$\");\n            var match = pattern.exec(name);\n            if(angular.isArray(match) && match.length === 2) {\n                return parseInt(match[1], 10);\n            }\n        }\n\n        // Get the next device name based on prefix.\n        function getNextName(prefix) {\n            var idx = -1;\n            angular.forEach($scope.node.disks, function(disk) {\n                var dIdx = getIndexFromName(prefix, disk.name);\n                if(angular.isNumber(dIdx)) {\n                    idx = Math.max(idx, dIdx);\n                }\n                angular.forEach(disk.partitions, function(partition) {\n                    dIdx = getIndexFromName(prefix, partition.name);\n                    if(angular.isNumber(dIdx)) {\n                        idx = Math.max(idx, dIdx);\n                    }\n                });\n            });\n            return prefix + (idx + 1);\n        }\n\n        // Return true if another disk exists with name.\n        function isNameAlreadyInUse(name, exclude_disk) {\n            if(!angular.isArray($scope.node.disks)) {\n                return false;\n            }\n\n            var i, j;\n            for(i = 0; i < $scope.node.disks.length; i++) {\n                var disk = $scope.node.disks[i];\n                if(disk.name === name) {\n                    if(!angular.isObject(exclude_disk) ||\n                        exclude_disk.type === \"partition\" ||\n                        exclude_disk.block_id !== disk.id) {\n                        return true;\n                    }\n                }\n                if(angular.isArray(disk.partitions)) {\n                    for(j = 0; j < disk.partitions.length; j++) {\n                        var partition = disk.partitions[j];\n                        if(partition.name === name) {\n                            if(!angular.isObject(exclude_disk) ||\n                                exclude_disk.type !== \"partition\" ||\n                                exclude_disk.partition_id !== partition.id) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n\n        // Return true if the disk is a logical volume.\n        function isLogicalVolume(disk) {\n            return disk.type === \"virtual\" && disk.parent_type === \"lvm-vg\";\n        }\n\n        // Called by $parent when the node has been loaded.\n        $scope.nodeLoaded = function() {\n            $scope.$watch(\"node.disks\", updateDisks);\n        };\n\n        // Return true if the item can be a boot disk.\n        $scope.isBootDiskDisabled = function(item, section) {\n            // Only superusers can change the boot disk.\n            if(!$scope.isSuperUser()) {\n                return true;\n            }\n\n            // Not ready or allocated so the boot disk cannot be changed.\n            if (angular.isObject($scope.node) &&\n                [\"Ready\", \"Allocated\"].indexOf(\n                    $scope.node.status) === -1) {\n                return true;\n            }\n\n            // Only physical disks can be the boot disk.\n            if(item.type !== \"physical\") {\n                return true;\n            }\n\n            // If the disk is in the used section and does not have any\n            // partitions then it cannot be a boot disk. Boot disk either\n            // require that it be unused or that some partitions exists\n            // on the disk. This is because the boot disk has to have a\n            // partition table header.\n            if(section === \"used\") {\n                return !item.has_partitions;\n            }\n            return false;\n        };\n\n        // Called to change the disk to a boot disk.\n        $scope.setAsBootDisk = function(item) {\n            // Do nothing if already the boot disk.\n            if(item.is_boot) {\n                return;\n            }\n            // Do nothing if disabled.\n            if($scope.isBootDiskDisabled(item)) {\n                return;\n            }\n\n            MachinesManager.setBootDisk($scope.node, item.block_id);\n        };\n\n        // Return array of selected filesystems.\n        $scope.getSelectedFilesystems = function() {\n            var filesystems = [];\n            angular.forEach($scope.filesystems, function(filesystem) {\n                if(filesystem.$selected) {\n                    filesystems.push(filesystem);\n                }\n            });\n            return filesystems;\n        };\n\n        // Update the currect mode for the filesystem section and the all\n        // selected value.\n        $scope.updateFilesystemSelection = function(force) {\n            if(angular.isUndefined(force)) {\n                force = false;\n            }\n            var filesystems = $scope.getSelectedFilesystems();\n            if(filesystems.length === 0) {\n                $scope.filesystemMode = SELECTION_MODE.NONE;\n            } else if(filesystems.length === 1 && force) {\n                $scope.filesystemMode = SELECTION_MODE.SINGLE;\n            } else if(force) {\n                $scope.filesystemMode = SELECTION_MODE.MUTLI;\n            }\n\n            if($scope.filesystems.length === 0) {\n                $scope.filesystemAllSelected = false;\n            } else if(filesystems.length === $scope.filesystems.length) {\n                $scope.filesystemAllSelected = true;\n            } else {\n                $scope.filesystemAllSelected = false;\n            }\n        };\n\n        // Toggle the selection of the filesystem.\n        $scope.toggleFilesystemSelect = function(filesystem) {\n            filesystem.$selected = !filesystem.$selected;\n            $scope.updateFilesystemSelection(true);\n        };\n\n        // Toggle the selection of all filesystems.\n        $scope.toggleFilesystemAllSelect = function() {\n            angular.forEach($scope.filesystems, function(filesystem) {\n                if($scope.filesystemAllSelected) {\n                    filesystem.$selected = false;\n                } else {\n                    filesystem.$selected = true;\n                }\n            });\n            $scope.updateFilesystemSelection(true);\n        };\n\n        // Return true if checkboxes in the filesystem section should be\n        // disabled.\n        $scope.isFilesystemsDisabled = function() {\n            return ((\n                $scope.filesystemMode !== SELECTION_MODE.NONE &&\n                $scope.filesystemMode !== SELECTION_MODE.SINGLE &&\n                $scope.filesystemMode !== SELECTION_MODE.MUTLI) ||\n                $scope.isAllStorageDisabled());\n        };\n\n        // Cancel the current filesystem operation.\n        $scope.filesystemCancel = function() {\n            deselectAll($scope.filesystems);\n            $scope.updateFilesystemSelection(true);\n        };\n\n        // Enter unmount mode.\n        $scope.filesystemUnmount = function() {\n            $scope.filesystemMode = SELECTION_MODE.UNMOUNT;\n        };\n\n        // Quickly enter unmount by selecting the filesystem first.\n        $scope.quickFilesystemUnmount = function(filesystem) {\n            deselectAll($scope.filesystems);\n            filesystem.$selected = true;\n            $scope.updateFilesystemSelection(true);\n            $scope.filesystemUnmount();\n        };\n\n        // Confirm the unmount action for filesystem.\n        $scope.filesystemConfirmUnmount = function(filesystem) {\n            MachinesManager.updateFilesystem(\n                $scope.node,\n                filesystem.block_id, filesystem.partition_id,\n                filesystem.fstype, null, null);\n\n            var idx = $scope.filesystems.indexOf(filesystem);\n            $scope.filesystems.splice(idx, 1);\n            $scope.updateFilesystemSelection();\n        };\n\n        // Enter delete mode.\n        $scope.filesystemDelete = function() {\n            $scope.filesystemMode = SELECTION_MODE.DELETE;\n        };\n\n        // Quickly enter delete by selecting the filesystem first.\n        $scope.quickFilesystemDelete = function(filesystem) {\n            deselectAll($scope.filesystems);\n            filesystem.$selected = true;\n            $scope.updateFilesystemSelection(true);\n            $scope.filesystemDelete();\n        };\n\n        // Confirm the delete action for filesystem.\n        $scope.filesystemConfirmDelete = function(filesystem) {\n            if(filesystem.original_type === \"special\") {\n                // Delete the special filesystem.\n                MachinesManager.unmountSpecialFilesystem(\n                    $scope.node, filesystem.mount_point);\n            } else if(filesystem.original_type === \"partition\") {\n                // Delete the partition.\n                MachinesManager.deletePartition(\n                    $scope.node, filesystem.original.id);\n            } else {\n                // Delete the disk.\n                MachinesManager.deleteFilesystem(\n                    $scope.node, filesystem.block_id, filesystem.partition_id,\n                    filesystem.filesystem_id);\n            }\n\n            var idx = $scope.filesystems.indexOf(filesystem);\n            $scope.filesystems.splice(idx, 1);\n            $scope.updateFilesystemSelection();\n        };\n\n        // Return true if the disk has an unmouted filesystem.\n        $scope.hasUnmountedFilesystem = function(disk) {\n            if(angular.isString(disk.fstype) && disk.fstype !== \"\") {\n                if(!angular.isString(disk.mount_point) ||\n                    disk.mount_point === \"\") {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Return true if the free space label should be shown.\n        $scope.showFreeSpace = function(disk) {\n            if(disk.type === \"lvm-vg\") {\n                return true;\n            } else if(disk.type === \"physical\" || disk.type === \"virtual\") {\n                return disk.has_partitions;\n            } else {\n                return false;\n            }\n        };\n\n        // Return the device type for the disk.\n        $scope.getDeviceType = function(disk) {\n            if(angular.isUndefined(disk)) {\n                return \"\";\n            }\n\n            if(disk.type === \"virtual\") {\n                if(disk.parent_type === \"lvm-vg\") {\n                    return \"Logical volume\";\n                } else if(disk.parent_type.indexOf(\"raid-\") === 0) {\n                    return \"RAID \" + disk.parent_type.split(\"-\")[1];\n                } else {\n                    return capitalizeFirstLetter(disk.parent_type);\n                }\n            } else if(disk.type === \"lvm-vg\") {\n                return \"Volume group\";\n            } else {\n                return capitalizeFirstLetter(disk.type);\n            }\n        };\n\n        // Return array of selected available disks.\n        $scope.getSelectedAvailable = function() {\n            var available = [];\n            angular.forEach($scope.available, function(disk) {\n                if(disk.$selected) {\n                    available.push(disk);\n                }\n            });\n            return available;\n        };\n\n        // Update the currect mode for the available section and the all\n        // selected value.\n        $scope.updateAvailableSelection = function(force) {\n            if(angular.isUndefined(force)) {\n                force = false;\n            }\n            var available = $scope.getSelectedAvailable();\n            if(available.length === 0) {\n                $scope.availableMode = SELECTION_MODE.NONE;\n            } else if(available.length === 1 && force) {\n                $scope.availableMode = SELECTION_MODE.SINGLE;\n            } else if(force) {\n                $scope.availableMode = SELECTION_MODE.MUTLI;\n            }\n\n            if($scope.available.length === 0) {\n                $scope.availableAllSelected = false;\n            } else if(available.length === $scope.available.length) {\n                $scope.availableAllSelected = true;\n            } else {\n                $scope.availableAllSelected = false;\n            }\n        };\n\n        // Toggle the selection of the available disk.\n        $scope.toggleAvailableSelect = function(disk) {\n            disk.$selected = !disk.$selected;\n            $scope.updateAvailableSelection(true);\n        };\n\n        // Toggle the selection of all available disks.\n        $scope.toggleAvailableAllSelect = function() {\n            angular.forEach($scope.available, function(disk) {\n                if(!$scope.availableAllSelected) {\n                    disk.$selected = true;\n                } else {\n                    disk.$selected = false;\n                }\n            });\n            $scope.updateAvailableSelection(true);\n        };\n\n        // Return true if checkboxes in the avaiable section should be\n        // disabled.\n        $scope.isAvailableDisabled = function() {\n            return ((\n                $scope.availableMode !== SELECTION_MODE.NONE &&\n                $scope.availableMode !== SELECTION_MODE.SINGLE &&\n                $scope.availableMode !== SELECTION_MODE.MUTLI) ||\n                $scope.isAllStorageDisabled());\n        };\n\n        // Return true if the disk can be formatted and mounted.\n        $scope.canFormatAndMount = function(disk) {\n            if($scope.isAllStorageDisabled()) {\n                return false;\n            } else if(disk.type === \"lvm-vg\" || disk.has_partitions) {\n                return false;\n            } else if(disk.type === \"physical\" && disk.original.is_boot) {\n                return false;\n            } else {\n                return true;\n            }\n        };\n\n        // Return the text for the partition button.\n        $scope.getPartitionButtonText = function(disk) {\n            if(disk.has_partitions) {\n                return \"Add partition\";\n            } else {\n                return \"Partition\";\n            }\n        };\n\n        $scope.availablePartitionSpace = function(disk) {\n            var space_to_reserve = 0;\n            if(!angular.isString(disk.original.partition_table_type)\n                || disk.original.partition_table_type === \"\") {\n                // Disk has no partition table, so reserve space for it.\n                space_to_reserve = PARTITION_TABLE_EXTRA_SPACE;\n                // ppc64el node requires that space be saved for the prep\n                // partition.\n                if($scope.node.architecture.indexOf(\"ppc64el\") === 0) {\n                    space_to_reserve += PREP_PARTITION_SIZE;\n                }\n            }\n            return ConverterService.roundByBlockSize(\n                disk.original.available_size - space_to_reserve,\n                PARTITION_ALIGNMENT_SIZE);\n        };\n\n        // Return true if a partition can be added to disk.\n        $scope.canAddPartition = function(disk) {\n            if(!$scope.isSuperUser() || $scope.isAllStorageDisabled()) {\n                return false;\n            } else if(disk.type === \"partition\" || disk.type === \"lvm-vg\") {\n                return false;\n            } else if(disk.type === \"virtual\" &&\n                (disk.parent_type === \"lvm-vg\" ||\n                    disk.parent_type === \"bcache\")) {\n                return false;\n            } else if(angular.isString(disk.fstype) && disk.fstype !== \"\") {\n                return false;\n            }\n            // If we can fit a minimum partition, we're golden.\n            return ($scope.availablePartitionSpace(disk) -\n                MIN_PARTITION_SIZE) >= 0;\n        };\n\n        // Return true if the name is invalid.\n        $scope.isNameInvalid = function(disk) {\n            if(disk.name === \"\") {\n                return false;\n            } else if(isNameAlreadyInUse(disk.name, disk)) {\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        // Prevent logical volumes from changing the volume group prefix.\n        $scope.nameHasChanged = function(disk) {\n            if(isLogicalVolume(disk)) {\n                var parentName = disk.original.name.split(\"-\")[0] + \"-\";\n                var startsWith = disk.name.indexOf(parentName);\n                if(startsWith !== 0) {\n                    disk.name = parentName;\n                }\n            }\n        };\n\n        // Cancel the current available operation.\n        $scope.availableCancel = function(disk) {\n            $scope.updateAvailableSelection(true);\n            $scope.availableNew = {};\n        };\n\n        // Return true if the filesystem can be mounted at a directory.\n        $scope.usesMountPoint = function(fstype) {\n            return angular.isString(fstype) && fstype !== \"swap\";\n        };\n\n        // Return true if the filesystem uses storage (partition or\n        // block device).\n        $scope.usesStorage = function(fstype) {\n            return angular.isString(fstype) &&\n                fstype !== \"tmpfs\" && fstype !== \"ramfs\";\n        };\n\n        // Return true if the mount point is invalid.\n        $scope.isMountPointInvalid = function(mountPoint) {\n            if(angular.isUndefined(mountPoint) || mountPoint === \"\") {\n                return false;\n            } else if (mountPoint === \"none\") {\n                // XXX: Hack to allow \"swap\" filesystems to be mounted.\n                // This should be allowed only when fstype is 'swap' but\n                // doing that would require more refactoring (or more\n                // hacks) that I have time for right now.\n                return false;\n            } else if(mountPoint[0] !== \"/\") {\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        // Return true if the disk can be deleted.\n        $scope.canDelete = function(disk) {\n            if (!$scope.isSuperUser() || $scope.isAllStorageDisabled()) {\n                return false;\n            } else if(disk.type === \"lvm-vg\") {\n                return disk.original.used_size === 0;\n            } else {\n                return !disk.has_partitions;\n            }\n        };\n\n        // Enter delete mode.\n        $scope.availableDelete = function() {\n            $scope.availableMode = SELECTION_MODE.DELETE;\n        };\n\n        // Quickly enter delete mode.\n        $scope.availableQuickDelete = function(disk) {\n            deselectAll($scope.available);\n            disk.$selected = true;\n            $scope.updateAvailableSelection(true);\n            $scope.availableDelete();\n        };\n\n        // Return true if it can be edited.\n        $scope.canEdit = function(disk) {\n          if (!$scope.isSuperUser() || $scope.isAllStorageDisabled()) {\n              return false;\n          } else {\n              return true;\n          }\n        };\n\n        // Enter Edit mode, disable certain fields based on disk type\n        $scope.availableEdit = function(disk) {\n            $scope.availableMode = SELECTION_MODE.EDIT;\n\n            if (disk.type === \"lvm-vg\") {\n                disk.$options = {\n                    editingTags: false,\n                    editingFilesystem: false\n                };\n            } else if (disk.type === \"partition\") {\n                disk.$options = {\n                    editingTags: false,\n                    editingFilesystem: true,\n                    fstype: disk.fstype\n                };\n            } else {\n                disk.$options = {\n                    editingFilesystem: true,\n                    editingTags: true,\n                    tags: angular.copy(disk.tags),\n                    fstype: disk.fstype\n                };\n                if (!$scope.canFormatAndMount(disk)) {\n                    disk.$options.editingFilesystem = false;\n                }\n            }\n        };\n\n        // Quickly enter Edit mode\n        $scope.availableQuickEdit = function(disk) {\n            deselectAll($scope.available);\n            disk.$selected = true;\n            $scope.updateAvailableSelection(true);\n            $scope.availableEdit(disk);\n        };\n\n        // Save the disk which is in Edit mode\n        $scope.availableConfirmEdit = function(disk) {\n            var params = {\n                name: disk.name\n            };\n\n            // Do nothing if not valid.\n            if($scope.isNameInvalid(disk) ||\n                $scope.isMountPointInvalid(disk.$options.mountPoint)) {\n                return;\n            }\n\n            // Reset the name if its blank.\n            if(disk.name === \"\") {\n                disk.name = disk.original.name;\n            }\n\n            // Ensure logical volume has parent prefix in its name.\n            if(isLogicalVolume(disk)){\n                var parentName = disk.original.name.split(\"-\")[0] + \"-\";\n                params.name = disk.name.slice(parentName.length);\n            }\n\n            // Set filesystem options so formatting and mounting is performed.\n            if(angular.isDefined(disk.$options.fstype)) {\n                params.fstype = disk.$options.fstype;\n                params.mount_point = disk.$options.mountPoint || '';\n                params.mount_options = disk.$options.mountOptions || '';\n            }\n\n            // Update the tags for the disk.\n            if(angular.isArray(disk.$options.tags)) {\n                params.tags = disk.$options.tags.map(\n                    function(tag) { return tag.text; });\n            }\n\n            // Save the options.\n            MachinesManager.updateDisk(\n                $scope.node, disk.block_id, params);\n\n            // Set the options on the object so no flicker occurs while waiting\n            // for the new object to be received.\n            disk.fstype = disk.$options.fstype;\n            disk.mount_point = disk.$options.mountPoint;\n            disk.mount_options = disk.$options.mountOptions;\n            disk.tags = disk.$options.tags;\n            disk.$options = {};\n\n            // If the mount_point is set the we need to transition this to\n            // the filesystem section.\n            if(angular.isString(disk.mount_point) && disk.mount_point !== \"\") {\n                $scope.filesystems.push({\n                    \"name\": disk.name,\n                    \"size_human\": disk.size_human,\n                    \"fstype\": disk.fstype,\n                    \"mount_point\": disk.mount_point,\n                    \"mount_options\": disk.mount_options,\n                    \"block_id\": disk.block_id,\n                    \"partition_id\": disk.partition_id\n                });\n\n                // Remove the selected disk from available.\n                var idx = $scope.available.indexOf(disk);\n                $scope.available.splice(idx, 1);\n            }\n\n            // Deselect the disk after saving\n            disk.$selected = false;\n\n            // Update the current selections.\n            $scope.updateAvailableSelection(true);\n        };\n\n        // Return the text for remove confirmation message.\n        $scope.getRemoveTypeText = function(disk) {\n            if(disk.type === \"filesystem\") {\n                if (angular.isObject(disk.original)) {\n                    disk = disk.original;\n                } else {\n                    return \"special filesystem\";\n                }\n            }\n\n            if(disk.type === \"physical\") {\n                return \"physical disk\";\n            } else if(disk.type === \"partition\") {\n                return \"partition\";\n            } else if(disk.type === \"lvm-vg\") {\n                return \"volume group\";\n            } else if(disk.type === \"virtual\") {\n                if(disk.parent_type === \"lvm-vg\") {\n                    return \"logical volume\";\n                } else if(disk.parent_type.indexOf(\"raid-\") === 0) {\n                    return \"RAID \" + disk.parent_type.split(\"-\")[1] + \" disk\";\n                } else {\n                    return disk.parent_type + \" disk\";\n                }\n            }\n        };\n\n        // Delete the disk, partition, or volume group.\n        $scope.availableConfirmDelete = function(disk) {\n            if(disk.type === \"lvm-vg\") {\n                // Delete the volume group.\n                MachinesManager.deleteVolumeGroup(\n                    $scope.node, disk.block_id);\n            } else if(disk.type === \"partition\") {\n                // Delete the partition.\n                MachinesManager.deletePartition(\n                    $scope.node, disk.partition_id);\n            } else {\n                // Delete the disk.\n                MachinesManager.deleteDisk(\n                    $scope.node, disk.block_id);\n            }\n\n            // Remove the selected disk from available.\n            var idx = $scope.available.indexOf(disk);\n            $scope.available.splice(idx, 1);\n            $scope.updateAvailableSelection(true);\n        };\n\n        // Enter partition mode.\n        $scope.availablePartition = function(disk) {\n            $scope.availableMode = SELECTION_MODE.PARTITION;\n            // Set starting size to the maximum available space.\n            var size_and_units = disk.available_size_human.split(\" \");\n            disk.$options = {\n                size: size_and_units[0],\n                sizeUnits: size_and_units[1],\n                fstype: null,\n                mountPoint: \"\",\n                mountOptions: \"\"\n            };\n        };\n\n        // Quickly enter partition mode.\n        $scope.availableQuickPartition = function(disk) {\n            deselectAll($scope.available);\n            disk.$selected = true;\n            $scope.updateAvailableSelection(true);\n            $scope.availablePartition(disk);\n        };\n\n        // Get the new name of the partition.\n        $scope.getAddPartitionName = function(disk) {\n            var length, partitions = disk.original.partitions;\n            if(angular.isArray(partitions)) {\n                length = partitions.length;\n            } else {\n                length = 0;\n            }\n            if(disk.original.partition_table_type === \"mbr\" &&\n                length > 2) {\n                return disk.name + \"-part\" + (length + 2);\n            } else if($scope.node.architecture.indexOf(\"ppc64el\") === 0 &&\n                disk.original.is_boot) {\n                // Boot disk on ppc64el machines skip the first partition as\n                // its reserved for the prep partition.\n                return disk.name + \"-part\" + (length + 2);\n            } else {\n                return disk.name + \"-part\" + (length + 1);\n            }\n        };\n\n        // Return true if the size is invalid.\n        $scope.isAddPartitionSizeInvalid = function(disk) {\n            if(disk.$options.size === \"\" || !isNumber(disk.$options.size)) {\n                return true;\n            } else {\n                var bytes = ConverterService.unitsToBytes(\n                    disk.$options.size, disk.$options.sizeUnits);\n                if(bytes < MIN_PARTITION_SIZE) {\n                    return true;\n                } else if(bytes > disk.original.available_size) {\n                    // Round the size down to the lowest tolerance for that\n                    // to see if it now fits.\n                    var rounded = ConverterService.roundUnits(\n                        disk.$options.size, disk.$options.sizeUnits);\n                    if(rounded > disk.original.available_size) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            }\n        };\n\n        // Confirm the partition creation.\n        $scope.availableConfirmPartition = function(disk) {\n            // Do nothing if not valid.\n            if($scope.isAddPartitionSizeInvalid(disk) ||\n                $scope.isMountPointInvalid(disk.$options.mountPoint)) {\n                return;\n            }\n\n            // Get the bytes to create the partition.\n            var bytes = ConverterService.unitsToBytes(\n                disk.$options.size, disk.$options.sizeUnits);\n\n            // Accepting prefilled defaults means use whole disk (lp:1509535).\n            var size_and_units = disk.original.available_size_human.split(\" \");\n            if(disk.$options.size === size_and_units[0] &&\n               disk.$options.sizeUnits === size_and_units[1]) {\n                bytes = disk.original.available_size;\n            }\n\n            var removeDisk = false;\n            var available_space = $scope.availablePartitionSpace(disk);\n            if(bytes >= available_space) {\n                // Clamp to available space.\n                bytes = available_space;\n                // Remove the disk if partition uses all the remaining space.\n                removeDisk = true;\n            }\n\n            // Create the partition.\n            var params = {};\n            if(angular.isString(disk.$options.fstype) &&\n                disk.$options.fstype !== \"\") {\n                params.fstype = disk.$options.fstype;\n                if(disk.$options.mountPoint !== \"\") {\n                    params.mount_point = disk.$options.mountPoint;\n                    params.mount_options = disk.$options.mountOptions;\n                }\n            }\n            MachinesManager.createPartition(\n                $scope.node, disk.block_id, bytes, params);\n\n            // Remove the disk if needed.\n            if(removeDisk) {\n                var idx = $scope.available.indexOf(disk);\n                $scope.available.splice(idx, 1);\n            }\n            $scope.updateAvailableSelection(true);\n        };\n\n        // Return array of selected cache sets.\n        $scope.getSelectedCacheSets = function() {\n            var cachesets = [];\n            angular.forEach($scope.cachesets, function(cacheset) {\n                if(cacheset.$selected) {\n                    cachesets.push(cacheset);\n                }\n            });\n            return cachesets;\n        };\n\n        // Update the currect mode for the cache sets section and the all\n        // selected value.\n        $scope.updateCacheSetsSelection = function(force) {\n            if(angular.isUndefined(force)) {\n                force = false;\n            }\n            var cachesets = $scope.getSelectedCacheSets();\n            if(cachesets.length === 0) {\n                $scope.cachesetsMode = SELECTION_MODE.NONE;\n            } else if(cachesets.length === 1 && force) {\n                $scope.cachesetsMode = SELECTION_MODE.SINGLE;\n            } else if(force) {\n                $scope.cachesetsMode = SELECTION_MODE.MUTLI;\n            }\n\n            if($scope.cachesets.length === 0) {\n                $scope.cachesetsAllSelected = false;\n            } else if(cachesets.length === $scope.cachesets.length) {\n                $scope.cachesetsAllSelected = true;\n            } else {\n                $scope.cachesetsAllSelected = false;\n            }\n        };\n\n        // Toggle the selection of the filesystem.\n        $scope.toggleCacheSetSelect = function(cacheset) {\n            cacheset.$selected = !cacheset.$selected;\n            $scope.updateCacheSetsSelection(true);\n        };\n\n        // Toggle the selection of all filesystems.\n        $scope.toggleCacheSetAllSelect = function() {\n            angular.forEach($scope.cachesets, function(cacheset) {\n                if($scope.cachesetsAllSelected) {\n                    cacheset.$selected = false;\n                } else {\n                    cacheset.$selected = true;\n                }\n            });\n            $scope.updateCacheSetsSelection(true);\n        };\n\n        // Return true if checkboxes in the cache sets section should be\n        // disabled.\n        $scope.isCacheSetsDisabled = function() {\n            return ((\n                $scope.isAllStorageDisabled() &&\n                !$scope.isSuperUser()) || (\n                $scope.cachesetsMode !== SELECTION_MODE.NONE &&\n                $scope.cachesetsMode !== SELECTION_MODE.SINGLE &&\n                $scope.cachesetsMode !== SELECTION_MODE.MUTLI));\n        };\n\n        // Cancel the current cache set operation.\n        $scope.cacheSetCancel = function() {\n            deselectAll($scope.cachesets);\n            $scope.updateCacheSetsSelection(true);\n        };\n\n        // Can delete the cache set.\n        $scope.canDeleteCacheSet = function(cacheset) {\n            return (cacheset.used_by === \"\" &&\n                    !$scope.isAllStorageDisabled() &&\n                    $scope.isSuperUser());\n        };\n\n        // Enter delete mode.\n        $scope.cacheSetDelete = function() {\n            $scope.cachesetsMode = SELECTION_MODE.DELETE;\n        };\n\n        // Quickly enter delete by selecting the cache set first.\n        $scope.quickCacheSetDelete = function(cacheset) {\n            deselectAll($scope.cachesets);\n            cacheset.$selected = true;\n            $scope.updateCacheSetsSelection(true);\n            $scope.cacheSetDelete();\n        };\n\n        // Confirm the delete action for cache set.\n        $scope.cacheSetConfirmDelete = function(cacheset) {\n            MachinesManager.deleteCacheSet(\n                $scope.node, cacheset.cache_set_id);\n\n            var idx = $scope.cachesets.indexOf(cacheset);\n            $scope.cachesets.splice(idx, 1);\n            $scope.updateCacheSetsSelection();\n        };\n\n        // Return true if a cache set can be created.\n        $scope.canCreateCacheSet = function() {\n            if($scope.isAvailableDisabled() || !$scope.isSuperUser()) {\n                return false;\n            }\n\n            var selected = $scope.getSelectedAvailable();\n            if(selected.length === 1) {\n                return (\n                    !selected[0].has_partitions &&\n                    !$scope.hasUnmountedFilesystem(selected[0]) &&\n                    selected[0].type !== \"lvm-vg\");\n            }\n            return false;\n        };\n\n        // Called to create a cache set.\n        $scope.createCacheSet = function() {\n            if(!$scope.canCreateCacheSet()) {\n                return;\n            }\n\n            // Create cache set.\n            var disk = $scope.getSelectedAvailable()[0];\n            MachinesManager.createCacheSet(\n                $scope.node, disk.block_id, disk.partition_id);\n\n            // Remove from available.\n            var idx = $scope.available.indexOf(disk);\n            $scope.available.splice(idx, 1);\n        };\n\n        // Return the reason a bcache device cannot be created.\n        $scope.getCannotCreateBcacheMsg = function() {\n            if($scope.cachesets.length === 0) {\n                return \"Create at least one cache set to create bcache\";\n            } else {\n                var selected = $scope.getSelectedAvailable();\n                if(selected.length === 1) {\n                    if($scope.hasUnmountedFilesystem(selected[0])) {\n                        return (\n                            \"Device is formatted; unformat the \" +\n                            \"device to create bcache\");\n                    } else if(selected[0].type === \"lvm-vg\") {\n                        return (\n                            \"Cannot use a logical volume as a backing \" +\n                            \"device for bcache.\");\n                    } else if(selected[0].has_partitions) {\n                        return (\n                            \"Device has already been partitioned; create a \" +\n                            \"new partition to use as the bcache backing \" +\n                            \"device\");\n                    } else {\n                        return null;\n                    }\n                } else {\n                    return \"Select only one available device to create bcache\";\n                }\n            }\n        };\n\n        // Return true if a bcache can be created.\n        $scope.canCreateBcache = function() {\n            if($scope.isAvailableDisabled() || !$scope.isSuperUser()) {\n                return false;\n            }\n\n            var msg = $scope.getCannotCreateBcacheMsg();\n            if(msg === null) {\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        // Enter bcache mode.\n        $scope.createBcache = function() {\n            if(!$scope.canCreateBcache()) {\n                return;\n            }\n            $scope.availableMode = SELECTION_MODE.BCACHE;\n            $scope.availableNew = {\n                name: getNextName(\"bcache\"),\n                device: $scope.getSelectedAvailable()[0],\n                cacheset: $scope.cachesets[0],\n                cacheMode: \"writeback\",\n                fstype: null,\n                mountPoint: \"\",\n                mountOptions: \"\",\n                tags: []\n            };\n        };\n\n        // Clear mount point when the fstype is changed.\n        $scope.fstypeChanged = function(options) {\n            if(options.fstype === null) {\n                options.mountPoint = \"\";\n                options.mountOptions = \"\";\n            }\n            else {\n                // Update the mount point to \"none\" if \"swap\" is\n                // selected, and vice-versa.\n                if ($scope.usesMountPoint(options.fstype)) {\n                    if (options.mountPoint === \"none\") {\n                        options.mountPoint = \"\";\n                    }\n                }\n                else {\n                    options.mountPoint = \"none\";\n                }\n            }\n        };\n\n        // Return true when the name of the new disk is invalid.\n        $scope.isNewDiskNameInvalid = function() {\n            if(!angular.isObject($scope.node) ||\n                !angular.isArray($scope.node.disks)) {\n                return true;\n            }\n\n            if($scope.availableNew.name === \"\") {\n                return true;\n            } else {\n                var i, j;\n                for(i = 0; i < $scope.node.disks.length; i++) {\n                    var disk = $scope.node.disks[i];\n                    if($scope.availableNew.name === disk.name) {\n                        return true;\n                    }\n                    if(angular.isArray(disk.partitions)) {\n                        for(j = 0; j < disk.partitions.length; j++) {\n                            var partition = disk.partitions[j];\n                            if($scope.availableNew.name === partition.name) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            }\n            return false;\n        };\n\n        // Return true if bcache can be saved.\n        $scope.createBcacheCanSave = function() {\n            return (\n                !$scope.isNewDiskNameInvalid() &&\n                !$scope.isMountPointInvalid($scope.availableNew.mountPoint));\n        };\n\n        // Confirm and create the bcache device.\n        $scope.availableConfirmCreateBcache = function() {\n            if(!$scope.createBcacheCanSave()) {\n                return;\n            }\n\n            // Create the bcache.\n            var params = {\n                name: $scope.availableNew.name,\n                cache_set: $scope.availableNew.cacheset.cache_set_id,\n                cache_mode: $scope.availableNew.cacheMode\n            };\n            if($scope.availableNew.device.type === \"partition\") {\n                params.partition_id = $scope.availableNew.device.partition_id;\n            } else {\n                params.block_id = $scope.availableNew.device.block_id;\n            }\n            if(angular.isString($scope.availableNew.fstype) &&\n                $scope.availableNew.fstype !== \"\") {\n                params.fstype = $scope.availableNew.fstype;\n                // XXX: Inconsistent tests of mountPoint/mount_point; in\n                // places it's compared to \"\" (like here), in others\n                // it's tested with angular.isDefined(), others with\n                // angular.isString(), others angular.isString() ===\n                // false. This is *begging* for bugs.\n                if($scope.availableNew.mountPoint !== \"\") {\n                    params.mount_point = $scope.availableNew.mountPoint;\n                    params.mount_options = $scope.availableNew.mountOptions;\n                }\n            }\n            if(angular.isArray($scope.availableNew.tags)\n                && $scope.availableNew.tags.length > 0) {\n                params.tags = $scope.availableNew.tags.map(\n                    function(tag) { return tag.text; });\n            }\n            MachinesManager.createBcache($scope.node, params);\n\n            // Remove device from available.\n            var idx = $scope.available.indexOf($scope.availableNew.device);\n            $scope.available.splice(idx, 1);\n            $scope.availableNew = {};\n\n            // Update the selection.\n            $scope.updateAvailableSelection(true);\n        };\n\n        // Return true if a RAID can be created.\n        $scope.canCreateRAID = function() {\n            if($scope.isAvailableDisabled() || !$scope.isSuperUser()) {\n                return false;\n            }\n\n            var selected = $scope.getSelectedAvailable();\n            if(selected.length > 1) {\n                var i;\n                for(i = 0; i < selected.length; i++) {\n                    if($scope.hasUnmountedFilesystem(selected[i])) {\n                        return false;\n                    } else if(selected[i].type === \"lvm-vg\") {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return false;\n        };\n\n        // Called to create a RAID.\n        $scope.createRAID = function() {\n            if(!$scope.canCreateRAID()) {\n                return;\n            }\n            $scope.availableMode = SELECTION_MODE.RAID;\n            $scope.availableNew = {\n                name: getNextName(\"md\"),\n                devices: $scope.getSelectedAvailable(),\n                mode: null,\n                spares: [],\n                fstype: null,\n                mountPoint: \"\",\n                mountOptions: \"\",\n                tags: []\n            };\n            $scope.availableNew.mode = $scope.getAvailableRAIDModes()[0];\n        };\n\n        // Get the available RAID modes.\n        $scope.getAvailableRAIDModes = function() {\n            if(!angular.isObject($scope.availableNew) ||\n                !angular.isArray($scope.availableNew.devices)) {\n                return [];\n            }\n\n            var modes = [];\n            angular.forEach(RAID_MODES, function(mode) {\n                if($scope.availableNew.devices.length >= mode.min_disks) {\n                    modes.push(mode);\n                }\n            });\n            return modes;\n        };\n\n        // Return the total number of available spares for the current mode.\n        $scope.getTotalNumberOfAvailableSpares = function() {\n            var mode = $scope.availableNew.mode;\n            if(angular.isUndefined(mode) || !mode.allows_spares) {\n                return 0;\n            } else {\n                var diff = $scope.availableNew.devices.length - mode.min_disks;\n                if(diff < 0) {\n                    diff = 0;\n                }\n                return diff;\n            }\n        };\n\n        // Return the number of remaining spares that can be selected.\n        $scope.getNumberOfRemainingSpares = function() {\n            var allowed = $scope.getTotalNumberOfAvailableSpares();\n            if(allowed <= 0) {\n                return 0;\n            } else {\n                return allowed - $scope.availableNew.spares.length;\n            }\n        };\n\n        // Return true if the spares column should be shown.\n        $scope.showSparesColumn = function() {\n            return $scope.getTotalNumberOfAvailableSpares() > 0;\n        };\n\n        // Called when the RAID mode is changed to reset the selected spares.\n        $scope.RAIDModeChanged = function() {\n            $scope.availableNew.spares = [];\n        };\n\n        // Return true if the disk is an active RAID member.\n        $scope.isActiveRAIDMember = function(disk) {\n            if(!angular.isArray($scope.availableNew.spares)) {\n                return true;\n            } else {\n                var idx = $scope.availableNew.spares.indexOf(\n                    getUniqueKey(disk));\n                return idx === -1;\n            }\n        };\n\n        // Return true if the disk is a spare RAID member.\n        $scope.isSpareRAIDMember = function(disk) {\n            return !$scope.isActiveRAIDMember(disk);\n        };\n\n        // Set the disk as an active RAID member.\n        $scope.setAsActiveRAIDMember = function(disk) {\n            var idx = $scope.availableNew.spares.indexOf(getUniqueKey(disk));\n            if(idx > -1) {\n                $scope.availableNew.spares.splice(idx, 1);\n            }\n        };\n\n        // Set the disk as a spare RAID member.\n        $scope.setAsSpareRAIDMember = function(disk) {\n            var key = getUniqueKey(disk);\n            var idx = $scope.availableNew.spares.indexOf(key);\n            if(idx === -1) {\n                $scope.availableNew.spares.push(key);\n            }\n        };\n\n        // Return the size of the new RAID device.\n        $scope.getNewRAIDSize = function() {\n            if(angular.isUndefined($scope.availableNew.mode)) {\n                return \"\";\n            }\n            var calculateSize = $scope.availableNew.mode.calculateSize;\n            if(!angular.isFunction(calculateSize)) {\n                return \"\";\n            }\n\n            // Get the number of disks and the minimum disk size in the RAID.\n            var numDisks = (\n                $scope.availableNew.devices.length -\n                $scope.availableNew.spares.length);\n            var minSize = Number.MAX_VALUE;\n            angular.forEach($scope.availableNew.devices, function(device) {\n                // Get the size of the device. For a block device it will be\n                // at available_size and for a partition it will be at size.\n                var deviceSize = (\n                    device.original.available_size || device.original.size);\n                minSize = Math.min(minSize, deviceSize);\n            });\n\n            // Calculate the new size.\n            var size = calculateSize(minSize, numDisks);\n            return ConverterService.bytesToUnits(size).string;\n        };\n\n        // Return true if RAID can be saved.\n        $scope.createRAIDCanSave = function() {\n            return (\n                !$scope.isNewDiskNameInvalid() &&\n                !$scope.isMountPointInvalid($scope.availableNew.mountPoint));\n        };\n\n        // Confirm and create the RAID device.\n        $scope.availableConfirmCreateRAID = function() {\n            if(!$scope.createRAIDCanSave()) {\n                return;\n            }\n\n            // Create the RAID.\n            var params = {\n                name: $scope.availableNew.name,\n                level: $scope.availableNew.mode.level,\n                block_devices: [],\n                partitions: [],\n                spare_devices: [],\n                spare_partitions: []\n            };\n            angular.forEach($scope.availableNew.devices, function(device) {\n                if($scope.isActiveRAIDMember(device)) {\n                    if(device.type === \"partition\") {\n                        params.partitions.push(device.partition_id);\n                    } else {\n                        params.block_devices.push(device.block_id);\n                    }\n                } else {\n                    if(device.type === \"partition\") {\n                        params.spare_partitions.push(device.partition_id);\n                    } else {\n                        params.spare_devices.push(device.block_id);\n                    }\n                }\n            });\n            if(angular.isString($scope.availableNew.fstype) &&\n                $scope.availableNew.fstype !== \"\") {\n                params.fstype = $scope.availableNew.fstype;\n                if($scope.availableNew.mountPoint !== \"\") {\n                    params.mount_point = $scope.availableNew.mountPoint;\n                    params.mount_options = $scope.availableNew.mountOptions;\n                }\n            }\n            if(angular.isArray($scope.availableNew.tags)\n                && $scope.availableNew.tags.length > 0) {\n                params.tags = $scope.availableNew.tags.map(\n                    function(tag) { return tag.text; });\n            }\n            MachinesManager.createRAID($scope.node, params);\n\n            // Remove devices from available.\n            angular.forEach($scope.availableNew.devices, function(device) {\n                var idx = $scope.available.indexOf($scope.availableNew.device);\n                $scope.available.splice(idx, 1);\n            });\n            $scope.availableNew = {};\n\n            // Update the selection.\n            $scope.updateAvailableSelection(true);\n        };\n\n        // Return true if a volume group can be created.\n        $scope.canCreateVolumeGroup = function() {\n            if($scope.isAvailableDisabled() || !$scope.isSuperUser()) {\n                return false;\n            }\n\n            var selected = $scope.getSelectedAvailable();\n            if(selected.length > 0) {\n                var i;\n                for(i = 0; i < selected.length; i++) {\n                    if(selected[i].has_partitions) {\n                        return false;\n                    } else if($scope.hasUnmountedFilesystem(selected[i])) {\n                        return false;\n                    } else if(selected[i].type === \"lvm-vg\") {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return false;\n        };\n\n        // Called to create a volume group.\n        $scope.createVolumeGroup = function() {\n            if(!$scope.canCreateVolumeGroup()) {\n                return;\n            }\n            $scope.availableMode = SELECTION_MODE.VOLUME_GROUP;\n            $scope.availableNew = {\n                name: getNextName(\"vg\"),\n                devices: $scope.getSelectedAvailable()\n            };\n        };\n\n        // Return the size of the new volume group.\n        $scope.getNewVolumeGroupSize = function() {\n            var total = 0;\n            angular.forEach($scope.availableNew.devices, function(device) {\n                // Add available_size or size if available_size is not set.\n                total += (\n                    device.original.available_size || device.original.size);\n            });\n            return ConverterService.bytesToUnits(total).string;\n        };\n\n        // Return true if volume group can be saved.\n        $scope.createVolumeGroupCanSave = function() {\n            return !$scope.isNewDiskNameInvalid();\n        };\n\n        // Confirm and create the volume group device.\n        $scope.availableConfirmCreateVolumeGroup = function() {\n            if(!$scope.createVolumeGroupCanSave()) {\n                return;\n            }\n\n            // Create the RAID.\n            var params = {\n                name: $scope.availableNew.name,\n                block_devices: [],\n                partitions: []\n            };\n            angular.forEach($scope.availableNew.devices, function(device) {\n                if(device.type === \"partition\") {\n                    params.partitions.push(device.partition_id);\n                } else {\n                    params.block_devices.push(device.block_id);\n                }\n            });\n            MachinesManager.createVolumeGroup($scope.node, params);\n\n            // Remove devices from available.\n            angular.forEach($scope.availableNew.devices, function(device) {\n                var idx = $scope.available.indexOf($scope.availableNew.device);\n                $scope.available.splice(idx, 1);\n            });\n            $scope.availableNew = {};\n\n            // Update the selection.\n            $scope.updateAvailableSelection(true);\n        };\n\n        // Return true if a logical volume can be added to disk.\n        $scope.canAddLogicalVolume = function(disk) {\n            if(disk.type !== \"lvm-vg\") {\n                return false;\n            } else if(disk.original.available_size < MIN_PARTITION_SIZE) {\n                return false;\n            } else {\n                return true;\n            }\n        };\n\n        // Enter logical volume mode.\n        $scope.availableLogicalVolume = function(disk) {\n            $scope.availableMode = SELECTION_MODE.LOGICAL_VOLUME;\n            disk.$selected = true;\n            // Set starting size to the maximum available space.\n            var size_and_units = disk.available_size_human.split(\" \");\n            var namePrefix = disk.name + \"-lv\";\n            disk.$options = {\n                name: getNextName(namePrefix),\n                size: size_and_units[0],\n                sizeUnits: size_and_units[1],\n                fstype: null,\n                tags: []\n            };\n        };\n\n        // Return true if the name of the logical volume is invalid.\n        $scope.isLogicalVolumeNameInvalid = function(disk) {\n            if(!angular.isString(disk.$options.name)) {\n                return false;\n            }\n            var startsWith = disk.$options.name.indexOf(disk.name + \"-\");\n            return (\n                startsWith !== 0 ||\n                disk.$options.name.length <= disk.name.length + 1 ||\n                isNameAlreadyInUse(disk.$options.name));\n        };\n\n        // Don't allow the name of the logical volume to remove the volume\n        // group name.\n        $scope.newLogicalVolumeNameChanged = function(disk) {\n            if(!angular.isString(disk.$options.name)) {\n                return;\n            }\n            var startsWith = disk.$options.name.indexOf(disk.name + \"-\");\n            if(startsWith !== 0) {\n                disk.$options.name = disk.name + \"-\";\n            }\n        };\n\n        // Return true if the logical volume size is invalid.\n        $scope.isAddLogicalVolumeSizeInvalid = function(disk) {\n            // Uses the same logic as the partition size checked.\n            return $scope.isAddPartitionSizeInvalid(disk);\n        };\n\n        // Confirm the logical volume creation.\n        $scope.availableConfirmLogicalVolume = function(disk) {\n            // Do nothing if not valid.\n            if($scope.isLogicalVolumeNameInvalid(disk) ||\n                $scope.isAddLogicalVolumeSizeInvalid(disk) ||\n                $scope.isMountPointInvalid(disk.$options.mountPoint)) {\n                return;\n            }\n\n            // Get the bytes to create the partition.\n            var bytes = ConverterService.unitsToBytes(\n                disk.$options.size, disk.$options.sizeUnits);\n\n            // Accepting prefilled defaults means use whole disk (lp:1509535).\n            var size_and_units = disk.original.available_size_human.split(\" \");\n            if(disk.$options.size === size_and_units[0] &&\n               disk.$options.sizeUnits === size_and_units[1]) {\n                bytes = disk.original.available_size;\n            }\n\n            // Clamp to available space.\n            if(bytes > disk.original.available_size) {\n                bytes = disk.original.available_size;\n            }\n\n            // Remove the disk if it is going to use all the remaining space.\n            var removeDisk = false;\n            if(bytes === disk.original.available_size) {\n                removeDisk = true;\n            }\n\n            // Remove the volume group name from the name.\n            var name = disk.$options.name.slice(disk.name.length + 1);\n\n            // Create the logical volume.\n            var params = {};\n            if(angular.isString(disk.$options.fstype) &&\n                disk.$options.fstype !== \"\") {\n                params.fstype = disk.$options.fstype;\n                if(disk.$options.mountPoint !== \"\") {\n                    params.mount_point = disk.$options.mountPoint;\n                    params.mount_options = disk.$options.mountOptions;\n                }\n            }\n            if(angular.isArray(disk.$options.tags)\n                && disk.$options.tags.length > 0) {\n                params.tags = disk.$options.tags.map(\n                    function(tag) { return tag.text; });\n            }\n            MachinesManager.createLogicalVolume(\n                $scope.node, disk.block_id, name, bytes, params);\n\n            // Remove the disk if needed.\n            if(removeDisk) {\n                var idx = $scope.available.indexOf(disk);\n                $scope.available.splice(idx, 1);\n            }\n            $scope.updateAvailableSelection(true);\n        };\n\n        // Returns true if storage cannot be edited.\n        // (it can't be changed when the node is in any state other\n        //  than Ready or Allocated)\n        $scope.isAllStorageDisabled = function() {\n            var authUser = UsersManager.getAuthUser();\n            if(!angular.isObject(authUser) || !angular.isObject($scope.node) ||\n                (!authUser.is_superuser &&\n                 authUser.username !== $scope.node.owner)) {\n                return true;\n            }else if (angular.isObject($scope.node) &&\n                [\"Ready\", \"Allocated\"].indexOf(\n                    $scope.node.status) === -1) {\n                // If the node is not ready or allocated, disable storage panel.\n                return true;\n            } else {\n                // The node must be either ready or broken. Enable it.\n                return false;\n            }\n        };\n\n        // Returns true if there are storage layout errors\n        $scope.hasStorageLayoutIssues = function() {\n            if(angular.isObject($scope.node) &&\n                angular.isArray($scope.node.storage_layout_issues)) {\n                return $scope.node.storage_layout_issues.length > 0;\n            }\n            return false;\n        };\n\n        // Tell $parent that the storageController has been loaded.\n        $scope.$parent.controllerLoaded('storageController', $scope);\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/node_details_storage.js","/* Copyright 2015-2018 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Node Details Controller\n */\n\nangular.module('MAAS').controller('NodeDetailsController', [\n    '$scope', '$rootScope', '$routeParams', '$location', '$interval',\n    'DevicesManager', 'MachinesManager', 'ControllersManager', 'ZonesManager',\n    'GeneralManager', 'UsersManager', 'TagsManager', 'DomainsManager',\n    'ManagerHelperService', 'ServicesManager', 'ErrorService',\n    'ValidationService', 'ScriptsManager', function(\n        $scope, $rootScope, $routeParams, $location, $interval, DevicesManager,\n        MachinesManager, ControllersManager, ZonesManager, GeneralManager,\n        UsersManager, TagsManager, DomainsManager, ManagerHelperService,\n        ServicesManager, ErrorService, ValidationService, ScriptsManager) {\n\n        // Mapping of device.ip_assignment to viewable text.\n        var DEVICE_IP_ASSIGNMENT = {\n            external: \"External\",\n            dynamic: \"Dynamic\",\n            \"static\": \"Static\"\n        };\n\n        // Set title and page.\n        $rootScope.title = \"Loading...\";\n        $rootScope.page = \"nodes\";\n\n        // Initial values.\n        $scope.loaded = false;\n        $scope.node = null;\n        $scope.action = {\n          option: null,\n          allOptions: null,\n          availableOptions: [],\n          error: null,\n          showing_confirmation: false\n        };\n        $scope.power_types = GeneralManager.getData(\"power_types\");\n        $scope.osinfo = GeneralManager.getData(\"osinfo\");\n        $scope.section = {\n            area: angular.isString(\n                $routeParams.area) ? $routeParams.area : \"summary\"\n        };\n        $scope.osSelection = {\n            osystem: null,\n            release: null,\n            hwe_kernel: null\n        };\n        $scope.commissionOptions = {\n            enableSSH: false,\n            skipNetworking: false,\n            skipStorage: false,\n            updateFirmware: false,\n            configureHBA: false\n        };\n        $scope.commissioningSelection = [];\n        $scope.testSelection = [];\n        $scope.releaseOptions = {};\n        $scope.checkingPower = false;\n        $scope.devices = [];\n        $scope.scripts = ScriptsManager.getItems();\n\n        // Node header section.\n        $scope.header = {\n            editing: false,\n            editing_domain: false,\n            hostname: {\n                value: \"\"\n            },\n            domain: {\n                selected: null,\n                options: DomainsManager.getItems()\n            }\n        };\n\n        // Summary section.\n        $scope.summary = {\n            editing: false,\n            architecture: {\n                selected: null,\n                options: GeneralManager.getData(\"architectures\")\n            },\n            min_hwe_kernel: {\n                selected: null,\n                options: GeneralManager.getData(\"min_hwe_kernels\")\n            },\n            zone: {\n                selected: null,\n                options: ZonesManager.getItems()\n            },\n            tags: []\n        };\n\n        // Service monitor section (for controllers).\n        $scope.services = {};\n\n        // Power section.\n        $scope.power = {\n            editing: false,\n            type: null,\n            bmc_node_count: 0,\n            parameters: {}\n        };\n\n        // Get the display text for device ip assignment type.\n        $scope.getDeviceIPAssignment = function(ipAssignment) {\n            return DEVICE_IP_ASSIGNMENT[ipAssignment];\n        };\n\n        // Events section.\n        $scope.events = {\n            limit: 10\n        };\n\n        // Updates the page title.\n        function updateTitle() {\n            if($scope.node && $scope.node.fqdn) {\n                $rootScope.title = $scope.node.fqdn;\n            }\n        }\n\n        function updateHeader() {\n            // Don't update the value if in editing mode. As this would\n            // overwrite the users changes.\n            if($scope.header.editing || $scope.header.editing_domain) {\n                return;\n            }\n            $scope.header.hostname.value = $scope.node.fqdn;\n            // DomainsManager gives us all Domain information while the node\n            // only contains the name and id. Because of this we need to loop\n            // through the DomainsManager options and find the option with the\n            // id matching the node id. Otherwise we end up setting our\n            // selected field to an option not from DomainsManager which\n            // doesn't work.\n            var i;\n            for(i=0;i<$scope.header.domain.options.length;i++) {\n                var option = $scope.header.domain.options[i];\n                if(option.id === $scope.node.domain.id) {\n                    $scope.header.domain.selected = option;\n                    break;\n                }\n            }\n        }\n\n        // Update the available action options for the node.\n        function updateAvailableActionOptions() {\n            $scope.action.availableOptions = [];\n            if(!angular.isObject($scope.node)) {\n                return;\n            }\n\n            // Initialize the allowed action list.\n            if($scope.action.allOptions === null) {\n                $scope.action.allOptions =\n                    $scope.getAllActionOptions($scope.node.node_type);\n            }\n\n            // Build the available action options control from the\n            // allowed actions, except set-zone which does not make\n            // sense in this view because the form has this\n            // functionality\n            angular.forEach($scope.action.allOptions, function(option) {\n                if($scope.node.actions.indexOf(option.name) >= 0\n                   && option.name !== \"set-zone\") {\n                    $scope.action.availableOptions.push(option);\n                }\n            });\n        }\n\n        // Updates the currently selected items in the power section.\n        function updatePower() {\n            // Do not update the selected items, when editing this would\n            // cause the users selection to change.\n            if($scope.power.editing) {\n                return;\n            }\n\n            var i;\n            $scope.power.type = null;\n            for(i = 0; i < $scope.power_types.length; i++) {\n                if($scope.node.power_type === $scope.power_types[i].name) {\n                    $scope.power.type = $scope.power_types[i];\n                    break;\n                }\n            }\n\n            $scope.power.bmc_node_count = $scope.node.power_bmc_node_count;\n\n            $scope.power.parameters = angular.copy(\n                $scope.node.power_parameters);\n            if(!angular.isObject($scope.power.parameters)) {\n                $scope.power.parameters = {};\n            }\n\n            // Force editing mode on, if the power_type is missing for a\n            // machine. This is placed at the bottom because we wanted the\n            // selected items to be filled in at least once.\n            if($scope.canEdit() && $scope.node.power_type === \"\" &&\n               $scope.node.node_type === 0) {\n                $scope.power.editing = true;\n            }\n        }\n\n        // Updates the currently selected items in the summary section.\n        function updateSummary() {\n            // Do not update the selected items, when editing this would\n            // cause the users selection to change.\n            if($scope.summary.editing) {\n                return;\n            }\n\n            if(angular.isObject($scope.node.zone)) {\n                $scope.summary.zone.selected = ZonesManager.getItemFromList(\n                    $scope.node.zone.id);\n            }\n            $scope.summary.architecture.selected = $scope.node.architecture;\n            $scope.summary.min_hwe_kernel.selected = $scope.node.min_hwe_kernel;\n            $scope.summary.tags = angular.copy($scope.node.tags);\n\n            // Force editing mode on, if the architecture is invalid. This is\n            // placed at the bottom because we wanted the selected items to\n            // be filled in at least once.\n            if($scope.canEdit() &&\n                $scope.hasUsableArchitectures() &&\n                $scope.hasInvalidArchitecture()) {\n                $scope.summary.editing = true;\n            }\n        }\n\n        // Updates the service monitor section.\n        function updateServices() {\n            if($scope.isController) {\n                $scope.services = {};\n                angular.forEach(ControllersManager.getServices(\n                        $scope.node), function(service) {\n                    $scope.services[service.name] = service;\n                });\n            }\n        }\n\n        // Update the devices array on the scope based on the device children\n        // on the node.\n        function updateDevices() {\n            $scope.devices = [];\n            angular.forEach($scope.node.devices, function(child) {\n                var device = {\n                    name: child.fqdn\n                };\n\n                // Add the interfaces to the device object if any exists.\n                if(angular.isArray(child.interfaces) &&\n                    child.interfaces.length > 0) {\n                    angular.forEach(child.interfaces, function(nic, nicIdx) {\n                        var deviceWithMAC = angular.copy(device);\n                        deviceWithMAC.mac_address = nic.mac_address;\n\n                        // Remove device name so it is not duplicated in the\n                        // table since this is another MAC address on this\n                        // device.\n                        if(nicIdx > 0) {\n                            deviceWithMAC.name = \"\";\n                        }\n\n                        // Add this links to the device object if any exists.\n                        if(angular.isArray(nic.links) &&\n                            nic.links.length > 0) {\n                            angular.forEach(nic.links, function(link, lIdx) {\n                                var deviceWithLink = angular.copy(\n                                    deviceWithMAC);\n                                deviceWithLink.ip_address = link.ip_address;\n\n                                // Remove the MAC address so it is not\n                                // duplicated in the table since this is\n                                // another link on this interface.\n                                if(lIdx > 0) {\n                                    deviceWithLink.mac_address = \"\";\n                                }\n\n                                $scope.devices.push(deviceWithLink);\n                            });\n                        } else {\n                            $scope.devices.push(deviceWithMAC);\n                        }\n                    });\n                } else {\n                    $scope.devices.push(device);\n                }\n            });\n        }\n\n        // Starts the watchers on the scope.\n        function startWatching() {\n            // Update the title and name when the node fqdn changes.\n            $scope.$watch(\"node.fqdn\", function() {\n                updateTitle();\n                updateHeader();\n            });\n\n            // Update the devices on the node.\n            $scope.$watch(\"node.devices\", updateDevices);\n\n            // Update the availableActionOptions when the node actions change.\n            $scope.$watch(\"node.actions\", updateAvailableActionOptions);\n\n            // Update the summary when the node or architectures list is\n            // updated.\n            $scope.$watch(\"node.architecture\", updateSummary);\n            $scope.$watchCollection(\n                $scope.summary.architecture.options, updateSummary);\n\n            // Uppdate the summary when min_hwe_kernel is updated.\n            $scope.$watch(\"node.min_hwe_kernel\", updateSummary);\n            $scope.$watchCollection(\n                $scope.summary.min_hwe_kernel.options, updateSummary);\n\n            // Update the summary when the node or zone list is\n            // updated.\n            $scope.$watch(\"node.zone.id\", updateSummary);\n            $scope.$watchCollection(\n                $scope.summary.zone.options, updateSummary);\n\n            // Update the power when the node power_type or power_parameters\n            // are updated.\n            $scope.$watch(\"node.power_type\", updatePower);\n            $scope.$watch(\"node.power_parameters\", updatePower);\n            $scope.$watchCollection(\"power_types\", updatePower);\n\n            // Update the services when the services list is updated.\n            $scope.$watch(\"node.service_ids\", updateServices);\n        }\n\n        // Called when the node has been loaded.\n        function nodeLoaded(node) {\n            $scope.node = node;\n            $scope.loaded = true;\n\n            updateTitle();\n            updateSummary();\n            updateServices();\n            startWatching();\n\n            // Tell the storageController and networkingController that the\n            // node has been loaded.\n            if(angular.isObject($scope.storageController)) {\n                $scope.storageController.nodeLoaded();\n            }\n            if(angular.isObject($scope.networkingController)) {\n                $scope.networkingController.nodeLoaded();\n            }\n        }\n\n        $scope.getAllActionOptions = function(node_type) {\n            if(typeof node_type !== 'number' ||\n                    node_type < 0 || node_type > 4) {\n                return [];\n            }\n            var actionTypeForNodeType = {\n                0: \"machine_actions\",\n                1: \"device_actions\",\n                2: \"rack_controller_actions\",\n                3: \"region_controller_actions\",\n                4: \"region_and_rack_controller_actions\"\n            };\n            return GeneralManager.getData(actionTypeForNodeType[node_type]);\n        };\n\n        // Update the node with new data on the region.\n        $scope.updateNode = function(node, queryPower) {\n            if(angular.isUndefined(queryPower)) {\n                queryPower = false;\n            }\n            return $scope.nodesManager.updateItem(node).then(function(node) {\n                updateHeader();\n                updateSummary();\n                if(queryPower) {\n                    $scope.checkPowerState();\n                }\n            }, function(error) {\n                console.log(error);\n                updateHeader();\n                updateSummary();\n            });\n        };\n\n        // Called for autocomplete when the user is typing a tag name.\n        $scope.tagsAutocomplete = function(query) {\n            return TagsManager.autocomplete(query);\n        };\n\n        $scope.getPowerStateClass = function() {\n            // This will get called very early and node can be empty.\n            // In that case just return an empty string. It will be\n            // called again to show the correct information.\n            if(!angular.isObject($scope.node)) {\n                return \"\";\n            }\n\n            if($scope.checkingPower) {\n                return \"checking\";\n            } else {\n                return $scope.node.power_state;\n            }\n        };\n\n        // Get the power state text to show.\n        $scope.getPowerStateText = function() {\n            // This will get called very early and node can be empty.\n            // In that case just return an empty string. It will be\n            // called again to show the correct information.\n            if(!angular.isObject($scope.node)) {\n                return \"\";\n            }\n\n            if($scope.checkingPower) {\n                return \"Checking power\";\n            } else if($scope.node.power_state === \"unknown\") {\n                return \"\";\n            } else {\n                return \"Power \" + $scope.node.power_state;\n            }\n        };\n\n        // Returns true when the \"check now\" button for updating the power\n        // state should be shown.\n        $scope.canCheckPowerState = function() {\n            // This will get called very early and node can be empty.\n            // In that case just return false. It will be\n            // called again to show the correct information.\n            if(!angular.isObject($scope.node)) {\n                return false;\n            }\n            return (\n                $scope.node.power_state !== \"unknown\" &&\n                !$scope.checkingPower);\n        };\n\n        // Check the power state of the node.\n        $scope.checkPowerState = function() {\n            $scope.checkingPower = true;\n            $scope.nodesManager.checkPowerState($scope.node).then(function() {\n                $scope.checkingPower = false;\n            });\n        };\n\n        $scope.isUbuntuOS = function() {\n            // This will get called very early and node can be empty.\n            // In that case just return an empty string. It will be\n            // called again to show the correct information.\n            if(!angular.isObject($scope.node)) {\n                return false;\n            }\n\n            if($scope.node.osystem === \"ubuntu\") {\n                return true;\n            }\n            return false;\n        };\n\n        $scope.isUbuntuCoreOS = function() {\n            // This will get called very early and node can be empty.\n            // In that case just return an empty string. It will be\n            // called again to show the correct information.\n            if(!angular.isObject($scope.node)) {\n                return false;\n            }\n\n            if($scope.node.osystem === \"ubuntu-core\") {\n                return true;\n            }\n            return false;\n        };\n\n        $scope.isCustomOS = function() {\n            // This will get called very early and node can be empty.\n            // In that case just return an empty string. It will be\n            // called again to show the correct information.\n            if(!angular.isObject($scope.node)) {\n                return false;\n            }\n\n            if($scope.node.osystem === \"custom\") {\n                return true;\n            }\n            return false;\n        };\n\n        // Return true if there is an action error.\n        $scope.isActionError = function() {\n            return $scope.action.error !== null;\n        };\n\n        // Return True if in deploy action and the osinfo is missing.\n        $scope.isDeployError = function() {\n            // Never a deploy error when there is an action error.\n            if($scope.isActionError()) {\n                return false;\n            }\n\n            var missing_osinfo = (\n                angular.isUndefined($scope.osinfo.osystems) ||\n                $scope.osinfo.osystems.length === 0);\n            if(angular.isObject($scope.action.option) &&\n                $scope.action.option.name === \"deploy\" &&\n                missing_osinfo) {\n                return true;\n            }\n            return false;\n        };\n\n        // Return True if unable to deploy because of missing ssh keys.\n        $scope.isSSHKeyError = function() {\n            // Never a deploy error when there is an action error.\n            if($scope.isActionError()) {\n                return false;\n            }\n            if(angular.isObject($scope.action.option) &&\n                $scope.action.option.name === \"deploy\" &&\n                UsersManager.getSSHKeyCount() === 0) {\n                return true;\n            }\n            return false;\n        };\n\n        // Called when the actionOption has changed.\n        $scope.action.optionChanged = function() {\n            // Clear the action error.\n            $scope.action.error = null;\n            $scope.action.showing_confirmation = false;\n        };\n\n        // Cancel the action.\n        $scope.actionCancel = function() {\n            $scope.action.option = null;\n            $scope.action.error = null;\n            $scope.action.showing_confirmation = false;\n        };\n\n        // Perform the action.\n        $scope.actionGo = function() {\n            var extra = {};\n            var i;\n            // Set deploy parameters if a deploy.\n            if($scope.action.option.name === \"deploy\" &&\n                angular.isString($scope.osSelection.osystem) &&\n                angular.isString($scope.osSelection.release)) {\n\n                // Set extra. UI side the release is structured os/release, but\n                // when it is sent over the websocket only the \"release\" is\n                // sent.\n                extra.osystem = $scope.osSelection.osystem;\n                var release = $scope.osSelection.release;\n                release = release.split(\"/\");\n                release = release[release.length-1];\n                extra.distro_series = release;\n                // hwe_kernel is optional so only include it if its specified\n                if(angular.isString($scope.osSelection.hwe_kernel) &&\n                   ($scope.osSelection.hwe_kernel.indexOf('hwe-') >= 0 ||\n                    $scope.osSelection.hwe_kernel.indexOf('ga-') >= 0)) {\n                    extra.hwe_kernel = $scope.osSelection.hwe_kernel;\n                }\n            } else if($scope.action.option.name === \"commission\") {\n                extra.enable_ssh = $scope.commissionOptions.enableSSH;\n                extra.skip_networking = (\n                    $scope.commissionOptions.skipNetworking);\n                extra.skip_storage = $scope.commissionOptions.skipStorage;\n                extra.commissioning_scripts = [];\n                for(i=0;i<$scope.commissioningSelection.length;i++) {\n                    extra.commissioning_scripts.push(\n                        $scope.commissioningSelection[i].id);\n                }\n                if($scope.commissionOptions.updateFirmware) {\n                    extra.commissioning_scripts.push('update_firmware')\n                }\n                if($scope.commissionOptions.configureHBA) {\n                    extra.commissioning_scripts.push('configure_hba')\n                }\n                if(extra.commissioning_scripts.length === 0) {\n                    // Tell the region not to run any custom commissioning\n                    // scripts.\n                    extra.commissioning_scripts.push('none');\n                }\n                extra.testing_scripts = [];\n                for(i=0;i<$scope.testSelection.length;i++) {\n                    extra.testing_scripts.push($scope.testSelection[i].id);\n                }\n                if(extra.testing_scripts.length === 0) {\n                    // Tell the region not to run any tests.\n                    extra.testing_scripts.push('none');\n                }\n            } else if($scope.action.option.name === \"test\") {\n                if($scope.node.status_code === 6 &&\n                        !$scope.action.showing_confirmation) {\n                    $scope.action.showing_confirmation = true;\n                    return;\n                }\n                // Set the test options.\n                extra.enable_ssh = $scope.commissionOptions.enableSSH;\n                extra.testing_scripts = [];\n                for(i=0;i<$scope.testSelection.length;i++) {\n                    extra.testing_scripts.push($scope.testSelection[i].id);\n                }\n                if(extra.testing_scripts.length === 0) {\n                    // Tell the region not to run any tests.\n                    extra.testing_scripts.push('none');\n                }\n            } else if($scope.action.option.name === \"release\") {\n                // Set the release options.\n                extra.erase = $scope.releaseOptions.erase;\n                extra.secure_erase = $scope.releaseOptions.secureErase;\n                extra.quick_erase = $scope.releaseOptions.quickErase;\n            }\n\n            $scope.nodesManager.performAction(\n                $scope.node, $scope.action.option.name, extra).then(function() {\n                    // If the action was delete, then go back to listing.\n                    if($scope.action.option.name === \"delete\") {\n                        $location.path(\"/nodes\");\n                    }\n                    $scope.action.option = null;\n                    $scope.action.error = null;\n                    $scope.action.showing_confirmation = false;\n                    $scope.osSelection.$reset();\n                    $scope.commissionOptions.enableSSH = false;\n                    $scope.commissionOptions.skipNetworking = false;\n                    $scope.commissionOptions.skipStorage = false;\n                    $scope.commissionOptions.updateFirmware = false;\n                    $scope.commissionOptions.configureHBA = false;\n                    $scope.commissioningSelection = [];\n                    $scope.testSelection = [];\n                }, function(error) {\n                    $scope.action.error = error;\n                });\n        };\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        // Return true if their are usable architectures.\n        $scope.hasUsableArchitectures = function() {\n            return $scope.summary.architecture.options.length > 0;\n        };\n\n        // Return the placeholder text for the architecture dropdown.\n        $scope.getArchitecturePlaceholder = function() {\n            if($scope.hasUsableArchitectures()) {\n                return \"Choose an architecture\";\n            } else {\n                return \"-- No usable architectures --\";\n            }\n        };\n\n        // Return true if the saved architecture is invalid.\n        $scope.hasInvalidArchitecture = function() {\n            if(angular.isObject($scope.node)) {\n                return (\n                    !$scope.isDevice && (\n                        $scope.node.architecture === \"\" ||\n                        $scope.summary.architecture.options.indexOf(\n                            $scope.node.architecture) === -1));\n            } else {\n                return false;\n            }\n        };\n\n        // Return true if the current architecture selection is invalid.\n        $scope.invalidArchitecture = function() {\n            return (\n                !$scope.isDevice && !$scope.isController && (\n                    $scope.summary.architecture.selected === \"\" ||\n                    $scope.summary.architecture.options.indexOf(\n                        $scope.summary.architecture.selected) === -1));\n        };\n\n        // Return true if at least a rack controller is connected to the\n        // region controller.\n        $scope.isRackControllerConnected = function() {\n            // If power_types exist then a rack controller is connected.\n            return $scope.power_types.length > 0;\n        };\n\n        // Return true if the node is locked\n        $scope.isLocked = function() {\n            if ($scope.node === null) {\n                return false;\n            }\n\n            return $scope.node.locked;\n        };\n\n        // Return true when the edit buttons can be clicked.\n        $scope.canEdit = function() {\n            return (\n                $scope.isRackControllerConnected() &&\n                    $scope.isSuperUser() &&\n                    ! $scope.isLocked());\n        };\n\n        // Called to edit the domain name.\n        $scope.editHeaderDomain = function() {\n            if($scope.canEdit()) {\n                return;\n            }\n\n            // Do nothing if already editing because we don't want to reset\n            // the current value.\n            if($scope.header.editing_domain) {\n                return;\n            }\n            $scope.header.editing = false;\n            $scope.header.editing_domain = true;\n\n            // Set the value to the hostname, as hostname and domain are edited\n            // using different fields.\n            $scope.header.hostname.value = $scope.node.hostname;\n        };\n\n        // Called to edit the node name.\n        $scope.editHeader = function() {\n            if(!$scope.canEdit()) {\n                return;\n            }\n\n            // Do nothing if already editing because we don't want to reset\n            // the current value.\n            if($scope.header.editing) {\n                return;\n            }\n            $scope.header.editing = true;\n            $scope.header.editing_domain = false;\n\n            // Set the value to the hostname, as hostname and domain are edited\n            // using different fields.\n            $scope.header.hostname.value = $scope.node.hostname;\n        };\n\n        // Return true when the hostname or domain in the header is invalid.\n        $scope.editHeaderInvalid = function() {\n            // Not invalid unless editing.\n            if(!$scope.header.editing && !$scope.header.editing_domain) {\n                return false;\n            }\n\n            // The value cannot be blank.\n            var value = $scope.header.hostname.value;\n            if(value.length === 0) {\n                return true;\n            }\n            return !ValidationService.validateHostname(value);\n        };\n\n        // Called to cancel editing of the node hostname and domain.\n        $scope.cancelEditHeader = function() {\n            $scope.header.editing = false;\n            $scope.header.editing_domain = false;\n            updateHeader();\n        };\n\n        // Called to save editing of node hostname or domain.\n        $scope.saveEditHeader = function() {\n            // Does nothing if invalid.\n            if($scope.editHeaderInvalid()) {\n                return;\n            }\n            $scope.header.editing = false;\n            $scope.header.editing_domain = false;\n\n            // Copy the node and make the changes.\n            var node = angular.copy($scope.node);\n            node.hostname = $scope.header.hostname.value;\n            node.domain = $scope.header.domain.selected;\n\n            // Update the node.\n            $scope.updateNode(node);\n        };\n\n        // Called to enter edit mode in the summary section.\n        $scope.editSummary = function() {\n            if(!$scope.canEdit()) {\n                return;\n            }\n            $scope.summary.editing = true;\n        };\n\n        // Called to cancel editing in the summary section.\n        $scope.cancelEditSummary = function() {\n            // Leave edit mode only if node has valid architecture.\n            if($scope.isDevice || $scope.isController) {\n                $scope.summary.editing = false;\n            } else if(!$scope.hasInvalidArchitecture()) {\n                $scope.summary.editing = false;\n            }\n\n            updateSummary();\n        };\n\n        // Called to save the changes made in the summary section.\n        $scope.saveEditSummary = function() {\n            // Do nothing if invalidArchitecture.\n            if($scope.invalidArchitecture()) {\n                return;\n            }\n\n            $scope.summary.editing = false;\n\n            // Copy the node and make the changes.\n            var node = angular.copy($scope.node);\n            node.zone = angular.copy($scope.summary.zone.selected);\n            node.architecture = $scope.summary.architecture.selected;\n            if($scope.summary.min_hwe_kernel.selected === null) {\n                node.min_hwe_kernel = \"\";\n            }else{\n                node.min_hwe_kernel = $scope.summary.min_hwe_kernel.selected;\n            }\n            node.tags = [];\n            angular.forEach($scope.summary.tags, function(tag) {\n                node.tags.push(tag.text);\n            });\n\n            // Update the node.\n            $scope.updateNode(node);\n        };\n\n        // Return true if the current power type selection is invalid.\n        $scope.invalidPowerType = function() {\n            return !angular.isObject($scope.power.type);\n        };\n\n        // Called to enter edit mode in the power section.\n        $scope.editPower = function() {\n            if(!$scope.canEdit()) {\n                return;\n            }\n            $scope.power.editing = true;\n        };\n\n        // Called to cancel editing in the power section.\n        $scope.cancelEditPower = function() {\n            // If the node is not a machine, only leave edit mode if node has\n            // valid power type.\n            if ($scope.node.node_type !== 0 || $scope.node.power_type !== \"\") {\n                $scope.power.editing = false;\n            }\n            updatePower();\n        };\n\n        // Called to save the changes made in the power section.\n        $scope.saveEditPower = function() {\n            // Does nothing if invalid power type.\n            if($scope.invalidPowerType()) {\n                return;\n            }\n            $scope.power.editing = false;\n\n            // Copy the node and make the changes.\n            var node = angular.copy($scope.node);\n            node.power_type = $scope.power.type.name;\n            node.power_parameters = angular.copy($scope.power.parameters);\n\n            // Update the node.\n            $scope.updateNode(node, true);\n        };\n\n        // Return true if the \"load more\" events button should be available.\n        $scope.allowShowMoreEvents = function() {\n            if(!angular.isObject($scope.node)) {\n                return false;\n            }\n            if(!angular.isArray($scope.node.events)) {\n                return false;\n            }\n            return (\n                $scope.node.events.length > 0 &&\n                $scope.node.events.length > $scope.events.limit &&\n                $scope.events.limit < 50);\n        };\n\n        // Show another 10 events.\n        $scope.showMoreEvents = function() {\n            $scope.events.limit += 10;\n        };\n\n        // Return the nice text for the given event.\n        $scope.getEventText = function(event) {\n            var text = event.type.description;\n            if(angular.isString(event.description) &&\n                event.description.length > 0) {\n                text += \" - \" + event.description;\n            }\n            return text;\n        };\n\n        $scope.getPowerEventError = function() {\n            if(!angular.isObject($scope.node) ||\n                !angular.isArray($scope.node.events)) {\n                return;\n            }\n\n            var i;\n            for(i = 0; i < $scope.node.events.length; i++) {\n                var event = $scope.node.events[i];\n                if(event.type.level === \"warning\" &&\n                   event.type.description === \"Failed to query node's BMC\") {\n                    // Latest power event is an error\n                    return event;\n                } else if(event.type.level === \"info\" &&\n                          event.type.description === \"Queried node's BMC\") {\n                    // Latest power event is not an error\n                    return;\n                }\n            }\n            // No power event found, thus no error\n            return;\n        };\n\n        $scope.hasPowerEventError = function() {\n            var event = $scope.getPowerEventError();\n            return angular.isObject(event);\n        };\n\n        $scope.getPowerEventErrorText = function() {\n            var event = $scope.getPowerEventError();\n            if(angular.isObject(event)) {\n                // Return text\n                return event.description;\n            } else {\n                return \"\";\n            }\n        };\n\n        // true if power error prevents the provided action\n        $scope.hasActionPowerError = function(actionName) {\n            if(!$scope.hasPowerError()) {\n                return false; // no error, no need to check state\n            }\n            // these states attempt to manipulate power\n            var powerChangingStates = [\n                'commission',\n                'deploy',\n                'on',\n                'off',\n                'release'\n            ];\n            if(actionName && powerChangingStates.indexOf(actionName) > -1) {\n                return true;\n            }\n            return false;\n        };\n\n        // Check to see if the power type has any missing system packages.\n        $scope.hasPowerError = function() {\n            if(angular.isObject($scope.power.type)) {\n                return $scope.power.type.missing_packages.length > 0;\n            } else {\n                return false;\n            }\n        };\n\n        // Returns a formatted string of missing system packages.\n        $scope.getPowerErrors = function() {\n            var i;\n            var result = \"\";\n            if(angular.isObject($scope.power.type)) {\n                var packages = $scope.power.type.missing_packages;\n                packages.sort();\n                for(i = 0; i < packages.length; i++) {\n                    result += packages[i];\n                    if(i+2 < packages.length) {\n                        result += \", \";\n                    }\n                    else if(i+1 < packages.length) {\n                        result += \" and \";\n                    }\n                }\n                result += packages.length > 1 ? \" packages\" : \" package\";\n            }\n            return result;\n        };\n\n        // Return the class to apply to the service.\n        $scope.getServiceClass = function(service) {\n            if(!angular.isObject(service)) {\n                return \"none\";\n            } else {\n                if(service.status === \"running\") {\n                    return \"success\";\n                } else if(service.status === \"dead\") {\n                    return \"error\";\n                } else if(service.status === \"degraded\") {\n                    return \"warning\";\n                } else {\n                    return \"none\";\n                }\n            }\n        };\n\n        $scope.hasCustomCommissioningScripts = function() {\n            var i;\n            for(i=0;i<$scope.scripts.length;i++) {\n                if($scope.scripts[i].script_type === 0) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Called by the children controllers to let the parent know.\n        $scope.controllerLoaded = function(name, scope) {\n            $scope[name] = scope;\n            if(angular.isObject(scope.node)) {\n              scope.nodeLoaded();\n            }\n        };\n\n        // Only show a warning that tests have failed if there are failed tests\n        // and the node isn't currently commissioning or testing.\n        $scope.showFailedTestWarning = function() {\n            // Devices can't have failed tests and don't have status_code\n            // defined.\n            if($scope.node.node_type === 1 || !$scope.node.status_code) {\n                return false;\n            }\n            switch($scope.node.status_code) {\n                // NEW\n                case 0:\n                // COMMISSIONING\n                case 1:\n                // FAILED_COMMISSIONING\n                case 2:\n                // TESTING\n                case 21:\n                // FAILED_TESTING\n                case 22:\n                    return false;\n            }\n            switch($scope.node.testing_status) {\n                // Tests havn't been run\n                case -1:\n                // Tests have passed\n                case 2:\n                    return false;\n            }\n            return true;\n        };\n\n        // Get the subtext for the CPU card. Only nodes commissioned after\n        // MAAS 2.4 will have the CPU speed.\n        $scope.getCPUSubtext = function() {\n            var label = $scope.node.cpu_count + \" cores\";\n            if(!$scope.node.cpu_speed || $scope.node.cpu_speed === 0) {\n                return label;\n            }else if($scope.node.cpu_speed < 1000) {\n                return label + \" @ \" + $scope.node.cpu_speed + \" Mhz\";\n            }else{\n                return label + \" @ \" + ($scope.node.cpu_speed / 1000) + \" Ghz\";\n            }\n        }\n\n        // Load all the required managers.\n        ManagerHelperService.loadManagers($scope, [\n            MachinesManager,\n            DevicesManager,\n            ControllersManager,\n            ZonesManager,\n            GeneralManager,\n            UsersManager,\n            TagsManager,\n            DomainsManager,\n            ServicesManager,\n            ScriptsManager\n        ]).then(function() {\n            if('controller' === $routeParams.type) {\n                $scope.nodesManager = ControllersManager;\n                $scope.isController = true;\n                $scope.isDevice = false;\n                $scope.type_name = 'controller';\n                $scope.type_name_title = 'Controller';\n            }else if('device' === $routeParams.type) {\n                $scope.nodesManager = DevicesManager;\n                $scope.isController = false;\n                $scope.isDevice = true;\n                $scope.type_name = 'device';\n                $scope.type_name_title = 'Device';\n            }else{\n                $scope.nodesManager = MachinesManager;\n                $scope.isController = false;\n                $scope.isDevice = false;\n                $scope.type_name = 'machine';\n                $scope.type_name_title = 'Machine';\n            }\n\n            // Possibly redirected from another controller that already had\n            // this node set to active. Only call setActiveItem if not already\n            // the activeItem.\n            var activeNode = $scope.nodesManager.getActiveItem();\n            if(angular.isObject(activeNode) &&\n                activeNode.system_id === $routeParams.system_id) {\n                nodeLoaded(activeNode);\n            } else {\n                $scope.nodesManager.setActiveItem(\n                    $routeParams.system_id).then(function(node) {\n                        nodeLoaded(node);\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n                activeNode = $scope.nodesManager.getActiveItem();\n            }\n            if($scope.isDevice) {\n                $scope.ip_assignment = activeNode.ip_assignment;\n            }\n\n            // Poll for architectures, hwe_kernels, and osinfo the whole\n            // time. This is because the user can always see the architecture\n            // and operating system. Need to keep this information up-to-date\n            // so the user is viewing current data.\n            GeneralManager.startPolling($scope, \"architectures\");\n            GeneralManager.startPolling($scope, \"hwe_kernels\");\n            GeneralManager.startPolling($scope, \"osinfo\");\n            GeneralManager.startPolling($scope, \"power_types\");\n        });\n\n        // Stop polling for architectures, hwe_kernels, and osinfo when the\n        // scope is destroyed.\n        $scope.$on(\"$destroy\", function() {\n            GeneralManager.stopPolling($scope, \"architectures\");\n            GeneralManager.stopPolling($scope, \"hwe_kernels\");\n            GeneralManager.stopPolling($scope, \"osinfo\");\n            GeneralManager.stopPolling($scope, \"power_types\");\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/node_details.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Node Events Controller\n */\n\nangular.module('MAAS').controller('NodeEventsController', [\n    '$scope', '$rootScope', '$routeParams',\n    'MachinesManager', 'ControllersManager', 'EventsManagerFactory',\n    'ManagerHelperService', 'ErrorService', function($scope, $rootScope,\n        $routeParams, MachinesManager, ControllersManager, EventsManagerFactory,\n        ManagerHelperService, ErrorService) {\n\n        // Events manager that is loaded once the node is loaded.\n        var eventsManager = null;\n\n        // Set the title and page.\n        $rootScope.title = \"Loading...\";\n        $rootScope.page = \"nodes\";\n\n        // Initial values.\n        $scope.loaded = false;\n        $scope.node = null;\n        $scope.events = [];\n        $scope.eventsLoaded = false;\n        $scope.days = 1;\n\n        // Called once the node is loaded.\n        function nodeLoaded(node) {\n            $scope.node = node;\n            $scope.loaded = true;\n\n            // Get the events manager and load it.\n            eventsManager = EventsManagerFactory.getManager(node.id);\n            $scope.events = eventsManager.getItems();\n            $scope.days = eventsManager.getMaximumDays();\n            eventsManager.loadItems().then(function() {\n                $scope.eventsLoaded = true;\n            });\n\n            // Update the title when the fqdn of the node changes.\n            $scope.$watch(\"node.fqdn\", function() {\n                $rootScope.title = $scope.node.fqdn + \" - events\";\n            });\n        }\n\n        // Return the nice text for the given event.\n        $scope.getEventText = function(event) {\n            var text = event.type.description;\n            if(angular.isString(event.description) &&\n                event.description.length > 0) {\n                text += \" - \" + event.description;\n            }\n            return text;\n        };\n\n        // Called to load more events.\n        $scope.loadMore = function() {\n            $scope.days += 1;\n            eventsManager.loadMaximumDays($scope.days);\n        };\n\n        if($routeParams.type === 'controller') {\n            $scope.nodesManager = ControllersManager;\n            $scope.type_name = 'controller';\n        }else{\n            $scope.nodesManager = MachinesManager;\n            $scope.type_name = 'machine';\n        }\n        // Load nodes manager.\n        ManagerHelperService.loadManager(\n            $scope, $scope.nodesManager).then(function() {\n            // If redirected from the NodeDetailsController then the node\n            // will already be active. No need to set it active again.\n            var activeNode = $scope.nodesManager.getActiveItem();\n            if(angular.isObject(activeNode) &&\n                activeNode.system_id === $routeParams.system_id) {\n                nodeLoaded(activeNode);\n            } else {\n                $scope.nodesManager.setActiveItem(\n                    $routeParams.system_id).then(function(node) {\n                        nodeLoaded(node);\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n            }\n        });\n\n        // Destroy the events manager when the scope is destroyed. This is so\n        // the client will not recieve any more notifications about events\n        // for this node.\n        $scope.$on(\"$destroy\", function() {\n            if(angular.isObject(eventsManager)) {\n                eventsManager.destroy();\n            }\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/node_events.js","/* Copyright 2015-2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Script Result Controller\n */\n\nangular.module('MAAS').controller('NodeResultController', [\n    '$scope', '$rootScope', '$routeParams', '$location',\n    'MachinesManager', 'ControllersManager', 'NodeResultsManagerFactory',\n    'ManagerHelperService', 'ErrorService',\n    function($scope, $rootScope, $routeParams, $location, MachinesManager,\n             ControllersManager, NodeResultsManagerFactory,\n             ManagerHelperService, ErrorService) {\n        // Set the title and page.\n        $rootScope.title = \"Loading...\";\n        $rootScope.page = \"nodes\";\n\n        // Initial values.\n        $scope.loaded = false;\n        $scope.resultLoaded = false;\n        $scope.node = null;\n        $scope.output = 'combined';\n        $scope.result = null;\n\n        $scope.get_result_data = function(output) {\n            $scope.output = output;\n            $scope.data = \"Loading...\";\n            var nodeResultsManager = NodeResultsManagerFactory.getManager(\n                $scope.node);\n            nodeResultsManager.get_result_data(\n                $scope.result.id, $scope.output).then(\n                    function(data) {\n                        if(data === '') {\n                            $scope.data = \"Empty file.\";\n                        }else{\n                            $scope.data = data;\n                        }\n                    });\n        };\n\n        // Called once the node is loaded.\n        function nodeLoaded(node) {\n            $scope.node = node;\n            $scope.loaded = true;\n\n            // Get the NodeResultsManager and load it.\n            var nodeResultsManager = NodeResultsManagerFactory.getManager(\n                $scope.node);\n            var requestedResult = parseInt($routeParams.id, 10);\n            nodeResultsManager.getItem(requestedResult).then(function(result) {\n                $scope.result = result;\n                $scope.get_result_data($scope.output);\n                $scope.resultLoaded = true;\n                $rootScope.title = $scope.node.fqdn + \" - \" +\n                    $scope.result.name;\n            });\n        }\n\n        // Update the title when the fqdn of the node changes.\n        $scope.$watch(\"node.fqdn\", function() {\n            if(angular.isObject($scope.node) &&\n               angular.isObject($scope.result)) {\n                $rootScope.title = $scope.node.fqdn + \" - \" +\n                    $scope.result.name;\n            }\n        });\n\n        if($routeParams.type === 'controller') {\n            $scope.nodesManager = ControllersManager;\n            $scope.type_name = 'controller';\n        }else{\n            $scope.nodesManager = MachinesManager;\n            $scope.type_name = 'machine';\n        }\n        // Load nodes manager.\n        ManagerHelperService.loadManager(\n            $scope, $scope.nodesManager).then(function() {\n            // If redirected from the NodeDetailsController then the node\n            // will already be active. No need to set it active again.\n            var activeNode = $scope.nodesManager.getActiveItem();\n            if(angular.isObject(activeNode) &&\n                activeNode.system_id === $routeParams.system_id) {\n                nodeLoaded(activeNode);\n            } else {\n                $scope.nodesManager.setActiveItem(\n                    $routeParams.system_id).then(function(node) {\n                        nodeLoaded(node);\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n            }\n        });\n\n        // Destroy the NodeResultsManager when the scope is destroyed. This is\n        // so the client will not recieve any more notifications about results\n        // from this node.\n        $scope.$on(\"$destroy\", function() {\n            var nodeResultsManager = NodeResultsManagerFactory.getManager(\n                $scope.node);\n            if(angular.isObject(nodeResultsManager)) {\n                nodeResultsManager.destroy();\n            }\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/node_result.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Node Results Controller\n */\n\nangular.module('MAAS').controller('NodeResultsController', [\n    '$scope', '$routeParams', 'MachinesManager', 'ControllersManager',\n    'NodeResultsManagerFactory', 'ManagerHelperService', 'ErrorService',\n    function($scope, $routeParams, MachinesManager, ControllersManager,\n             NodeResultsManagerFactory, ManagerHelperService, ErrorService) {\n\n        // NodeResultsManager that is loaded once the node is loaded.\n        $scope.nodeResultsManager = null;\n        // References to manager data used in scope.\n        $scope.commissioning_results = null;\n        $scope.testing_results = null;\n        $scope.installation_results = null;\n        $scope.results = null;\n\n        // List of logs available.\n        $scope.logs = {\n            option: null,\n            availableOptions: []\n        };\n        // Log content being displayed.\n        $scope.logOutput = 'Loading...';\n\n        // Initial values.\n        $scope.loaded = false;\n        $scope.resultsLoaded = false;\n        $scope.node = null;\n\n        function updateLogs() {\n            var i;\n            var option;\n            var had_installation = $scope.logs.availableOptions.length === 3;\n            $scope.logs.availableOptions.length = 0;\n            // XXX ltrager 2017-12-01 - Only show the current installation log\n            // if the machine is deploying, deployed, or failed deploying. The\n            // logs page needs to be redesigned to show previous installation\n            // results.\n            if($scope.installation_results &&\n                    $scope.installation_results.length > 0 && (\n                        $scope.node.status_code === 6 ||\n                        $scope.node.status_code === 9 ||\n                        $scope.node.status_code === 11)) {\n                $scope.logs.availableOptions.push({\n                    'title': 'Installation output',\n                    'id': $scope.installation_results[0].id\n                });\n            }\n            $scope.logs.availableOptions.push({\n                'title': 'Machine output (YAML)',\n                'id': 'summary_yaml'\n            });\n            $scope.logs.availableOptions.push({\n                'title': 'Machine output (XML)',\n                'id': 'summary_xml'\n            });\n            if(!had_installation &&\n               $scope.logs.availableOptions.length === 3) {\n                // A new installation log has appeared, show it.\n                $scope.logs.option = $scope.logs.availableOptions[0];\n            }else if(!$scope.selectedLog || (\n                had_installation && $scope.logs.length === 2)) {\n                // No longer in a deployed state.\n                $scope.logs.option = $scope.logs.availableOptions[0];\n            }\n        }\n\n        // Called once the node has loaded.\n        function nodeLoaded(node) {\n            $scope.node = node;\n            $scope.loaded = true;\n            // Get the NodeResultsManager and load it.\n            $scope.nodeResultsManager = NodeResultsManagerFactory.getManager(\n                node, $scope.section.area);\n            $scope.nodeResultsManager.loadItems().then(function() {\n                $scope.commissioning_results =\n                    $scope.nodeResultsManager.commissioning_results;\n                $scope.testing_results =\n                    $scope.nodeResultsManager.testing_results;\n                $scope.installation_results =\n                    $scope.nodeResultsManager.installation_results;\n                $scope.results = $scope.nodeResultsManager.results;\n                // Only load and monitor logs when on the logs page.\n                if($scope.section.area === \"logs\") {\n                    updateLogs();\n                    $scope.$watch(\"installation_results\", updateLogs, true);\n                    $scope.$watch(\n                        \"installation_results\", $scope.updateLogOutput, true);\n                }\n                $scope.resultsLoaded = true;\n            });\n        }\n\n        if($routeParams.type === 'controller') {\n            $scope.nodesManager = ControllersManager;\n        } else {\n            $scope.nodesManager = MachinesManager;\n        }\n        // Load nodes manager.\n        ManagerHelperService.loadManager(\n            $scope, $scope.nodesManager).then(function() {\n                // If redirected from the NodeDetailsController then the node\n                // will already be active. No need to set it active again.\n                var activeNode = $scope.nodesManager.getActiveItem();\n                if(angular.isObject(activeNode) &&\n                   activeNode.system_id === $routeParams.system_id) {\n                    nodeLoaded(activeNode);\n                } else {\n                    $scope.nodesManager.setActiveItem(\n                        $routeParams.system_id).then(function(node) {\n                            nodeLoaded(node);\n                        }, function(error) {\n                            ErrorService.raiseError(error);\n                        });\n                }\n            });\n\n        $scope.updateLogOutput = function() {\n            $scope.logOutput = \"Loading...\";\n            if(!$scope.node) {\n                return;\n            }else if($scope.logs.option.id === 'summary_xml') {\n                $scope.nodesManager.getSummaryXML($scope.node).then(\n                    function(output) {\n                        $scope.logOutput = output;\n                    });\n            }else if($scope.logs.option.id === 'summary_yaml') {\n                $scope.nodesManager.getSummaryYAML($scope.node).then(\n                    function(output) {\n                        $scope.logOutput = output;\n                    });\n            } else {\n                var result = null;\n                var i, j;\n                // Find the installation result to be displayed.\n                for(i = 0; i < $scope.installation_results.length; i++) {\n                    var hlist = $scope.installation_results[i].history_list;\n                    for(j = 0; j < hlist.length; j++) {\n                        if(hlist[j].id === $scope.logs.option.id) {\n                            result = hlist[j];\n                            break;\n                        }\n                    }\n                    if(result) {\n                        break;\n                    }\n                }\n                switch(result.status) {\n                    case 0:\n                        $scope.logOutput = \"System is booting...\";\n                        break;\n                    case 1:\n                        $scope.logOutput = \"Installation has begun!\";\n                        break;\n                    case 2:\n                        $scope.nodeResultsManager.get_result_data(\n                            result.id, 'combined').then(function(output) {\n                                if(output === '') {\n                                    $scope.logOutput =\n                                        \"Installation has succeeded but \" +\n                                        \"no output was given.\";\n                                } else {\n                                    $scope.logOutput = output;\n                                }\n                            });\n                        break;\n                    case 3:\n                        $scope.nodeResultsManager.get_result_data(\n                            result.id, 'combined').then(function(output) {\n                                if(output === '') {\n                                    $scope.logOutput =\n                                        \"Installation has failed and no \" +\n                                        \"output was given.\";\n                                } else {\n                                    $scope.logOutput = output;\n                                }\n                            });\n                        break;\n                    case 4:\n                        $scope.logOutput =\n                            \"Installation failed after 40 minutes.\";\n                        break;\n                    case 5:\n                        $scope.logOutput = \"Installation was aborted.\";\n                        break;\n                    default:\n                        $scope.logOutput = \"BUG: Unknown log status \" +\n                            result.status;\n                        break;\n                }\n            }\n        };\n\n        // Destroy the NodeResultsManager when the scope is destroyed. This is\n        // so the client will not recieve any more notifications about results\n        // from this node.\n        $scope.$on(\"$destroy\", function() {\n            if(angular.isObject($scope.nodeResultsManager)) {\n                $scope.nodeResultsManager.destroy();\n            }\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/node_results.js","/* Copyright 2015-2018 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Nodes List Controller\n */\n\nangular.module('MAAS').controller('NodesListController', [\n    '$scope', '$interval', '$rootScope', '$routeParams', '$location',\n    'MachinesManager', 'DevicesManager', 'ControllersManager',\n    'GeneralManager', 'ManagerHelperService', 'SearchService',\n    'ZonesManager', 'UsersManager', 'ServicesManager', 'ScriptsManager',\n    'SwitchesManager',\n    function($scope, $interval, $rootScope, $routeParams, $location,\n        MachinesManager, DevicesManager, ControllersManager, GeneralManager,\n        ManagerHelperService, SearchService, ZonesManager, UsersManager,\n        ServicesManager, ScriptsManager, SwitchesManager) {\n\n        // Mapping of device.ip_assignment to viewable text.\n        var DEVICE_IP_ASSIGNMENT = {\n            external: \"External\",\n            dynamic: \"Dynamic\",\n            \"static\": \"Static\"\n        };\n\n        // Set title and page.\n        $rootScope.title = \"Nodes\";\n        $rootScope.page = \"nodes\";\n\n        // Set initial values.\n        $scope.nodes = MachinesManager.getItems();\n        $scope.zones = ZonesManager.getItems();\n        $scope.devices = DevicesManager.getItems();\n        $scope.controllers = ControllersManager.getItems();\n        $scope.switches = SwitchesManager.getItems();\n        $scope.showswitches = $routeParams.switches === 'on';\n        $scope.currentpage = \"nodes\";\n        $scope.osinfo = GeneralManager.getData(\"osinfo\");\n        $scope.scripts = ScriptsManager.getItems();\n        $scope.loading = true;\n\n        $scope.tabs = {};\n        // Nodes tab.\n        $scope.tabs.nodes = {};\n        $scope.tabs.nodes.pagetitle = \"Machines\";\n        $scope.tabs.nodes.currentpage = \"nodes\";\n        $scope.tabs.nodes.manager = MachinesManager;\n        $scope.tabs.nodes.previous_search = \"\";\n        $scope.tabs.nodes.search = \"\";\n        $scope.tabs.nodes.searchValid = true;\n        $scope.tabs.nodes.selectedItems = MachinesManager.getSelectedItems();\n        $scope.tabs.nodes.metadata = MachinesManager.getMetadata();\n        $scope.tabs.nodes.filters = SearchService.getEmptyFilter();\n        $scope.tabs.nodes.actionOption = null;\n        $scope.tabs.nodes.takeActionOptions = GeneralManager.getData(\n            \"machine_actions\");\n        $scope.tabs.nodes.actionErrorCount = 0;\n        $scope.tabs.nodes.actionProgress = {\n            total: 0,\n            completed: 0,\n            errors: {},\n            showing_confirmation: false,\n            affected_nodes: 0\n        };\n        $scope.tabs.nodes.osSelection = {\n            osystem: null,\n            release: null,\n            hwe_kernel: null\n        };\n        $scope.tabs.nodes.zoneSelection = null;\n        $scope.tabs.nodes.commissionOptions = {\n            enableSSH: false,\n            skipNetworking: false,\n            skipStorage: false,\n            updateFirmware: false,\n            configureHBA: false\n        };\n        $scope.tabs.nodes.releaseOptions = {};\n        $scope.tabs.nodes.commissioningSelection = [];\n        $scope.tabs.nodes.testSelection = [];\n\n        // Device tab.\n        $scope.tabs.devices = {};\n        $scope.tabs.devices.pagetitle = \"Devices\";\n        $scope.tabs.devices.currentpage = \"devices\";\n        $scope.tabs.devices.manager = DevicesManager;\n        $scope.tabs.devices.previous_search = \"\";\n        $scope.tabs.devices.search = \"\";\n        $scope.tabs.devices.searchValid = true;\n        $scope.tabs.devices.selectedItems = DevicesManager.getSelectedItems();\n        $scope.tabs.devices.filtered_items = [];\n        $scope.tabs.devices.predicate = 'fqdn';\n        $scope.tabs.devices.allViewableChecked = false;\n        $scope.tabs.devices.metadata = DevicesManager.getMetadata();\n        $scope.tabs.devices.filters = SearchService.getEmptyFilter();\n        $scope.tabs.devices.column = 'fqdn';\n        $scope.tabs.devices.actionOption = null;\n        $scope.tabs.devices.takeActionOptions = GeneralManager.getData(\n            \"device_actions\");\n        $scope.tabs.devices.actionErrorCount = 0;\n        $scope.tabs.devices.actionProgress = {\n            total: 0,\n            completed: 0,\n            errors: {},\n            showing_confirmation: false,\n            affected_nodes: 0\n        };\n        $scope.tabs.devices.zoneSelection = null;\n\n        // Controller tab.\n        $scope.tabs.controllers = {};\n        $scope.tabs.controllers.pagetitle = \"Controllers\";\n        $scope.tabs.controllers.currentpage = \"controllers\";\n        $scope.tabs.controllers.manager = ControllersManager;\n        $scope.tabs.controllers.previous_search = \"\";\n        $scope.tabs.controllers.search = \"\";\n        $scope.tabs.controllers.searchValid = true;\n        $scope.tabs.controllers.selectedItems =\n            ControllersManager.getSelectedItems();\n        $scope.tabs.controllers.filtered_items = [];\n        $scope.tabs.controllers.predicate = 'fqdn';\n        $scope.tabs.controllers.allViewableChecked = false;\n        $scope.tabs.controllers.metadata = ControllersManager.getMetadata();\n        $scope.tabs.controllers.filters = SearchService.getEmptyFilter();\n        $scope.tabs.controllers.column = 'fqdn';\n        $scope.tabs.controllers.actionOption = null;\n        // Rack controllers contain all options\n        $scope.tabs.controllers.takeActionOptions = GeneralManager.getData(\n            \"rack_controller_actions\");\n        $scope.tabs.controllers.actionErrorCount = 0;\n        $scope.tabs.controllers.actionProgress = {\n            total: 0,\n            completed: 0,\n            errors: {},\n            showing_confirmation: false,\n            affected_nodes: 0\n        };\n        $scope.tabs.controllers.zoneSelection = null;\n        $scope.tabs.controllers.syncStatuses = {};\n        $scope.tabs.controllers.addController = false;\n        $scope.tabs.controllers.registerUrl = MAAS_config.register_url;\n        $scope.tabs.controllers.registerSecret = MAAS_config.register_secret;\n\n        // Switch tab.\n        $scope.tabs.switches = {};\n        $scope.tabs.switches.pagetitle = \"Switches\";\n        $scope.tabs.switches.currentpage = \"switches\";\n        $scope.tabs.switches.manager = SwitchesManager;\n        $scope.tabs.switches.previous_search = \"\";\n        $scope.tabs.switches.search = \"\";\n        $scope.tabs.switches.searchValid = true;\n        $scope.tabs.switches.selectedItems = SwitchesManager.getSelectedItems();\n        $scope.tabs.switches.predicate = 'fqdn';\n        $scope.tabs.switches.allViewableChecked = false;\n        $scope.tabs.switches.metadata = SwitchesManager.getMetadata();\n        $scope.tabs.switches.filters = SearchService.getEmptyFilter();\n        $scope.tabs.switches.column = 'fqdn';\n        $scope.tabs.switches.actionOption = null;\n        // XXX: Which actions should there be?\n        $scope.tabs.switches.takeActionOptions = GeneralManager.getData(\n            \"machine_actions\");\n        $scope.tabs.switches.actionErrorCount = 0;\n        $scope.tabs.switches.actionProgress = {\n            total: 0,\n            completed: 0,\n            errors: {},\n            showing_confirmation: false,\n            affected_nodes: 0\n        };\n        $scope.tabs.switches.osSelection = {\n            osystem: null,\n            release: null,\n            hwe_kernel: null\n        };\n        $scope.tabs.switches.zoneSelection = null;\n        $scope.tabs.switches.commissioningSelection = [];\n        $scope.tabs.switches.commissionOptions = {\n            enableSSH: false,\n            skipNetworking: false,\n            skipStorage: false,\n            updateFirmware: false,\n            configureHBA: false\n        };\n        $scope.tabs.switches.releaseOptions = {};\n\n\n        // Options for add hardware dropdown.\n        $scope.addHardwareOption = null;\n        $scope.addHardwareOptions = [\n            {\n                name: \"machine\",\n                title: \"Machine\"\n            },\n            {\n                name: \"chassis\",\n                title: \"Chassis\"\n            }\n        ];\n\n        // This will hold the AddHardwareController once it is initialized.\n        // The controller will set this variable as it's always a child of\n        // this scope.\n        $scope.addHardwareScope = null;\n\n        // This will hold the AddDeviceController once it is initialized.\n        // The controller will set this variable as it's always a child of\n        // this scope.\n        $scope.addDeviceScope = null;\n\n        // When the addHardwareScope is hidden it will emit this event. We\n        // clear the call to action button, so it can be used again.\n        $scope.$on(\"addHardwareHidden\", function() {\n            $scope.addHardwareOption = null;\n        });\n\n        // Return true if the tab is in viewing selected mode.\n        function isViewingSelected(tab) {\n            var search = $scope.tabs[tab].search.toLowerCase();\n            return search === \"in:(selected)\" || search === \"in:selected\";\n        }\n\n        // Sets the search bar to only show selected.\n        function enterViewSelected(tab) {\n            $scope.tabs[tab].previous_search = $scope.tabs[tab].search;\n            $scope.tabs[tab].search = \"in:(Selected)\";\n        }\n\n        // Clear search bar from viewing selected.\n        function leaveViewSelected(tab) {\n            if(isViewingSelected(tab)) {\n                $scope.tabs[tab].search = $scope.tabs[tab].previous_search;\n                $scope.updateFilters(tab);\n            }\n        }\n\n        // Called to update `allViewableChecked`.\n        function updateAllViewableChecked(tab) {\n            // Not checked when the filtered nodes are empty.\n            if($scope.tabs[tab].filtered_items.length === 0) {\n                $scope.tabs[tab].allViewableChecked = false;\n                return;\n            }\n\n            // Loop through all filtered nodes and see if all are checked.\n            var i;\n            for(i = 0; i < $scope.tabs[tab].filtered_items.length; i++) {\n                if(!$scope.tabs[tab].filtered_items[i].$selected) {\n                    $scope.tabs[tab].allViewableChecked = false;\n                    return;\n                }\n            }\n            $scope.tabs[tab].allViewableChecked = true;\n        }\n\n        function clearAction(tab) {\n            resetActionProgress(tab);\n            leaveViewSelected(tab);\n            $scope.tabs[tab].actionOption = null;\n            $scope.tabs[tab].zoneSelection = null;\n            if(tab === \"nodes\" || tab === \"switches\") {\n                // Possible for this to be called before the osSelect\n                // direction is initialized. In that case it has not\n                // created the $reset function on the model object.\n                if(angular.isFunction(\n                    $scope.tabs[tab].osSelection.$reset)) {\n                    $scope.tabs[tab].osSelection.$reset();\n                }\n                $scope.tabs[tab].commissionOptions.enableSSH = false;\n                $scope.tabs[tab].commissionOptions.skipNetworking = false;\n                $scope.tabs[tab].commissionOptions.skipStorage = false;\n                $scope.tabs[tab].commissionOptions.updateFirmware = false;\n                $scope.tabs[tab].commissionOptions.configureHBA = false;\n            }\n            $scope.tabs[tab].commissioningSelection = [];\n            $scope.tabs[tab].testSelection = [];\n        }\n\n        // Clear the action if required.\n        function shouldClearAction(tab) {\n            if($scope.tabs[tab].selectedItems.length === 0) {\n                clearAction(tab);\n            }\n            if($scope.tabs[tab].actionOption && !isViewingSelected(tab)) {\n                $scope.tabs[tab].actionOption = null;\n            }\n        }\n\n        // Called when the filtered_items are updated. Checks if the\n        // filtered_items are empty and if the search still matches the\n        // previous search. This will reset the search when no nodes match\n        // the current filter.\n        function removeEmptyFilter(tab) {\n            if($scope.tabs[tab].filtered_items.length === 0 &&\n                $scope.tabs[tab].search !== \"\" &&\n                $scope.tabs[tab].search === $scope.tabs[tab].previous_search) {\n                $scope.tabs[tab].search = \"\";\n                $scope.updateFilters(tab);\n            }\n        }\n\n        // Update the number of selected items which have an error based on the\n        // current selected action.\n        function updateActionErrorCount(tab) {\n            var i;\n            $scope.tabs[tab].actionErrorCount = 0;\n            for(i = 0; i < $scope.tabs[tab].selectedItems.length; i++) {\n                var supported = $scope.supportsAction(\n                    $scope.tabs[tab].selectedItems[i], tab);\n                if(!supported) {\n                    $scope.tabs[tab].actionErrorCount += 1;\n                }\n                $scope.tabs[tab].selectedItems[i].action_failed = false;\n            }\n        }\n\n        // Reset actionProgress on tab to zero.\n        function resetActionProgress(tab) {\n            var progress = $scope.tabs[tab].actionProgress;\n            progress.completed = progress.total = 0;\n            progress.errors = {};\n            progress.showing_confirmation = false;\n            progress.affected_nodes = 0;\n        }\n\n        // Add error to action progress and group error messages by nodes.\n        function addErrorToActionProgress(tab, error, node) {\n            var progress = $scope.tabs[tab].actionProgress;\n            progress.completed += 1;\n            var nodes = progress.errors[error];\n            if(angular.isUndefined(nodes)) {\n                progress.errors[error] = [node];\n            } else {\n                nodes.push(node);\n            }\n        }\n\n        // After an action has been performed check if we can leave all nodes\n        // selected or if an error occured and we should only show the failed\n        // nodes.\n        function updateSelectedItems(tab) {\n            if(!$scope.hasActionsFailed(tab)) {\n                if(!$scope.hasActionsInProgress(tab)) {\n                     clearAction(tab);\n                     enterViewSelected(tab);\n                }\n                return;\n            }\n            angular.forEach($scope.tabs[tab].manager.getItems(),\n                    function(node) {\n                if(node.action_failed === false) {\n                    $scope.tabs[tab].manager.unselectItem(node.system_id);\n                }\n            });\n        }\n\n        // Toggles between the current tab.\n        $scope.toggleTab = function(tab) {\n            $rootScope.title = $scope.tabs[tab].pagetitle;\n            $scope.currentpage = tab;\n            $location.search('tab', tab);\n        };\n\n        // Clear the search bar.\n        $scope.clearSearch = function(tab) {\n            $scope.tabs[tab].search = \"\";\n            $scope.updateFilters(tab);\n        };\n\n        // Mark a node as selected or unselected.\n        $scope.toggleChecked = function(node, tab) {\n            if(tab !== 'nodes' && tab !== 'switches') {\n                if($scope.tabs[tab].manager.isSelected(node.system_id)) {\n                    $scope.tabs[tab].manager.unselectItem(node.system_id);\n                } else {\n                    $scope.tabs[tab].manager.selectItem(node.system_id);\n                }\n                updateAllViewableChecked(tab);\n            }\n            updateActionErrorCount(tab);\n            shouldClearAction(tab);\n        };\n\n        // Select all viewable nodes or deselect all viewable nodes.\n        $scope.toggleCheckAll = function(tab) {\n            if(tab !== 'nodes' && tab !== 'switches') {\n                if($scope.tabs[tab].allViewableChecked) {\n                    angular.forEach(\n                        $scope.tabs[tab].filtered_items, function(node) {\n                            $scope.tabs[tab].manager.unselectItem(\n                                node.system_id);\n                    });\n                } else {\n                    angular.forEach(\n                        $scope.tabs[tab].filtered_items, function(node) {\n                            $scope.tabs[tab].manager.selectItem(\n                                node.system_id);\n                    });\n                }\n                updateAllViewableChecked(tab);\n            }\n            updateActionErrorCount(tab);\n            shouldClearAction(tab);\n        };\n\n        $scope.onNodeListingChanged = function(nodes, tab) {\n            if(nodes.length === 0 &&\n                $scope.tabs[tab].search !== \"\" &&\n                $scope.tabs[tab].search === $scope.tabs[tab].previous_search) {\n                $scope.tabs[tab].search = \"\";\n                $scope.updateFilters(tab);\n            }\n        };\n\n        // When the filtered nodes change update if all check buttons\n        // should be checked or not.\n        $scope.$watchCollection(\"tabs.devices.filtered_items\", function() {\n            updateAllViewableChecked(\"devices\");\n            removeEmptyFilter(\"devices\");\n        });\n        $scope.$watchCollection(\"tabs.controllers.filtered_items\", function() {\n            updateAllViewableChecked(\"controllers\");\n            removeEmptyFilter(\"controllers\");\n        });\n\n        // Shows the current selection.\n        $scope.showSelected = function(tab) {\n            enterViewSelected(tab);\n            $scope.updateFilters(tab);\n        };\n\n        // Adds or removes a filter to the search.\n        $scope.toggleFilter = function(type, value, tab) {\n            // Don't allow a filter to be changed when an action is\n            // in progress.\n            if(angular.isObject($scope.tabs[tab].actionOption)) {\n                return;\n            }\n            $scope.tabs[tab].filters = SearchService.toggleFilter(\n                $scope.tabs[tab].filters, type, value, true);\n            $scope.tabs[tab].search = SearchService.filtersToString(\n                $scope.tabs[tab].filters);\n        };\n\n        // Return True if the filter is active.\n        $scope.isFilterActive = function(type, value, tab) {\n            return SearchService.isFilterActive(\n                $scope.tabs[tab].filters, type, value, true);\n        };\n\n        // Update the filters object when the search bar is updated.\n        $scope.updateFilters = function(tab) {\n            var filters = SearchService.getCurrentFilters(\n                $scope.tabs[tab].search);\n            if(filters === null) {\n                $scope.tabs[tab].filters = SearchService.getEmptyFilter();\n                $scope.tabs[tab].searchValid = false;\n            } else {\n                $scope.tabs[tab].filters = filters;\n                $scope.tabs[tab].searchValid = true;\n            }\n            shouldClearAction(tab);\n        };\n\n        // Sorts the table by predicate.\n        $scope.sortTable = function(predicate, tab) {\n            $scope.tabs[tab].predicate = predicate;\n            $scope.tabs[tab].reverse = !$scope.tabs[tab].reverse;\n        };\n\n        // Sets the viewable column or sorts.\n        $scope.selectColumnOrSort = function(predicate, tab) {\n            if($scope.tabs[tab].column !== predicate) {\n                $scope.tabs[tab].column = predicate;\n            } else {\n                $scope.sortTable(predicate, tab);\n            }\n        };\n\n        // Return True if the node supports the action.\n        $scope.supportsAction = function(node, tab) {\n            if(!$scope.tabs[tab].actionOption) {\n                return true;\n            }\n            return node.actions.indexOf(\n                $scope.tabs[tab].actionOption.name) >= 0;\n        };\n\n        // Called when the action option gets changed.\n        $scope.actionOptionSelected = function(tab) {\n            updateActionErrorCount(tab);\n            enterViewSelected(tab);\n\n            // Hide the add hardware/device section.\n            if (tab === 'nodes') {\n                if(angular.isObject($scope.addHardwareScope)) {\n                    $scope.addHardwareScope.hide();\n                }\n            } else if(tab === 'devices') {\n                if(angular.isObject($scope.addDeviceScope)) {\n                    $scope.addDeviceScope.hide();\n                }\n            }\n        };\n\n        // Return True if there is an action error.\n        $scope.isActionError = function(tab) {\n            if(angular.isObject($scope.tabs[tab].actionOption) &&\n                $scope.tabs[tab].actionOption.name === \"deploy\" &&\n                $scope.tabs[tab].actionErrorCount === 0 &&\n                ($scope.osinfo.osystems.length === 0 ||\n                UsersManager.getSSHKeyCount() === 0)) {\n                return true;\n            }\n            return $scope.tabs[tab].actionErrorCount !== 0;\n        };\n\n        // Return True if unable to deploy because of missing images.\n        $scope.isDeployError = function(tab) {\n            if($scope.tabs[tab].actionErrorCount !== 0) {\n                return false;\n            }\n            if(angular.isObject($scope.tabs[tab].actionOption) &&\n                $scope.tabs[tab].actionOption.name === \"deploy\" &&\n                $scope.osinfo.osystems.length === 0) {\n                return true;\n            }\n            return false;\n        };\n\n        // Return True if unable to deploy because of missing ssh keys.\n        $scope.isSSHKeyError = function(tab) {\n            if($scope.tabs[tab].actionErrorCount !== 0) {\n                return false;\n            }\n            if(angular.isObject($scope.tabs[tab].actionOption) &&\n                $scope.tabs[tab].actionOption.name === \"deploy\" &&\n                UsersManager.getSSHKeyCount() === 0) {\n                return true;\n            }\n            return false;\n        };\n\n        // Called when the current action is cancelled.\n        $scope.actionCancel = function(tab) {\n            resetActionProgress(tab);\n            leaveViewSelected(tab);\n            $scope.tabs[tab].actionOption = null;\n        };\n\n        // Perform the action on all nodes.\n        $scope.actionGo = function(tab) {\n            var extra = {};\n            var i;\n            // Set deploy parameters if a deploy or set zone action.\n            if($scope.tabs[tab].actionOption.name === \"deploy\" &&\n                angular.isString($scope.tabs[tab].osSelection.osystem) &&\n                angular.isString($scope.tabs[tab].osSelection.release)) {\n\n                // Set extra. UI side the release is structured os/release, but\n                // when it is sent over the websocket only the \"release\" is\n                // sent.\n                extra.osystem = $scope.tabs[tab].osSelection.osystem;\n                var release = $scope.tabs[tab].osSelection.release;\n                release = release.split(\"/\");\n                release = release[release.length-1];\n                extra.distro_series = release;\n                // hwe_kernel is optional so only include it if its specified\n                if(angular.isString($scope.tabs[tab].osSelection.hwe_kernel) &&\n                   ($scope.tabs[tab].osSelection.hwe_kernel.indexOf('hwe-')\n                    >= 0 ||\n                    $scope.tabs[tab].osSelection.hwe_kernel.indexOf('ga-')\n                    >= 0)) {\n                    extra.hwe_kernel = $scope.tabs[tab].osSelection.hwe_kernel;\n                }\n            } else if($scope.tabs[tab].actionOption.name === \"set-zone\" &&\n                angular.isNumber($scope.tabs[tab].zoneSelection.id)) {\n                // Set the zone parameter.\n                extra.zone_id = $scope.tabs[tab].zoneSelection.id;\n            } else if($scope.tabs[tab].actionOption.name === \"commission\") {\n                // Set the commission options.\n                extra.enable_ssh = (\n                    $scope.tabs[tab].commissionOptions.enableSSH);\n                extra.skip_networking = (\n                    $scope.tabs[tab].commissionOptions.skipNetworking);\n                extra.skip_storage = (\n                    $scope.tabs[tab].commissionOptions.skipStorage);\n                extra.commissioning_scripts = [];\n                for(i=0;i<$scope.tabs[tab].commissioningSelection.length;i++) {\n                    extra.commissioning_scripts.push(\n                        $scope.tabs[tab].commissioningSelection[i].id);\n                }\n                if($scope.tabs[tab].commissionOptions.updateFirmware) {\n                    extra.commissioning_scripts.push('update_firmware')\n                }\n                if($scope.tabs[tab].commissionOptions.configureHBA) {\n                    extra.commissioning_scripts.push('configure_hba')\n                }\n                if(extra.commissioning_scripts.length === 0) {\n                    // Tell the region not to run any custom commissioning\n                    // scripts.\n                    extra.commissioning_scripts.push('none');\n                }\n                extra.testing_scripts = [];\n                for(i=0;i<$scope.tabs[tab].testSelection.length;i++) {\n                    extra.testing_scripts.push(\n                        $scope.tabs[tab].testSelection[i].id);\n                }\n                if(extra.testing_scripts.length === 0) {\n                    // Tell the region not to run any tests.\n                    extra.testing_scripts.push('none');\n                }\n            } else if($scope.tabs[tab].actionOption.name === \"test\") {\n                if(!$scope.tabs[tab].actionProgress.showing_confirmation) {\n                    var progress = $scope.tabs[tab].actionProgress;\n                    for(i=0;i<$scope.tabs[tab].selectedItems.length;i++) {\n                        if($scope.tabs[tab].selectedItems[i].status_code === 6)\n                        {\n                            progress.showing_confirmation = true;\n                            progress.affected_nodes++;\n                        }\n                    }\n                    if($scope.tabs[tab].actionProgress.affected_nodes != 0) {\n                        return;\n                    }\n                }\n                // Set the test options.\n                extra.enable_ssh = (\n                    $scope.tabs[tab].commissionOptions.enableSSH);\n                extra.testing_scripts = [];\n                for(i=0;i<$scope.tabs[tab].testSelection.length;i++) {\n                    extra.testing_scripts.push(\n                        $scope.tabs[tab].testSelection[i].id);\n                }\n                if(extra.testing_scripts.length === 0) {\n                    // Tell the region not to run any tests.\n                    extra.testing_scripts.push('none');\n                }\n            } else if($scope.tabs[tab].actionOption.name === \"release\") {\n                // Set the release options.\n                extra.erase = (\n                    $scope.tabs[tab].releaseOptions.erase);\n                extra.secure_erase = (\n                    $scope.tabs[tab].releaseOptions.secureErase);\n                extra.quick_erase = (\n                    $scope.tabs[tab].releaseOptions.quickErase);\n            }\n\n            // Setup actionProgress.\n            resetActionProgress(tab);\n            $scope.tabs[tab].actionProgress.total =\n                $scope.tabs[tab].selectedItems.length;\n\n            // Perform the action on all selected items.\n            angular.forEach($scope.tabs[tab].selectedItems, function(node) {\n                $scope.tabs[tab].manager.performAction(\n                    node, $scope.tabs[tab].actionOption.name,\n                    extra).then(function() {\n                        $scope.tabs[tab].actionProgress.completed += 1;\n                        node.action_failed = false;\n                        updateSelectedItems(tab);\n                    }, function(error) {\n                        addErrorToActionProgress(tab, error, node);\n                        node.action_failed = true;\n                        updateSelectedItems(tab);\n                    });\n            });\n        };\n\n        // Returns true when actions are being performed.\n        $scope.hasActionsInProgress = function(tab) {\n            var progress = $scope.tabs[tab].actionProgress;\n            return progress.total > 0 && progress.completed !== progress.total;\n        };\n\n        // Returns true if any of the actions have failed.\n        $scope.hasActionsFailed = function(tab) {\n            return Object.keys(\n                $scope.tabs[tab].actionProgress.errors).length > 0;\n        };\n\n        // Called to when the addHardwareOption has changed.\n        $scope.addHardwareOptionChanged = function() {\n            if($scope.addHardwareOption) {\n                $scope.addHardwareScope.show(\n                    $scope.addHardwareOption.name);\n            }\n        };\n\n        // Called when the add device button is pressed.\n        $scope.addDevice = function() {\n            $scope.addDeviceScope.show();\n        };\n\n        // Called when the cancel add device button is pressed.\n        $scope.cancelAddDevice = function() {\n            $scope.addDeviceScope.cancel();\n        };\n\n        // Get the display text for device ip assignment type.\n        $scope.getDeviceIPAssignment = function(ipAssignment) {\n            return DEVICE_IP_ASSIGNMENT[ipAssignment];\n        };\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        $scope.hasCustomCommissioningScripts = function() {\n            var i;\n            for(i=0;i<$scope.scripts.length;i++) {\n                if($scope.scripts[i].script_type === 0) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Load the required managers for this controller. The ServicesManager\n        // is required by the maasControllerStatus directive that is used\n        // in the partial for this controller.\n        ManagerHelperService.loadManagers($scope, [\n            MachinesManager, DevicesManager, ControllersManager,\n            GeneralManager, ZonesManager, UsersManager, ServicesManager,\n            ScriptsManager, SwitchesManager]).then(function() {\n                $scope.loading = false;\n            });\n\n        // Start polling for the os information.\n        GeneralManager.startPolling($scope, \"osinfo\");\n\n        // Stop polling and save the current filter when the scope is destroyed.\n        $scope.$on(\"$destroy\", function() {\n            $interval.cancel($scope.statusPoll);\n            GeneralManager.stopPolling($scope, \"osinfo\");\n            SearchService.storeFilters(\"nodes\", $scope.tabs.nodes.filters);\n            SearchService.storeFilters(\"devices\", $scope.tabs.devices.filters);\n            SearchService.storeFilters(\n                \"controllers\", $scope.tabs.controllers.filters);\n            SearchService.storeFilters(\n                \"switches\", $scope.tabs.switches.filters);\n        });\n\n        // Restore the filters if any saved.\n        var nodesFilter = SearchService.retrieveFilters(\"nodes\");\n        if(angular.isObject(nodesFilter)) {\n            $scope.tabs.nodes.search = SearchService.filtersToString(\n                nodesFilter);\n            $scope.updateFilters(\"nodes\");\n        }\n        var devicesFilter = SearchService.retrieveFilters(\"devices\");\n        if(angular.isObject(devicesFilter)) {\n            $scope.tabs.devices.search = SearchService.filtersToString(\n                devicesFilter);\n            $scope.updateFilters(\"devices\");\n        }\n        var controllersFilter = SearchService.retrieveFilters(\"controllers\");\n        if(angular.isObject(controllersFilter)) {\n            $scope.tabs.controllers.search = SearchService.filtersToString(\n                controllersFilter);\n            $scope.updateFilters(\"controllers\");\n        }\n        var switchesFilter = SearchService.retrieveFilters(\"switches\");\n        if(angular.isObject(switchesFilter)) {\n            $scope.tabs.switches.search = SearchService.filtersToString(\n                switchesFilter);\n            $scope.updateFilters(\"switches\");\n        }\n\n\n        // Switch to the specified tab, if specified.\n        if($routeParams.tab === \"nodes\" || $routeParams.tab === \"devices\" ||\n                $routeParams.tab === \"controllers\" ||\n                $routeParams.tab === \"switches\") {\n            $scope.toggleTab($routeParams.tab);\n        }\n\n        // Set the query if the present in $routeParams.\n        var query = $routeParams.query;\n        if(angular.isString(query)) {\n            $scope.tabs[$scope.currentpage].search = query;\n            $scope.updateFilters($scope.currentpage);\n        }\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/nodes_list.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Node Details Controller\n */\n\nangular.module('MAAS').controller('PodDetailsController', [\n    '$scope', '$rootScope', '$location', '$routeParams',\n    'PodsManager', 'GeneralManager', 'UsersManager', 'DomainsManager',\n    'ZonesManager', 'ManagerHelperService', 'ErrorService', function(\n        $scope, $rootScope, $location, $routeParams,\n        PodsManager, GeneralManager, UsersManager, DomainsManager,\n        ZonesManager, ManagerHelperService, ErrorService) {\n\n        // Set title and page.\n        $rootScope.title = \"Loading...\";\n        $rootScope.page = \"pods\";\n\n        // Initial values.\n        $scope.loaded = false;\n        $scope.pod = null;\n        $scope.podManager = PodsManager;\n        $scope.action = {\n          option: null,\n          options: [\n            {\n              name: 'refresh',\n              title: 'Refresh',\n              sentence: 'refresh',\n              operation: angular.bind(PodsManager, PodsManager.refresh)\n            },\n            {\n              name: 'delete',\n              title: 'Delete',\n              sentence: 'delete',\n              operation: angular.bind(PodsManager, PodsManager.deleteItem)\n            }\n          ],\n          inProgress: false,\n          error: null\n        };\n        $scope.compose = {\n          action: {\n            name: 'compose',\n            title: 'Compose',\n            sentence: 'compose'\n          },\n          obj: {\n            storage: [{\n              type: 'local',\n              size: 8,\n              tags: [],\n              boot: true\n            }]\n          }\n        };\n        $scope.powerTypes = GeneralManager.getData(\"power_types\");\n        $scope.domains = DomainsManager.getItems();\n        $scope.zones = ZonesManager.getItems();\n        $scope.section = {\n          area: 'summary'\n        };\n        $scope.machinesSearch = 'pod-id:=invalid';\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        // Return true if there is an action error.\n        $scope.isActionError = function() {\n            return $scope.action.error !== null;\n        };\n\n        // Called when the action.option has changed.\n        $scope.actionOptionChanged = function() {\n            // Clear the action error.\n            $scope.action.error = null;\n        };\n\n        // Cancel the action.\n        $scope.actionCancel = function() {\n            $scope.action.option = null;\n            $scope.action.error = null;\n        };\n\n        // Perform the action.\n        $scope.actionGo = function() {\n            $scope.action.inProgress = true;\n            $scope.action.option.operation($scope.pod).then(function() {\n                  // If the action was delete, then go back to listing.\n                  if($scope.action.option.name === \"delete\") {\n                      $location.path(\"/pods\");\n                  }\n                  $scope.action.inProgress = false;\n                  $scope.action.option = null;\n                  $scope.action.error = null;\n              }, function(error) {\n                  $scope.action.inProgress = false;\n                  $scope.action.error = error;\n              });\n        };\n\n        // Return the title of the pod type.\n        $scope.getPodTypeTitle = function() {\n            var i;\n            for(i = 0; i < $scope.powerTypes.length; i++) {\n                var powerType = $scope.powerTypes[i];\n                if(powerType.name === $scope.pod.type) {\n                    return powerType.description;\n                }\n            }\n            return $scope.pod.type;\n        };\n\n        // Returns true if the pod is composable.\n        $scope.canCompose = function() {\n            if(angular.isObject($scope.pod)) {\n                return ($scope.isSuperUser() &&\n                    $scope.pod.capabilities.indexOf('composable') >= 0);\n            } else {\n                return false;\n            }\n        };\n\n        // Opens the compose action menu.\n        $scope.composeMachine = function() {\n            $scope.action.option = $scope.compose.action;\n        };\n\n        // Called before the compose params is sent over the websocket.\n        $scope.composePreProcess = function(params) {\n            params = angular.copy(params);\n            params.id = $scope.pod.id;\n            // Sort boot disk first.\n            var sorted = $scope.compose.obj.storage.sort(function(a, b) {\n              if(a.boot === b.boot) {\n                return 0;\n              } else if(a.boot && !b.boot) {\n                return -1;\n              } else {\n                return 1;\n              }\n            });\n            // Create the storage constraint.\n            var storage = [];\n            angular.forEach(sorted, function(disk, idx) {\n              var constraint = idx + ':' + disk.size;\n              var tags = disk.tags.map(function(tag) {\n                return tag.text;\n              });\n              tags.splice(0, 0, disk.type);\n              constraint += '(' + tags.join(',') + ')';\n              storage.push(constraint);\n            });\n            params.storage = storage.join(',');\n            return params;\n        };\n\n        // Called to cancel composition.\n        $scope.cancelCompose = function() {\n          $scope.compose.obj = {\n            storage: [{\n              type: 'local',\n              size: 8,\n              tags: [],\n              boot: true\n            }]\n          };\n          $scope.action.option = null;\n        };\n\n        // Add another storage device.\n        $scope.composeAddStorage = function() {\n          var storage = {\n            type: 'local',\n            size: 8,\n            tags: [],\n            boot: false\n          };\n          if($scope.pod.capabilities.indexOf('iscsi_storage') >= 0) {\n            storage.type = 'iscsi';\n          }\n          $scope.compose.obj.storage.push(storage);\n        };\n\n        // Change which disk is the boot disk.\n        $scope.composeSetBootDisk = function(storage) {\n          angular.forEach($scope.compose.obj.storage, function(disk) {\n            disk.boot = false;\n          });\n          storage.boot = true;\n        };\n\n        // Remove a disk from storage config.\n        $scope.composeRemoveDisk = function(storage) {\n          var idx = $scope.compose.obj.storage.indexOf(storage);\n          if(idx >= 0) {\n            $scope.compose.obj.storage.splice(idx, 1);\n          }\n        };\n\n        // Start watching key fields.\n        $scope.startWatching = function() {\n            $scope.$watch(\"pod.name\", function() {\n                $rootScope.title = 'Pod ' + $scope.pod.name;\n            });\n            $scope.$watch(\"pod.capabilities\", function() {\n                // Show the composable action if the pod supports composition.\n                var idx = $scope.action.options.indexOf(\n                    $scope.compose.action);\n                if(!$scope.canCompose()) {\n                    if(idx >= 0) {\n                        $scope.action.options.splice(idx, 1);\n                    }\n                } else {\n                    if(idx === -1) {\n                        $scope.action.options.splice(\n                            0, 0, $scope.compose.action);\n                    }\n                }\n            });\n            $scope.$watch(\"action.option\", function(now, then) {\n                // When the compose action is selected set the default\n                // parameters.\n                if(now && now.name === 'compose') {\n                    if(!then || then.name !== 'compose') {\n                        $scope.compose.obj.domain = (\n                            DomainsManager.getDefaultDomain().id);\n                        $scope.compose.obj.zone = (\n                            ZonesManager.getDefaultZone().id);\n                    }\n                }\n            });\n        };\n\n        // Load all the required managers.\n        ManagerHelperService.loadManagers($scope, [\n            PodsManager, GeneralManager, UsersManager,\n            DomainsManager, ZonesManager]).then(function() {\n            // Start polling from the general manager.\n            GeneralManager.startPolling($scope, \"power_types\");\n\n            // Possibly redirected from another controller that already had\n            // this pod set to active. Only call setActiveItem if not already\n            // the activeItem.\n            var activePod = PodsManager.getActiveItem();\n            if(angular.isObject(activePod) &&\n                activePod.id === parseInt($routeParams.id, 10)) {\n                $scope.pod = activePod;\n                $scope.loaded = true;\n                $scope.machinesSearch = 'pod-id:=' + $scope.pod.id;\n                $scope.startWatching();\n            } else {\n                PodsManager.setActiveItem(\n                    parseInt($routeParams.id, 10)).then(function(pod) {\n                        $scope.pod = pod;\n                        $scope.loaded = true;\n                        $scope.machinesSearch = 'pod-id:=' + $scope.pod.id;\n                        $scope.startWatching();\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n            }\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/pod_details.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Pods List Controller\n */\n\nangular.module('MAAS').controller('PodsListController', [\n    '$scope', '$rootScope',\n    'PodsManager', 'UsersManager', 'GeneralManager', 'ManagerHelperService',\n    function($scope, $rootScope,\n        PodsManager, UsersManager, GeneralManager, ManagerHelperService) {\n\n        // Set title and page.\n        $rootScope.title = \"Pods\";\n        $rootScope.page = \"pods\";\n\n        // Set initial values.\n        $scope.podManager = PodsManager;\n        $scope.pods = PodsManager.getItems();\n        $scope.loading = true;\n\n        $scope.filteredItems = [];\n        $scope.selectedItems = PodsManager.getSelectedItems();\n        $scope.predicate = 'name';\n        $scope.allViewableChecked = false;\n        $scope.action = {\n          option: null,\n          options: [\n            {\n              name: 'refresh',\n              title: 'Refresh',\n              sentence: 'refresh',\n              operation: angular.bind(PodsManager, PodsManager.refresh)\n            },\n            {\n              name: 'delete',\n              title: 'Delete',\n              sentence: 'delete',\n              operation: angular.bind(PodsManager, PodsManager.deleteItem)\n            }\n          ],\n          progress: {\n              total: 0,\n              completed: 0,\n              errors: 0\n          }\n        };\n        $scope.add = {\n          open: false,\n          obj: {}\n        };\n        $scope.powerTypes = GeneralManager.getData(\"power_types\");\n\n        // Called to update `allViewableChecked`.\n        function updateAllViewableChecked() {\n            // Not checked when no pods.\n            if($scope.pods.length === 0) {\n                $scope.allViewableChecked = false;\n                return;\n            }\n\n            // Loop through all filtered pods and see if all are checked.\n            var i;\n            for(i = 0; i < $scope.pods.length; i++) {\n                if(!$scope.pods[i].$selected) {\n                    $scope.allViewableChecked = false;\n                    return;\n                }\n            }\n            $scope.allViewableChecked = true;\n        }\n\n        function clearAction() {\n            resetActionProgress();\n            $scope.action.option = null;\n        }\n\n        // Clear the action if required.\n        function shouldClearAction() {\n            if($scope.selectedItems.length === 0) {\n                clearAction();\n                if($scope.action.option) {\n                    $scope.action.option = null;\n                }\n            }\n        }\n\n        // Reset actionProgress to zero.\n        function resetActionProgress() {\n            var progress = $scope.action.progress;\n            progress.completed = progress.total = progress.errors = 0;\n            angular.forEach($scope.pods, function(pod) {\n                delete pod.action_failed;\n            });\n        }\n\n        // After an action has been performed check if we can leave all pods\n        // selected or if an error occured and we should only show the failed\n        // pods.\n        function updateSelectedItems() {\n            if(!$scope.hasActionsFailed()) {\n                if(!$scope.hasActionsInProgress()) {\n                     clearAction();\n                }\n                return;\n            }\n            angular.forEach($scope.pods, function(pod) {\n                if(pod.action_failed === false) {\n                    PodsManager.unselectItem(pod.id);\n                }\n            });\n            shouldClearAction();\n        }\n\n        // Mark a pod as selected or unselected.\n        $scope.toggleChecked = function(pod) {\n            if(PodsManager.isSelected(pod.id)) {\n                PodsManager.unselectItem(pod.id);\n            } else {\n                PodsManager.selectItem(pod.id);\n            }\n            updateAllViewableChecked();\n            shouldClearAction();\n        };\n\n        // Select all viewable pods or deselect all viewable pods.\n        $scope.toggleCheckAll = function() {\n            if($scope.allViewableChecked) {\n                angular.forEach($scope.pods, function(pod) {\n                    PodsManager.unselectItem(pod.id);\n                });\n            } else {\n                angular.forEach($scope.pods, function(pod) {\n                    PodsManager.selectItem(pod.id);\n                });\n            }\n            updateAllViewableChecked();\n            shouldClearAction();\n        };\n\n        // When the pods change update if all check buttons should be\n        // checked or not.\n        $scope.$watchCollection(\"pods\", function() {\n            updateAllViewableChecked();\n        });\n\n        // Sorts the table by predicate.\n        $scope.sortTable = function(predicate) {\n            $scope.predicate = predicate;\n            $scope.reverse = !$scope.reverse;\n        };\n\n        // Called when the current action is cancelled.\n        $scope.actionCancel = function() {\n            resetActionProgress();\n            $scope.action.option = null;\n        };\n\n        // Perform the action on all pods.\n        $scope.actionGo = function() {\n            var extra = {};\n\n            // Setup actionProgress.\n            resetActionProgress();\n            $scope.action.progress.total = $scope.selectedItems.length;\n\n            // Perform the action on all selected items.\n            var operation = $scope.action.option.operation;\n            angular.forEach($scope.selectedItems, function(pod) {\n                operation(pod).then(function() {\n                        $scope.action.progress.completed += 1;\n                        pod.action_failed = false;\n                        updateSelectedItems();\n                    }, function(error) {\n                        $scope.action.progress.errors += 1;\n                        pod.action_error = error;\n                        pod.action_failed = true;\n                        updateSelectedItems();\n                    });\n            });\n        };\n\n        // Returns true when actions are being performed.\n        $scope.hasActionsInProgress = function() {\n            var progress = $scope.action.progress;\n            return progress.total > 0 && (\n                progress.completed + progress.errors) !== progress.total;\n        };\n\n        // Returns true if any of the actions have failed.\n        $scope.hasActionsFailed = function() {\n            var progress = $scope.action.progress;\n            return progress.errors > 0;\n        };\n\n        // Called when the add pod button is pressed.\n        $scope.addPod = function() {\n            $scope.add.open = true;\n        };\n\n        // Called when the cancel add pod button is pressed.\n        $scope.cancelAddPod = function() {\n            $scope.add.open = false;\n            $scope.add.obj = {};\n        };\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        // Return the title of the power type.\n        $scope.getPowerTypeTitle = function(power_type) {\n            var i;\n            for(i = 0; i < $scope.powerTypes.length; i++) {\n                var powerType = $scope.powerTypes[i];\n                if(powerType.name === power_type) {\n                    return powerType.description;\n                }\n            }\n            return power_type;\n        };\n\n        // Load the required managers for this controller.\n        ManagerHelperService.loadManagers($scope, [\n            PodsManager, UsersManager, GeneralManager]).then(\n            function() {\n                $scope.loading = false;\n            });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/pods_list.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Preferences Controller\n */\n\nangular.module('MAAS').controller('PreferencesController', [\n    '$scope', 'UsersManager', 'ManagerHelperService',\n    function(\n        $scope, UsersManager, ManagerHelperService) {\n            $scope.loading = true;\n            ManagerHelperService.loadManager(\n                $scope, UsersManager).then(function() {\n                    $scope.loading = false;\n                });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/prefs.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Settings Controller\n */\n\nangular.module('MAAS').controller('SettingsController', [\n    '$scope', '$rootScope', '$routeParams', 'PackageRepositoriesManager',\n    'DHCPSnippetsManager', 'MachinesManager', 'ControllersManager',\n    'DevicesManager', 'SubnetsManager', 'GeneralManager',\n    'ManagerHelperService',\n    function($scope, $rootScope, $routeParams, PackageRepositoriesManager,\n             DHCPSnippetsManager, MachinesManager, ControllersManager,\n             DevicesManager, SubnetsManager, GeneralManager,\n             ManagerHelperService) {\n\n        // Set the title and page.\n        $rootScope.title = \"Loading...\";\n        $rootScope.page = \"settings\";\n\n        // Initial values.\n        $scope.loading = true;\n        $scope.snippetsManager = DHCPSnippetsManager;\n        $scope.snippets = DHCPSnippetsManager.getItems();\n        $scope.subnets = SubnetsManager.getItems();\n        $scope.machines = MachinesManager.getItems();\n        $scope.devices = DevicesManager.getItems();\n        $scope.controllers = ControllersManager.getItems();\n        $scope.known_architectures =\n            GeneralManager.getData(\"known_architectures\");\n        $scope.pockets_to_disable =\n            GeneralManager.getData(\"pockets_to_disable\");\n        $scope.components_to_disable =\n            GeneralManager.getData(\"components_to_disable\");\n        $scope.packageRepositoriesManager = PackageRepositoriesManager;\n        $scope.repositories =\n            PackageRepositoriesManager.getItems();\n        $scope.newSnippet = null;\n        $scope.editSnippet = null;\n        $scope.deleteSnippet = null;\n        $scope.snippetTypes = [\"Global\", \"Subnet\", \"Node\"];\n        $scope.newRepository = null;\n        $scope.editRepository = null;\n        $scope.deleteRepository = null;\n\n        // Called when the enabled toggle is changed.\n        $scope.repositoryEnabledToggle = function(repository) {\n            PackageRepositoriesManager.updateItem(repository);\n        };\n\n        // Called to enter remove mode for a repository.\n        $scope.repositoryEnterRemove = function(repository) {\n            $scope.newRepository = null;\n            $scope.editRepository = null;\n            $scope.deleteRepository = repository;\n        };\n\n        // Called to exit remove mode for a repository.\n        $scope.repositoryExitRemove = function() {\n            $scope.deleteRepository = null;\n        };\n\n        // Called to confirm the removal of a repository.\n        $scope.repositoryConfirmRemove = function() {\n            PackageRepositoriesManager.deleteItem(\n                $scope.deleteRepository).then(function() {\n                    $scope.repositoryExitRemove();\n                });\n        };\n\n        // Return true if the repository is a PPA.\n        $scope.isPPA = function(data) {\n            if(!angular.isObject(data)) {\n                return false;\n            }\n            if(!angular.isString(data.url)) {\n                return false;\n            }\n            return data.url.indexOf(\"ppa:\") === 0 ||\n                data.url.indexOf(\"ppa.launchpad.net\") > -1;\n        };\n\n        // Return true if the repository is a mirror.\n        $scope.isMirror = function(data) {\n            if(!angular.isObject(data)) {\n                return false;\n            }\n            if(!angular.isString(data.name)) {\n                return false;\n            }\n            return data.name === \"main_archive\" ||\n                data.name === \"ports_archive\";\n        };\n\n        // Called to enter edit mode for a repository.\n        $scope.repositoryEnterEdit = function(repository) {\n            $scope.newRepository = null;\n            $scope.deleteRepository = null;\n            $scope.editRepository = repository;\n        };\n\n        // Called to exit edit mode for a repository.\n        $scope.repositoryExitEdit = function() {\n            $scope.editRepository = null;\n        };\n\n        // Called to start adding a new repository.\n        $scope.repositoryAdd = function(isPPA) {\n            var repo = {\n                name: \"\",\n                enabled: true,\n                url: \"\",\n                key: \"\",\n                arches: [\"i386\", \"amd64\"],\n                distributions: [],\n                components: []\n            };\n            if (isPPA) {\n                repo.url = \"ppa:\";\n            }\n            $scope.newRepository = repo;\n        };\n\n        // Called to cancel addind a new repository.\n        $scope.repositoryAddCancel = function() {\n            $scope.newRepository = null;\n        };\n\n        // Return the node from either the machines, devices, or controllers\n        // manager.\n        function getNode(system_id) {\n            var node = MachinesManager.getItemFromList(system_id);\n            if(angular.isObject(node)) {\n                return node;\n            }\n            node = DevicesManager.getItemFromList(system_id);\n            if(angular.isObject(node)) {\n                return node;\n            }\n            node = ControllersManager.getItemFromList(system_id);\n            if(angular.isObject(node)) {\n                return node;\n            }\n        }\n\n        // Return the name of the subnet.\n        $scope.getSubnetName = function(subnet) {\n            return SubnetsManager.getName(subnet);\n        };\n\n        // Return the text for the type of snippet.\n        $scope.getSnippetTypeText = function(snippet) {\n            if(angular.isString(snippet.node)) {\n                return \"Node\";\n            } else if(angular.isNumber(snippet.subnet)) {\n                return \"Subnet\";\n            } else {\n                return \"Global\";\n            }\n        };\n\n        // Return the object the snippet applies to.\n        $scope.getSnippetAppliesToObject = function(snippet) {\n            if(angular.isString(snippet.node)) {\n                return getNode(snippet.node);\n            } else if(angular.isNumber(snippet.subnet)) {\n                return SubnetsManager.getItemFromList(snippet.subnet);\n            }\n        };\n\n        // Return the applies to text that is disabled in none edit mode.\n        $scope.getSnippetAppliesToText = function(snippet) {\n            var obj = $scope.getSnippetAppliesToObject(snippet);\n            if(angular.isString(snippet.node) && angular.isObject(obj)) {\n                return obj.fqdn;\n            } else if(angular.isNumber(snippet.subnet) &&\n                angular.isObject(obj)) {\n                return SubnetsManager.getName(obj);\n            } else {\n                return \"\";\n            }\n        };\n\n        // Called to enter remove mode for a DHCP snippet.\n        $scope.snippetEnterRemove = function(snippet) {\n            $scope.newSnippet = null;\n            $scope.editSnippet = null;\n            $scope.deleteSnippet = snippet;\n        };\n\n        // Called to exit remove mode for a DHCP snippet.\n        $scope.snippetExitRemove = function() {\n            $scope.deleteSnippet = null;\n        };\n\n        // Called to confirm the removal of a snippet.\n        $scope.snippetConfirmRemove = function() {\n            DHCPSnippetsManager.deleteItem($scope.deleteSnippet).then(\n                function() {\n                    $scope.snippetExitRemove();\n                });\n        };\n\n        // Called to enter edit mode for a DHCP snippet.\n        $scope.snippetEnterEdit = function(snippet) {\n            $scope.newSnippet = null;\n            $scope.deleteSnippet = null;\n            $scope.editSnippet = snippet;\n            $scope.editSnippet.type = $scope.getSnippetTypeText(snippet);\n        };\n\n        // Called to exit edit mode for a DHCP snippet.\n        $scope.snippetExitEdit = function() {\n            $scope.editSnippet = null;\n        };\n\n        // Called when the active toggle is changed.\n        $scope.snippetToggle = function(snippet) {\n            DHCPSnippetsManager.updateItem(snippet).then(null,\n                function(error) {\n                    // Revert state change and clear toggling.\n                    snippet.enabled = !snippet.enabled;\n                    console.log(error);\n                });\n        };\n\n        // Called to start adding a new snippet.\n        $scope.snippetAdd = function() {\n            $scope.editSnippet = null;\n            $scope.deleteSnippet = null;\n            $scope.newSnippet = {\n                name: \"\",\n                type: \"Global\",\n                enabled: true\n            };\n        };\n\n        // Called to cancel addind a new snippet.\n        $scope.snippetAddCancel = function() {\n            $scope.newSnippet = null;\n        };\n\n        // Setup page variables based on section.\n        if($routeParams.section === \"dhcp\") {\n            $rootScope.title = \"DHCP snippets\";\n            $scope.currentpage = 'dhcp';\n        }\n        else if($routeParams.section === \"repositories\") {\n            $rootScope.title = \"Package repositories\";\n            $scope.currentpage = 'repositories';\n        }\n\n        // Load the required managers.\n        ManagerHelperService.loadManagers($scope, [\n                PackageRepositoriesManager, DHCPSnippetsManager,\n                MachinesManager, DevicesManager, ControllersManager,\n                SubnetsManager, GeneralManager]).then(\n            function() {\n                $scope.loading = false;\n            });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/settings.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Space Details Controller\n */\n\nangular.module('MAAS').controller('SpaceDetailsController', [\n    '$scope', '$rootScope', '$routeParams', '$filter', '$location',\n    'SpacesManager', 'VLANsManager', 'SubnetsManager', 'FabricsManager',\n    'UsersManager', 'ManagerHelperService', 'ErrorService',\n    function(\n        $scope, $rootScope, $routeParams, $filter, $location,\n        SpacesManager, VLANsManager, SubnetsManager, FabricsManager,\n        UsersManager, ManagerHelperService, ErrorService) {\n\n        // Set title and page.\n        $rootScope.title = \"Loading...\";\n\n        // Note: this value must match the top-level tab, in order for\n        // highlighting to occur properly.\n        $rootScope.page = \"networks\";\n\n        // Initial values.\n        $scope.space = null;\n        $scope.spaceManager = SpacesManager;\n        $scope.subnets = SubnetsManager.getItems();\n        $scope.loaded = false;\n        $scope.editSummary = false;\n\n        // Updates the page title.\n        function updateTitle() {\n            $rootScope.title = $scope.space.name;\n        }\n\n        // Called when the space has been loaded.\n        function spaceLoaded(space) {\n            $scope.space = space;\n            updateTitle();\n            $scope.predicate = \"[subnet_name, vlan_name]\";\n            $scope.$watch(\"subnets\", updateSubnets, true);\n            updateSubnets();\n            $scope.loaded = true;\n        }\n\n        // Generate a table that can easily be rendered in the view.\n        function updateSubnets() {\n            var rows = [];\n            angular.forEach($filter('filter')(\n                    $scope.subnets, {space:$scope.space.id}, true),\n                    function(subnet) {\n                var vlan = VLANsManager.getItemFromList(subnet.vlan);\n                var fabric = FabricsManager.getItemFromList(vlan.fabric);\n                var row = {\n                    vlan: vlan,\n                    vlan_name: VLANsManager.getName(vlan),\n                    subnet: subnet,\n                    subnet_name: SubnetsManager.getName(subnet),\n                    fabric: fabric,\n                    fabric_name: fabric.name\n                };\n                rows.push(row);\n            });\n            $scope.rows = rows;\n        }\n\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        // Called when the \"edit\" button is cliked in the space summary\n        $scope.enterEditSummary = function() {\n            $scope.editSummary = true;\n        };\n\n        // Called when the \"cancel\" button is cliked in the space summary\n        $scope.exitEditSummary = function() {\n            $scope.editSummary = false;\n        };\n\n        // Return true if this is the default Space\n        $scope.isDefaultSpace = function() {\n            if(!angular.isObject($scope.space)) {\n                return false;\n            }\n            return $scope.space.id === 0;\n        };\n\n        // Called to check if the space can be deleted.\n        $scope.canBeDeleted = function() {\n            if(angular.isObject($scope.space)) {\n                return $scope.space.subnet_ids.length === 0;\n            }\n            return false;\n        };\n\n        // Called when the delete space button is pressed.\n        $scope.deleteButton = function() {\n            $scope.error = null;\n            $scope.confirmingDelete = true;\n        };\n\n        // Called when the cancel delete space button is pressed.\n        $scope.cancelDeleteButton = function() {\n            $scope.confirmingDelete = false;\n        };\n\n        // Called when the confirm delete space button is pressed.\n        $scope.deleteConfirmButton = function() {\n            SpacesManager.deleteSpace($scope.space).then(function() {\n                $scope.confirmingDelete = false;\n                $location.path(\"/networks\");\n                $location.search('by', 'space');\n            }, function(error) {\n                $scope.error =\n                    ManagerHelperService.parseValidationError(error);\n            });\n        };\n\n        // Load all the required managers.\n        ManagerHelperService.loadManagers($scope, [\n            SpacesManager, SubnetsManager, VLANsManager, FabricsManager,\n            UsersManager]).then(function() {\n            // Possibly redirected from another controller that already had\n            // this space set to active. Only call setActiveItem if not\n            // already the activeItem.\n            var activeSpace = SpacesManager.getActiveItem();\n            var requestedSpace = parseInt($routeParams.space_id, 10);\n            if(isNaN(requestedSpace)) {\n                ErrorService.raiseError(\"Invalid space identifier.\");\n            } else if(angular.isObject(activeSpace) &&\n                activeSpace.id === requestedSpace) {\n                spaceLoaded(activeSpace);\n            } else {\n                SpacesManager.setActiveItem(\n                    requestedSpace).then(function(space) {\n                        spaceLoaded(space);\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n            }\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/space_details.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Subnet Details Controller\n */\n\nangular.module('MAAS').filter('filterSource', ['ValidationService',\n    function() {\n        return function(subnets, source) {\n            var filtered = [];\n            angular.forEach(subnets, function(subnet) {\n                if(subnet.id !== source.id &&\n                    subnet.version === source.version) {\n                    filtered.push(subnet);\n                }\n            });\n            return filtered;\n        };\n    }]);\n\nangular.module('MAAS').controller('SubnetDetailsController', [\n    '$scope', '$rootScope', '$routeParams', '$filter', '$location',\n    'ConfigsManager', 'SubnetsManager', 'SpacesManager', 'VLANsManager',\n    'UsersManager', 'FabricsManager', 'StaticRoutesManager',\n    'ManagerHelperService', 'ErrorService', 'ConverterService',\n    function(\n        $scope, $rootScope, $routeParams, $filter, $location, ConfigsManager,\n        SubnetsManager, SpacesManager, VLANsManager, UsersManager,\n        FabricsManager, StaticRoutesManager, ManagerHelperService, ErrorService,\n        ConverterService) {\n\n        // Set title and page.\n        $rootScope.title = \"Loading...\";\n\n        // Note: this value must match the top-level tab, in order for\n        // highlighting to occur properly.\n        $rootScope.page = \"networks\";\n\n        // Initial values.\n        $scope.loaded = false;\n        $scope.subnet = null;\n        $scope.editSummary = false;\n        $scope.active_discovery_data = null;\n        $scope.active_discovery_interval = null;\n        $scope.subnets = SubnetsManager.getItems();\n        $scope.subnetManager = SubnetsManager;\n        $scope.staticRoutes = StaticRoutesManager.getItems();\n        $scope.staticRoutesManager = StaticRoutesManager;\n        $scope.space = null;\n        $scope.vlans = VLANsManager.getItems();\n        $scope.fabrics = FabricsManager.getItems();\n        $scope.actionError = null;\n        $scope.actionOption = null;\n        $scope.actionOptions = [];\n        $scope.reverse = false;\n        $scope.newStaticRoute = null;\n        $scope.editStaticRoute = null;\n        $scope.deleteStaticRoute = null;\n\n        $scope.MAP_SUBNET_ACTION = {\n            name: \"map_subnet\",\n            title: \"Map subnet\"\n        };\n        $scope.DELETE_ACTION = {\n            name: \"delete\",\n            title: \"Delete\"\n        };\n\n        // Alloc type mapping.\n        var ALLOC_TYPES = {\n            0: 'Automatic',\n            1: 'Static',\n            4: 'User reserved',\n            5: 'DHCP',\n            6: 'Observed'\n        };\n\n        // Node type mapping.\n        var NODE_TYPES = {\n            0: 'Machine',\n            1: 'Device',\n            2: 'Rack controller',\n            3: 'Region controller',\n            4: 'Rack and region controller',\n            5: 'Chassis',\n            6: 'Storage'\n        };\n\n        // Updates the page title.\n        function updateTitle() {\n            subnet = $scope.subnet;\n            if(subnet && subnet.cidr) {\n                $rootScope.title = subnet.cidr;\n                if(subnet.name && subnet.cidr !== subnet.name) {\n                    $rootScope.title += \" (\" +subnet.name + \")\";\n                }\n            }\n        }\n\n        // Update the IP version of the CIDR.\n        function updateIPVersion() {\n            var ip = $scope.subnet.cidr.split('/')[0];\n            if(ip.indexOf(':') === -1) {\n                $scope.ipVersion = 4;\n            } else {\n                $scope.ipVersion = 6;\n            }\n        }\n\n        // Sort for IP address.\n        $scope.ipSort = function(ipAddress) {\n            if($scope.ipVersion === 4) {\n                return ConverterService.ipv4ToInteger(ipAddress.ip);\n            } else {\n                return ConverterService.ipv6Expand(ipAddress.ip);\n            }\n        };\n\n        // Set default predicate to the ipSort function.\n        $scope.predicate = $scope.ipSort;\n\n        // Return the name of the allocation type.\n        $scope.getAllocType = function(allocType) {\n            var str = ALLOC_TYPES[allocType];\n            if(angular.isString(str)) {\n                return str;\n            } else {\n                return \"Unknown\";\n            }\n        };\n\n        $scope.getSubnetCIDR = function(destId) {\n            return SubnetsManager.getItemFromList(destId).cidr;\n        };\n\n        // Sort based on the name of the allocation type.\n        $scope.allocTypeSort = function(ipAddress) {\n            return $scope.getAllocType(ipAddress.alloc_type);\n        };\n\n        // Return the name of the node type for the given IP.\n        $scope.getUsageForIP = function(ip) {\n            if(angular.isObject(ip.node_summary)) {\n                var nodeType = ip.node_summary.node_type;\n                var str = NODE_TYPES[nodeType];\n                if(angular.isString(str)) {\n                    return str;\n                } else {\n                    return \"Unknown\";\n                }\n            } else if(angular.isObject(ip.bmcs)) {\n                return \"BMC\";\n            } else if(angular.isObject(ip.dns_records)) {\n                return \"DNS\";\n            } else {\n                return \"Unknown\";\n            }\n        };\n\n        // Sort based on the node type string.\n        $scope.nodeTypeSort = function(ipAddress) {\n            return $scope.getUsageForIP(ipAddress);\n        };\n\n        // Sort based on the owner name.\n        $scope.ownerSort = function(ipAddress) {\n            var owner = ipAddress.user;\n            if(angular.isString(owner) && owner.length > 0) {\n                return owner;\n            } else {\n                return \"MAAS\";\n            }\n        };\n\n        // Called to change the sort order of the IP table.\n        $scope.sortIPTable = function(predicate) {\n            $scope.predicate = predicate;\n            $scope.reverse = !$scope.reverse;\n        };\n\n        // Return the name of the VLAN.\n        $scope.getVLANName = function(vlan) {\n           return VLANsManager.getName(vlan);\n        };\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        $scope.actionRetry = function() {\n            // When we clear actionError, the HTML will be re-rendered to\n            // hide the error message (and the user will be taken back to\n            // the previous action they were performing, since we reset\n            // the actionOption in the error handler.\n            $scope.actionError = null;\n        };\n\n        // Perform the action.\n        $scope.actionGo = function() {\n            if($scope.actionOption.name === \"map_subnet\") {\n                SubnetsManager.scanSubnet($scope.subnet).then(function(result) {\n                    if(result && result.scan_started_on.length === 0) {\n                        $scope.actionError =\n                            ManagerHelperService.parseValidationError(\n                                result.result);\n                    } else {\n                        $scope.actionOption = null;\n                        $scope.actionError = null;\n                    }\n                }, function(error) {\n                    $scope.actionError =\n                        ManagerHelperService.parseValidationError(error);\n                });\n            } else if($scope.actionOption.name === \"delete\") {\n                SubnetsManager.deleteSubnet(\n                    $scope.subnet).then(function(result) {\n                        $scope.actionOption = null;\n                        $scope.actionError = null;\n                        $location.path(\"/networks\");\n                    }, function(error) {\n                        $scope.actionError =\n                            ManagerHelperService.parseValidationError(error);\n                });\n            }\n        };\n\n        // Called when a action is selected.\n        $scope.actionChanged = function() {\n            $scope.actionError = null;\n        };\n\n        // Called when the \"Cancel\" button is pressed.\n        $scope.cancelAction = function() {\n            $scope.actionOption = null;\n            $scope.actionError = null;\n        };\n\n        // Called when the managers load to populate the actions the user\n        // is allowed to perform.\n        $scope.updateActions = function() {\n            if(UsersManager.isSuperUser()) {\n                $scope.actionOptions = [\n                    $scope.MAP_SUBNET_ACTION,\n                    $scope.DELETE_ACTION\n                ];\n            } else {\n                $scope.actionOptions = [];\n            }\n        };\n\n        // Called when the \"edit\" button is cliked in the subnet summary\n        $scope.enterEditSummary = function() {\n            $scope.editSummary = true;\n        };\n\n        // Called when the \"cancel\" button is cliked in the subnet summary\n        $scope.exitEditSummary = function() {\n            $scope.editSummary = false;\n        };\n\n        // Called by maas-obj-form before it saves the subnet. The passed\n        // subnet is the object right before its sent over the websocket.\n        $scope.subnetPreSave = function(subnet, changedFields) {\n            // Adjust the subnet object if the fabric changed.\n            if(changedFields.indexOf(\"fabric\") !== -1) {\n                // Fabric changed, the websocket expects VLAN to be updated, so\n                // we set the VLAN to the default VLAN for the new fabric.\n                subnet.vlan = FabricsManager.getItemFromList(\n                    subnet.fabric).default_vlan_id;\n            }\n            return subnet;\n        };\n\n        // Called to start adding a new static route.\n        $scope.addStaticRoute = function() {\n            $scope.editStaticRoute = null;\n            $scope.deleteStaticRoute = null;\n            $scope.newStaticRoute = {\n                source: $scope.subnet.id,\n                gateway_ip: \"\",\n                destination: null,\n                metric: 0\n            };\n        };\n\n        // Cancel adding the new static route.\n        $scope.cancelAddStaticRoute = function() {\n            $scope.newStaticRoute = null;\n        };\n\n        // Return true if the static route is in edit mode.\n        $scope.isStaticRouteInEditMode = function(route) {\n            return $scope.editStaticRoute === route;\n        };\n\n        // Toggle edit mode for the static route.\n        $scope.staticRouteToggleEditMode = function(route) {\n            $scope.newStaticRoute = null;\n            $scope.deleteStaticRoute = null;\n            if($scope.isStaticRouteInEditMode(route)) {\n                $scope.editStaticRoute  = null;\n            } else {\n                $scope.editStaticRoute = route;\n            }\n        };\n\n        // Return true if the static route is in delete mode.\n        $scope.isStaticRouteInDeleteMode = function(route) {\n            return $scope.deleteStaticRoute === route;\n        };\n\n        // Enter delete mode for the static route.\n        $scope.staticRouteEnterDeleteMode = function(route) {\n            $scope.newStaticRoute = null;\n            $scope.editStaticRoute = null;\n            $scope.deleteStaticRoute = route;\n        };\n\n        // Exit delete mode for the statc route.\n        $scope.staticRouteCancelDelete = function() {\n            $scope.deleteStaticRoute = null;\n        };\n\n        // Perform the delete operation on the static route.\n        $scope.staticRouteConfirmDelete = function() {\n            StaticRoutesManager.deleteItem($scope.deleteStaticRoute).then(\n                function() {\n                    $scope.deleteStaticRoute = null;\n                });\n        };\n\n        // Called when the subnet has been loaded.\n        function subnetLoaded(subnet) {\n            $scope.subnet = subnet;\n            $scope.loaded = true;\n\n            updateTitle();\n\n            // Watch the vlan and fabric field so if its changed on the subnet\n            // we make sure that the fabric is updated. It is possible that\n            // fabric is removed from the subnet since it is injected from this\n            // controller, so when it is removed we add it back.\n            var updateFabric = function() {\n                $scope.subnet.fabric = (\n                    VLANsManager.getItemFromList($scope.subnet.vlan).fabric);\n                $scope.subnet.fabric_name = (\n                  FabricsManager.getItemFromList(subnet.fabric).name);\n            };\n            var updateSpace = function() {\n                $scope.space = (\n                    SpacesManager.getItemFromList($scope.subnet.space));\n            };\n            var updateVlan = function() {\n                var vlan = VLANsManager.getItemFromList($scope.subnet.vlan);\n                $scope.subnet.vlan_name = (\n                    VLANsManager.getName(vlan)\n                );\n            };\n\n            $scope.$watch(\"subnet.fabric\", updateFabric);\n            $scope.$watch(\"subnet.fabric_name\", updateFabric);\n            $scope.$watch(\"subnet.vlan\", updateFabric);\n            $scope.$watch(\"subnet.vlan_name\", updateVlan);\n            $scope.$watch(\"subnet.space\", updateSpace);\n            $scope.$watch(\"subnet.cidr\", updateIPVersion);\n        }\n\n        // Load all the required managers.\n        ManagerHelperService.loadManagers($scope, [\n            ConfigsManager, SubnetsManager, SpacesManager, VLANsManager,\n            UsersManager, FabricsManager, StaticRoutesManager\n        ]).then(function() {\n\n            $scope.updateActions();\n            $scope.active_discovery_data = ConfigsManager.getItemFromList(\n                \"active_discovery_interval\");\n            // Find active discovery interval\n            angular.forEach(\n                $scope.active_discovery_data.choices, function(choice) {\n                    if(choice[0] === $scope.active_discovery_data.value) {\n                        $scope.active_discovery_interval = choice[1];\n                    }\n                });\n\n            // Possibly redirected from another controller that already had\n            // this subnet set to active. Only call setActiveItem if not\n            // already the activeItem.\n            var activeSubnet = SubnetsManager.getActiveItem();\n            var requestedSubnet = parseInt($routeParams.subnet_id, 10);\n            if(isNaN(requestedSubnet)) {\n                ErrorService.raiseError(\"Invalid subnet identifier.\");\n            } else if(angular.isObject(activeSubnet) &&\n                activeSubnet.id === requestedSubnet) {\n                subnetLoaded(activeSubnet);\n            } else {\n                SubnetsManager.setActiveItem(\n                    requestedSubnet).then(function(subnet) {\n                        subnetLoaded(subnet);\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n            }\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/subnet_details.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS VLAN Details Controller\n */\n\nangular.module('MAAS').filter('ignoreSelf', function () {\n    return function(objects, self) {\n        var filtered = [];\n        angular.forEach(objects, function(obj) {\n            if(obj !== self) {\n                filtered.push(obj);\n            }\n        });\n        return filtered;\n    };\n});\n\nangular.module('MAAS').controller('VLANDetailsController', [\n    '$scope', '$rootScope', '$routeParams', '$filter', '$location',\n    'VLANsManager', 'SubnetsManager', 'SpacesManager', 'FabricsManager',\n    'ControllersManager', 'UsersManager', 'ManagerHelperService',\n    'ErrorService', 'ValidationService', function(\n        $scope, $rootScope, $routeParams, $filter, $location,\n        VLANsManager, SubnetsManager, SpacesManager, FabricsManager,\n        ControllersManager, UsersManager, ManagerHelperService, ErrorService,\n        ValidationService) {\n        var vm = this;\n\n        var filterByVLAN = $filter('filterByVLAN');\n        var filterControllersByVLAN = $filter('filterControllersByVLAN');\n\n        // Set title and page.\n        $rootScope.title = \"Loading...\";\n\n        // Note: this value must match the top-level tab, in order for\n        // highlighting to occur properly.\n        $rootScope.page = \"networks\";\n\n        vm.PROVIDE_DHCP_ACTION = {\n            // Note: 'title' is set dynamically depending on whether or not\n            // DHCP is already enabled on this VLAN.\n            name: \"enable_dhcp\"\n        };\n        vm.RELAY_DHCP_ACTION = {\n            // Note: 'title' is set ndynamically depending on whether or not\n            // DHCP relay is already enabled on this VLAN.\n            name: \"relay_dhcp\"\n        };\n        vm.DISABLE_DHCP_ACTION = {\n            name: \"disable_dhcp\",\n            title: \"Disable DHCP\"\n        };\n        vm.DELETE_ACTION = {\n            name: \"delete\",\n            title: \"Delete\"\n        };\n\n        // Initial values.\n        vm.loaded = false;\n        vm.vlan = null;\n        vm.title = null;\n        vm.actionOption = null;\n        vm.actionOptions = [];\n        vm.vlanManager = VLANsManager;\n        vm.vlans = VLANsManager.getItems();\n        vm.subnets = SubnetsManager.getItems();\n        vm.spaces = SpacesManager.getItems();\n        vm.fabrics = FabricsManager.getItems();\n        vm.controllers = ControllersManager.getItems();\n        vm.actionError = null;\n        vm.relatedSubnets = [];\n        vm.relatedControllers = [];\n        vm.provideDHCPAction = {};\n        vm.primaryRack = null;\n        vm.secondaryRack = null;\n        vm.editSummary = false;\n\n\n        // Return true if the authenticated user is super user.\n        vm.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        // Called when the \"edit\" button is cliked in the vlan summary\n        vm.enterEditSummary = function() {\n            vm.editSummary = true;\n        };\n\n        // Called when the \"cancel\" button is cliked in the vlan summary\n        vm.exitEditSummary = function() {\n            vm.editSummary = false;\n        };\n\n        // Get the space name for the VLAN.\n        vm.getSpaceName = function() {\n            var space = SpacesManager.getItemFromList(vm.vlan.space);\n            if(space) {\n              return space.name;\n            } else {\n              return \"(undefined)\";\n            }\n        };\n\n        // Get the aciton structure for the action with the specified name.\n        vm.getActionByName = function(name) {\n            var i;\n            for(i = 0 ; i < vm.actionOptions.length ; i++) {\n                if(vm.actionOptions[i].name === name) {\n                    return vm.actionOptions[i];\n                }\n            }\n            return null;\n        };\n\n        // Initialize the provideDHCPAction structure with the current primary\n        // and secondary rack, plus an indication regarding whether or not\n        // adding a dynamic IP range is required.\n        vm.initProvideDHCP = function(forRelay) {\n            vm.provideDHCPAction = {};\n            var dhcp = vm.provideDHCPAction;\n            dhcp.subnet = null;\n            dhcp.relayVLAN = null;\n            if (angular.isNumber(vm.vlan.relay_vlan)) {\n                dhcp.relayVLAN = VLANsManager.getItemFromList(\n                    vm.vlan.relay_vlan);\n            }\n            if (angular.isObject(vm.primaryRack)) {\n                dhcp.primaryRack = vm.primaryRack.system_id;\n            } else if(vm.relatedControllers.length > 0) {\n                // Select the primary controller arbitrarily by default.\n                dhcp.primaryRack = vm.relatedControllers[0].system_id;\n            }\n            if (angular.isObject(vm.secondaryRack)) {\n                dhcp.secondaryRack = vm.secondaryRack.system_id;\n            } else if(vm.relatedControllers.length > 1) {\n                // Select the secondary controller arbitrarily by default.\n                dhcp.secondaryRack = vm.relatedControllers[1].system_id;\n            }\n            dhcp.maxIPs = 0;\n            dhcp.startIP = null;\n            dhcp.endIP = null;\n            dhcp.gatewayIP = \"\";\n            if (angular.isObject(vm.relatedSubnets)) {\n                // Select a subnet arbitrarily by default.\n                if (vm.relatedSubnets.length > 0 &&\n                        angular.isObject(vm.relatedSubnets[0].subnet)) {\n                    dhcp.subnet = vm.relatedSubnets[0].subnet.id;\n                }\n                dhcp.needsDynamicRange = true;\n                var i, subnet;\n                for (i = 0; i < vm.relatedSubnets.length; i++) {\n                    subnet = vm.relatedSubnets[i].subnet;\n                    // If any related subnet already has a dynamic range, we\n                    // cannot prompt the user to enter one here. If a\n                    // suggestion does not exist, a range does not exist\n                    // already.\n                    var iprange = subnet.statistics.suggested_dynamic_range;\n                    if (!angular.isObject(iprange)) {\n                        // If there is already a dynamic range on one of the\n                        // subnets, it's the \"subnet of least surprise\" if\n                        // the user is choosing to reconfigure their rack\n                        // controllers. (if they want DHCP on *another* subnet,\n                        // they should need to be explicit about it.)\n                        dhcp.subnet = subnet.id;\n                        dhcp.needsDynamicRange = false;\n                        break;\n                    }\n                }\n                // We must prompt the user for a subnet and a gateway IP\n                // address if any subnet does not yet contain a gateway IP\n                // address.\n                dhcp.needsGatewayIP = false;\n                dhcp.subnetMissingGatewayIP = true;\n                for (i = 0; i < vm.relatedSubnets.length; i++) {\n                    subnet = vm.relatedSubnets[i].subnet;\n                    if(subnet.gateway_ip === null ||\n                        subnet.gateway_ip === '') {\n                        dhcp.needsGatewayIP = true;\n                        break;\n                    }\n                }\n            }\n            // Since we are setting default values for these three options,\n            // ensure all the appropriate updates occur.\n            if(!forRelay) {\n                vm.updatePrimaryRack();\n                vm.updateSecondaryRack();\n            }\n            vm.updateSubnet(forRelay);\n        };\n\n        // Called when the actionOption has changed.\n        vm.actionOptionChanged = function() {\n            if(vm.actionOption.name === \"enable_dhcp\") {\n                vm.initProvideDHCP(false);\n            } else if(vm.actionOption.name === \"relay_dhcp\") {\n                vm.initProvideDHCP(true);\n            }\n            // Clear the action error.\n            vm.actionError = null;\n        };\n\n        // Cancel the action.\n        vm.actionCancel = function() {\n            // When the user wants to cancel an action, we need to clear out\n            // both the actionOption (so that the action screen will not be\n            // presented again) and the actionError (so that the error screen\n            // is hidden).\n            vm.actionOption = null;\n            vm.actionError = null;\n        };\n\n        // Called from the Provide DHCP form when the primary rack changes.\n        vm.updatePrimaryRack = function() {\n            var dhcp = vm.provideDHCPAction;\n            // If the user selects the secondary controller to be the primary,\n            // then the primary controller needs to be cleared out.\n            if(dhcp.primaryRack === dhcp.secondaryRack) {\n                dhcp.secondaryRack = null;\n            }\n            var i;\n            for(i = 0 ; i < vm.relatedControllers.length ; i++) {\n                if(vm.relatedControllers[i].system_id !== dhcp.primaryRack) {\n                    dhcp.secondaryRack = vm.relatedControllers[i].system_id;\n                    break;\n                }\n            }\n        };\n\n        // Called from the Provide DHCP form when the secondary rack changes.\n        vm.updateSecondaryRack = function() {\n            var dhcp = vm.provideDHCPAction;\n            // This should no longer be possible due to the filters on the\n            // drop-down boxes, but just in case.\n            if(dhcp.primaryRack === dhcp.secondaryRack) {\n                dhcp.primaryRack = null;\n                dhcp.secondaryRack = null;\n            }\n        };\n\n        // Called from the view to exclude the primary rack when selecting\n        // the secondary rack controller.\n        vm.filterPrimaryRack = function(rack) {\n            var dhcp = vm.provideDHCPAction;\n            return rack.system_id !== dhcp.primaryRack;\n        };\n\n        // Called from the Provide DHCP form when the subnet selection changes.\n        vm.updateSubnet = function(forRelay) {\n            var dhcp = vm.provideDHCPAction;\n            var subnet = SubnetsManager.getItemFromList(dhcp.subnet);\n            if(angular.isObject(subnet)) {\n                var suggested_gateway = null;\n                var iprange = null;\n                if(angular.isObject(subnet.statistics)) {\n                    suggested_gateway = subnet.statistics.suggested_gateway;\n                    iprange = subnet.statistics.suggested_dynamic_range;\n                }\n                if(angular.isObject(iprange) && iprange.num_addresses > 0) {\n                    dhcp.maxIPs = iprange.num_addresses;\n                    if(forRelay) {\n                        dhcp.startIP = \"\";\n                        dhcp.endIP = \"\";\n                        dhcp.startPlaceholder = iprange.start + \"(optional)\";\n                        dhcp.endPlaceholder = iprange.end + \" (optional)\";\n                    } else {\n                        dhcp.startIP = iprange.start;\n                        dhcp.endIP = iprange.end;\n                        dhcp.startPlaceholder = iprange.start;\n                        dhcp.endPlaceholder = iprange.end;\n                    }\n                } else {\n                    // Need to add a dynamic range, but according to our data,\n                    // there is no room on the subnet for a dynamic range.\n                    dhcp.maxIPs = 0;\n                    dhcp.startIP = \"\";\n                    dhcp.endIP = \"\";\n                    dhcp.startPlaceholder = \"(no available IPs)\";\n                    dhcp.endPlaceholder = \"(no available IPs)\";\n                }\n                if(angular.isString(suggested_gateway)) {\n                    if(forRelay) {\n                      dhcp.gatewayIP = \"\";\n                      dhcp.gatewayPlaceholder = (\n                          suggested_gateway + \" (optional)\");\n                    } else {\n                        dhcp.gatewayIP = suggested_gateway;\n                        dhcp.gatewayPlaceholder = suggested_gateway;\n                    }\n                } else {\n                    // This means the subnet already has a gateway, so don't\n                    // bother populating it.\n                    dhcp.gatewayIP = \"\";\n                    dhcp.gatewayPlaceholder = \"\";\n                }\n            } else {\n                // Don't need to add a dynamic range, so ensure these fields\n                // are cleared out.\n                dhcp.maxIPs = 0;\n                dhcp.startIP = null;\n                dhcp.endIP = null;\n                dhcp.gatewayIP = \"\";\n            }\n            if(angular.isObject(subnet)) {\n                dhcp.subnetMissingGatewayIP = !angular.isString(\n                    subnet.gateway_ip);\n            } else {\n                dhcp.subnetMissingGatewayIP = false;\n            }\n            if(dhcp.subnetMissingGatewayIP === false) {\n                dhcp.gatewayIP = null;\n            }\n       };\n\n        vm.actionRetry = function() {\n            // When we clear actionError, the HTML will be re-rendered to\n            // hide the error message (and the user will be taken back to\n            // the previous action they were performing, since we reset\n            // the actionOption in the error handler.\n            vm.actionError = null;\n        };\n\n        // Return True if the current action can be performed.\n        vm.canPerformAction = function() {\n            if(vm.actionOption.name === \"enable_dhcp\") {\n                return vm.relatedSubnets.length > 0;\n            } else if(vm.actionOption.name === \"relay_dhcp\") {\n                return angular.isObject(vm.provideDHCPAction.relayVLAN);\n            } else {\n                return true;\n            }\n        };\n\n        // Perform the action.\n        vm.actionGo = function() {\n            // Do nothing if action cannot be performed.\n            if(!vm.canPerformAction()) {\n               return;\n            }\n\n            if(vm.actionOption.name === \"enable_dhcp\") {\n                var dhcp = vm.provideDHCPAction;\n                var controllers = [];\n                // These will be undefined if they don't exist, and the region\n                // will simply get an empty dictionary.\n                var extra = {};\n                extra.subnet = dhcp.subnet;\n                extra.start = dhcp.startIP;\n                extra.end = dhcp.endIP;\n                extra.gateway = dhcp.gatewayIP;\n                if(angular.isString(dhcp.primaryRack)) {\n                    controllers.push(dhcp.primaryRack);\n                }\n                if(angular.isString(dhcp.secondaryRack)) {\n                    controllers.push(dhcp.secondaryRack);\n                }\n                // Abort the action without calling down to the region if\n                // the user didn't select a controller.\n                if(controllers.length === 0) {\n                    vm.actionError =\n                        \"A primary rack controller must be specified.\";\n                    return;\n                }\n                VLANsManager.configureDHCP(\n                    vm.vlan, controllers, extra).then(function() {\n                        vm.actionOption = null;\n                        vm.actionError = null;\n                    }, function(result) {\n                        vm.actionError = result.error;\n                        vm.actionOption = vm.PROVIDE_DHCP_ACTION;\n                    });\n            } else if(vm.actionOption.name === \"relay_dhcp\") {\n                // These will be undefined if they don't exist, and the region\n                // will simply get an empty dictionary.\n                var extraDHCP = {};\n                extraDHCP.subnet = vm.provideDHCPAction.subnet;\n                extraDHCP.start = vm.provideDHCPAction.startIP;\n                extraDHCP.end = vm.provideDHCPAction.endIP;\n                extraDHCP.gateway = vm.provideDHCPAction.gatewayIP;\n                var relay = vm.provideDHCPAction.relayVLAN.id;\n                VLANsManager.configureDHCP(\n                    vm.vlan, [], extraDHCP, relay).then(function() {\n                        vm.actionOption = null;\n                        vm.actionError = null;\n                    }, function(result) {\n                        vm.actionError = result.error;\n                        vm.actionOption = vm.RELAY_DHCP_ACTION;\n                    });\n            } else if(vm.actionOption.name === \"disable_dhcp\") {\n                VLANsManager.disableDHCP(vm.vlan).then(function() {\n                    vm.actionOption = null;\n                    vm.actionError = null;\n                }, function(result) {\n                    vm.actionError = result.error;\n                    vm.actionOption = vm.DISABLE_DHCP_ACTION;\n                });\n            } else if(vm.actionOption.name === \"delete\") {\n                VLANsManager.deleteVLAN(vm.vlan).then(function() {\n                    $location.path(\"/networks\");\n                    vm.actionOption = null;\n                    vm.actionError = null;\n                }, function(result) {\n                    vm.actionError = result.error;\n                    vm.actionOption = vm.DELETE_ACTION;\n                });\n            }\n        };\n\n        // Return true if there is an action error.\n        vm.isActionError = function() {\n            return vm.actionError !== null;\n        };\n\n        // Return the name of the VLAN.\n        vm.getFullVLANName = function(vlan_id) {\n            var vlan = VLANsManager.getItemFromList(vlan_id);\n            var fabric = FabricsManager.getItemFromList(vlan.fabric);\n            return (\n                FabricsManager.getName(fabric) + \".\" +\n                VLANsManager.getName(vlan));\n        };\n\n        // Return the current DHCP status.\n        vm.getDHCPStatus = function() {\n            if(vm.vlan) {\n              if(vm.vlan.dhcp_on) {\n                return \"Enabled\";\n              } else if(vm.vlan.relay_vlan) {\n                return \"Relayed via \" + vm.getFullVLANName(vm.vlan.relay_vlan);\n              } else {\n                return \"Disabled\";\n              }\n            } else {\n              return \"\";\n            }\n        };\n\n        // Updates the page title.\n        function updateTitle() {\n            var vlan = vm.vlan;\n            var fabric = vm.fabric;\n            if(angular.isObject(vlan) && angular.isObject(fabric)) {\n                if (!vlan.name) {\n                    if(vlan.vid === 0) {\n                        vm.title = \"Default VLAN\";\n                    } else {\n                        vm.title = \"VLAN \" + vlan.vid;\n                    }\n                } else {\n                    vm.title = vlan.name;\n                }\n                vm.title += \" in \" + fabric.name;\n                $rootScope.title = vm.title;\n            }\n        }\n\n        // Called from a $watch when the management racks are updated.\n        function updateManagementRacks() {\n            var vlan = vm.vlan;\n            if(!angular.isObject(vlan)) {\n                return;\n            }\n            if(vlan.primary_rack) {\n                vm.primaryRack = ControllersManager.getItemFromList(\n                    vlan.primary_rack);\n            } else {\n                vm.primaryRack = null;\n            }\n            if(vlan.secondary_rack) {\n                vm.secondaryRack = ControllersManager.getItemFromList(\n                    vlan.secondary_rack);\n            } else {\n                vm.secondaryRack = null;\n            }\n        }\n\n        // Called from a $watch when the related controllers may have changed.\n        function updateRelatedControllers() {\n            var vlan = vm.vlan;\n            if(!angular.isObject(vlan)) {\n                return;\n            }\n            var racks = [];\n            angular.forEach(vlan.rack_sids, function(rack_sid) {\n                var rack = ControllersManager.getItemFromList(rack_sid);\n                if(angular.isObject(rack)) {\n                    racks.push(rack);\n                }\n            });\n            vm.relatedControllers = racks;\n        }\n\n        // Called from a $watch when the related subnets or spaces may have\n        // changed.\n        function updateRelatedSubnets() {\n            var vlan = vm.vlan;\n            if(!angular.isObject(vlan)) {\n                return;\n            }\n            var subnets = [];\n            angular.forEach(\n                    filterByVLAN(vm.subnets, vlan), function(subnet) {\n                var space = SpacesManager.getItemFromList(subnet.space);\n                if(!angular.isObject(space)) {\n                    space = {name: \"(undefined)\"};\n                }\n                var row = {\n                    subnet: subnet,\n                    space: space\n                };\n                subnets.push(row);\n            });\n            vm.relatedSubnets = subnets;\n        }\n\n        function updatePossibleActions() {\n            var vlan = vm.vlan;\n            if(!angular.isObject(vlan)) {\n                return;\n            }\n            // Clear out the actionOptions array. (this needs to be the same\n            // object, since it's watched from $scope.)\n            vm.actionOptions.length = 0;\n            if(UsersManager.isSuperUser()) {\n                if(!vlan.relay_vlan) {\n                  if(vlan.dhcp_on === true) {\n                      vm.PROVIDE_DHCP_ACTION.title = \"Reconfigure DHCP\";\n                      vm.actionOptions.push(vm.PROVIDE_DHCP_ACTION);\n                      vm.actionOptions.push(vm.DISABLE_DHCP_ACTION);\n                  } else {\n                      vm.PROVIDE_DHCP_ACTION.title = \"Provide DHCP\";\n                      vm.RELAY_DHCP_ACTION.title = \"Relay DHCP\";\n                      vm.actionOptions.push(vm.PROVIDE_DHCP_ACTION);\n                      vm.actionOptions.push(vm.RELAY_DHCP_ACTION);\n                  }\n                } else {\n                  vm.actionOptions.push(vm.RELAY_DHCP_ACTION);\n                  vm.actionOptions.push(vm.DISABLE_DHCP_ACTION);\n                  vm.RELAY_DHCP_ACTION.title = \"Reconfigure DHCP relay\";\n                }\n                if(!vm.isFabricDefault) {\n                    vm.actionOptions.push(vm.DELETE_ACTION);\n                }\n            }\n        }\n\n        // Called when the vlan has been loaded.\n        function vlanLoaded(vlan) {\n            vm.vlan = vlan;\n            vm.fabric = FabricsManager.getItemFromList(vlan.fabric);\n            vm.isFabricDefault = vm.fabric.default_vlan_id === vm.vlan.id;\n            vm.loaded = true;\n\n            updateTitle();\n            updateManagementRacks();\n            updateRelatedControllers();\n            updateRelatedSubnets();\n            updatePossibleActions();\n        }\n\n        // Load all the required managers.\n        ManagerHelperService.loadManagers($scope, [\n            VLANsManager, SubnetsManager, SpacesManager, FabricsManager,\n            ControllersManager, UsersManager\n        ]).then(function() {\n            // Possibly redirected from another controller that already had\n            // this vlan set to active. Only call setActiveItem if not\n            // already the activeItem.\n            var activeVLAN = VLANsManager.getActiveItem();\n            var requestedVLAN = parseInt($routeParams.vlan_id, 10);\n            if(isNaN(requestedVLAN)) {\n                ErrorService.raiseError(\"Invalid VLAN identifier.\");\n            } else if(angular.isObject(activeVLAN) &&\n                activeVLAN.id === requestedVLAN) {\n                vlanLoaded(activeVLAN);\n            } else {\n                VLANsManager.setActiveItem(\n                    requestedVLAN).then(function(vlan) {\n                        vlanLoaded(vlan);\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n            }\n\n            $scope.$watch(\"vlanDetails.vlan.name\", updateTitle);\n            $scope.$watch(\"vlanDetails.vlan.vid\", updateTitle);\n            $scope.$watch(\"vlanDetails.vlan.dhcp_on\", updatePossibleActions);\n            $scope.$watch(\n                \"vlanDetails.vlan.relay_vlan\", updatePossibleActions);\n            $scope.$watch(\"vlanDetails.fabric.name\", updateTitle);\n            $scope.$watch(\n                \"vlanDetails.vlan.primary_rack\", updateManagementRacks);\n            $scope.$watch(\n                \"vlanDetails.vlan.secondary_rack\", updateManagementRacks);\n\n            $scope.$watchCollection(\n                \"vlanDetails.subnets\", updateRelatedSubnets);\n            $scope.$watchCollection(\n                \"vlanDetails.spaces\", updateRelatedSubnets);\n            $scope.$watchCollection(\n                \"vlanDetails.controllers\", updateRelatedControllers);\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/vlan_details.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Zone Details Controller\n */\n\nangular.module('MAAS').controller('ZoneDetailsController', [\n    '$scope', '$rootScope', '$routeParams', '$location', 'MachinesManager',\n    'DevicesManager', 'ZonesManager', 'UsersManager',\n    'ManagerHelperService', 'ErrorService',\n    function(\n        $scope, $rootScope, $routeParams, $location, MachinesManager,\n        DevicesManager, ZonesManager, UsersManager, ManagerHelperService,\n        ErrorService) {\n\n        // Set title and page.\n        $rootScope.title = \"Loading...\";\n\n        // Note: this value must match the top-level tab, in order for\n        // highlighting to occur properly.\n        $rootScope.page = \"zones\";\n\n        // Initial values.\n        $scope.loaded = false;\n        $scope.zone = null;\n        $scope.zoneManager = ZonesManager;\n        $scope.editSummary = false;\n        $scope.predicate = \"name\";\n        $scope.reverse = false;\n\n        // Updates the page title.\n        function updateTitle() {\n            $rootScope.title = $scope.zone.name;\n        }\n\n        // Called when the zone has been loaded.\n        function zoneLoaded(zone) {\n            $scope.zone = zone;\n            $scope.loaded = true;\n            updateTitle();\n        }\n\n\n        // Called when the \"edit\" button is cliked in the zone summary\n        $scope.enterEditSummary = function() {\n            $scope.editSummary = true;\n        };\n\n        // Called when the \"cancel\" button is cliked in the zone summary\n        $scope.exitEditSummary = function() {\n            $scope.editSummary = false;\n        };\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        // Return true if this is the default zone.\n        $scope.isDefaultZone = function() {\n            if(angular.isObject($scope.zone)) {\n                return $scope.zone.id === 1;\n            }\n            return false;\n        };\n\n        // Called to check if the zone can be deleted.\n        $scope.canBeDeleted = function() {\n            if(angular.isObject($scope.zone)) {\n                return $scope.zone.id !== 0;\n            }\n            return false;\n        };\n\n        // Called when the delete zone button is pressed.\n        $scope.deleteButton = function() {\n            $scope.error = null;\n            $scope.confirmingDelete = true;\n        };\n\n        // Called when the cancel delete zone button is pressed.\n        $scope.cancelDeleteButton = function() {\n            $scope.confirmingDelete = false;\n        };\n\n        // Called when the confirm delete space button is pressed.\n        $scope.deleteConfirmButton = function() {\n            ZonesManager.deleteItem($scope.zone).then(function() {\n                $scope.confirmingDelete = false;\n                $location.path(\"/zones\");\n            }, function(error) {\n                $scope.error =\n                    ManagerHelperService.parseValidationError(error);\n            });\n        };\n\n        // Load all the required managers.\n        ManagerHelperService.loadManagers(\n            $scope, [ZonesManager, UsersManager]).then(function() {\n            // Possibly redirected from another controller that already had\n            // this zone set to active. Only call setActiveItem if not\n            // already the activeItem.\n            var activeZone = ZonesManager.getActiveItem();\n            var requestedZone = parseInt($routeParams.zone_id, 10);\n            if(isNaN(requestedZone)) {\n                ErrorService.raiseError(\"Invalid zone identifier.\");\n            } else if(angular.isObject(activeZone) &&\n                activeZone.id === requestedZone) {\n                zoneLoaded(activeZone);\n            } else {\n                ZonesManager.setActiveItem(\n                    requestedZone).then(function(zone) {\n                        zoneLoaded(zone);\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n            }\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/zone_details.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Zones List Controller\n */\n\nangular.module('MAAS').controller('ZonesListController', [\n    '$scope', '$rootScope', '$routeParams', '$filter', 'MachinesManager',\n    'DevicesManager', 'ControllersManager', 'ZonesManager', 'ServicesManager',\n    'UsersManager', 'ManagerHelperService', 'ErrorService',\n    function($scope, $rootScope, $routeParams, $filter, MachinesManager,\n        DevicesManager, ControllersManager, ZonesManager, ServicesManager,\n        UsersManager, ManagerHelperService, ErrorService) {\n\n        // Set title and page.\n        $rootScope.title = \"Zones\";\n        $rootScope.page = \"zones\";\n\n        // Set initial values.\n        $scope.zoneManager = ZonesManager;\n        $scope.zones = ZonesManager.getItems();\n        $scope.currentpage = \"zones\";\n        $scope.predicate = \"name\";\n        $scope.reverse = false;\n        $scope.loading = true;\n        $scope.action = {\n          open: false,\n          obj: {}\n        };\n\n        // Open add zone view.\n        $scope.addZone = function() {\n          $scope.action.open = true;\n        };\n\n        // Saving has completed.\n        $scope.closeZone = function() {\n          $scope.action.open = false;\n          $scope.action.obj = {};\n        };\n\n        // Return true if the authenticated user is super user.\n        $scope.isSuperUser = function() {\n            return UsersManager.isSuperUser();\n        };\n\n        ManagerHelperService.loadManagers(\n            $scope, [ZonesManager, UsersManager]).then(\n            function() {\n                $scope.loading = false;\n            });\n        }\n    ]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/controllers/zones_list.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Accordion directive.\n *\n * Provides an accordion effect to an element with maas-accordion class and\n * all child elements with maas-accordion-tab. Only one accordion tab is open\n * at a time, selecting another accordion will set \"active\" on that\n * accordion tab.\n */\n\n\nangular.module('MAAS').directive('maasAccordion', function() {\n    return {\n        restrict: \"C\",\n        link: function(scope, element, attrs) {\n\n            // Called when accordion tabs are clicked. Removes active on\n            // all other tabs except to the tab that was clicked.\n            var clickHandler = function(evt) {\n                var tab = evt.data.tab;\n                angular.element(tab).toggleClass(\"is-selected\");\n            };\n\n            // Listen for the click event on all tabs in the accordion.\n            var tabs = element.find(\".maas-accordion-tab\");\n            angular.forEach(tabs, function(tab) {\n                tab = angular.element(tab);\n                tab.on(\"click\", {\n                    tab: tab\n                }, clickHandler);\n            });\n\n            // Remove the handlers when the scope is destroyed.\n            scope.$on(\"$destroy\", function() {\n                angular.forEach(tabs, function(tab) {\n                    angular.element(tab).off(\"click\", clickHandler);\n                });\n            });\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/accordion.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Boot images directive.\n*/\n\nangular.module('MAAS').directive('maasBootImagesStatus', [\n    'BootResourcesManager',\n    function(BootResourcesManager) {\n        return {\n            restrict: \"E\",\n            scope: {},\n            template: [\n                '<p class=\"page-header__status\" ',\n                    'data-ng-if=\"data.region_import_running\">',\n                    '<span class=\"u-text--loading\">',\n                        '<i class=\"p-icon--loading u-animation--spin\"></i>',\n                        'Step 1/2: Region controller importing',\n                    '</span>',\n                '</p>',\n                '<p class=\"page-header__status\" ',\n                    'data-ng-if=\"!data.region_import_running && ',\n                    'data.rack_import_running\">',\n                    '<span class=\"u-text--loading\">',\n                        '<i class=\"p-icon--loading u-animation--spin\"></i>',\n                        'Step 2/2: Rack controller(s) importing',\n                    '</span>',\n                '</p>'\n            ].join(''),\n            controller: function($scope, $rootScope, $element, $document) {\n                // This controller doesn't start the polling. The\n                // `maasBootImages` controller should be used on the page to\n                // start the polling. This just presents a nice status spinner\n                // when the polling is enabled.\n                $scope.data = BootResourcesManager.getData();\n            }\n        };\n    }]);\n\nangular.module('MAAS').directive('maasBootImages', [\n    '$filter', 'BootResourcesManager', 'UsersManager', 'ManagerHelperService',\n    function($filter, BootResourcesManager,\n        UsersManager, ManagerHelperService) {\n        return {\n            restrict: \"E\",\n            scope: {\n                design: \"=?\"\n            },\n            templateUrl: (\n                'static/partials/boot-images.html?v=' + (\n                    MAAS_config.files_version)),\n            controller: function($scope, $rootScope, $element, $document) {\n                $scope.loading = true;\n                $scope.saving = false;\n                $scope.stopping = false;\n                $scope.design = $scope.design || 'page';\n                $scope.bootResources = BootResourcesManager.getData();\n                $scope.ubuntuImages = [];\n                $scope.source = {\n                    isNew: false,\n                    tooMany: false,\n                    showingAdvanced: false,\n                    connecting: false,\n                    errorMessage: \"\",\n                    source_type: 'maas.io',\n                    url: '',\n                    keyring_filename: '',\n                    keyring_data: '',\n                    releases: [],\n                    arches: [],\n                    selections: {\n                        changed: false,\n                        releases: [],\n                        arches: []\n                    }\n                };\n                $scope.ubuntuCoreImages = [];\n                $scope.ubuntu_core = {\n                    changed: false,\n                    images: []\n                };\n                $scope.otherImages = [];\n                $scope.other = {\n                    changed: false,\n                    images: []\n                };\n                $scope.generatedImages = [];\n                $scope.customImages = [];\n                $scope.ubuntuDeleteId = null;\n                $scope.removingImage = null;\n\n                // Return true if the authenticated user is super user.\n                $scope.isSuperUser = function() {\n                    return UsersManager.isSuperUser();\n                };\n\n                // Return the overall title icon.\n                $scope.getTitleIcon = function() {\n                    if($scope.bootResources.resources.length === 0) {\n                        return 'p-icon--success-muted';\n                    } else {\n                        return 'p-icon--success';\n                    }\n                };\n\n                // Return true if the mirror path section should be shown.\n                $scope.showMirrorPath = function() {\n                    if($scope.source.source_type === 'custom') {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                };\n\n                // Return true if the advanced options are shown.\n                $scope.isShowingAdvancedOptions = function() {\n                    return $scope.source.showingAdvanced;\n                };\n\n                // Toggle showing the advanced options.\n                $scope.toggleAdvancedOptions = function() {\n                    $scope.source.showingAdvanced = (\n                        !$scope.source.showingAdvanced);\n                };\n\n                // Return true if both keyring options are set.\n                $scope.bothKeyringOptionsSet = function() {\n                    return (\n                        $scope.source.keyring_filename.length > 0 &&\n                        $scope.source.keyring_data.length > 0);\n                };\n\n                // Return true when the connect button for the mirror path\n                // should be shown.\n                $scope.showConnectButton = function() {\n                    return $scope.source.isNew;\n                };\n\n                // Called when the source radio chanaged.\n                $scope.sourceChanged = function() {\n                    var currentSources = $scope.bootResources.ubuntu.sources;\n                    if(currentSources.length === 0) {\n                        $scope.source.isNew = true;\n                    } else {\n                        var prevNew = $scope.source.isNew;\n                        $scope.source.isNew = (\n                            $scope.source.source_type !==\n                            currentSources[0].source_type);\n                        if($scope.source.source_type === 'custom') {\n                            $scope.source.isNew = $scope.source.isNew || (\n                                $scope.source.url !==\n                                currentSources[0].url\n                            );\n                        }\n                        if(prevNew && !$scope.source.isNew) {\n                            // No longer a new source set url and keyring to\n                            // original.\n                            $scope.source.url = currentSources[0].url;\n                            $scope.source.keyring_filename = (\n                                currentSources[0].keyring_filename);\n                            $scope.source.keyring_data = (\n                                currentSources[0].keyring_data);\n                        }\n                        $scope.source.releases = [];\n                        $scope.source.arches = [];\n                        $scope.source.selections = {\n                            changed: false,\n                            releases: [],\n                            arches: []\n                        };\n                    }\n                    $scope.updateSource();\n                    $scope.regenerateUbuntuImages();\n\n                    // When the source is new and its maas.io automatically\n                    // fetch the source information.\n                    if($scope.source.isNew &&\n                        $scope.source.source_type === 'maas.io') {\n                        $scope.connect();\n                    }\n                };\n\n                // Return true when the connect button should be disabled.\n                $scope.isConnectButtonDisabled = function() {\n                    if($scope.source.source_type === 'maas.io') {\n                        return false;\n                    } else {\n                        return ($scope.bothKeyringOptionsSet() ||\n                            $scope.source.url.length === 0 ||\n                            $scope.source.connecting);\n                    }\n                };\n\n                // Return the source parameters.\n                $scope.getSourceParams = function() {\n                    if($scope.source.source_type === 'maas.io') {\n                        return {\n                            source_type: 'maas.io'\n                        };\n                    } else {\n                        return {\n                            source_type: $scope.source.source_type,\n                            url: $scope.source.url,\n                            keyring_filename: $scope.source.keyring_filename,\n                            keyring_data: $scope.source.keyring_data\n                        };\n                    }\n                };\n\n                // Select the default images that should be selected. Current\n                // defaults are '16.04 LTS' and 'amd64'.\n                $scope.selectDefaults = function() {\n                    angular.forEach($scope.source.releases, function(release) {\n                        if(release.name === \"xenial\") {\n                            $scope.source.selections.releases.push(release);\n                        }\n                    });\n                    angular.forEach($scope.source.arches, function(arch) {\n                        if(arch.name === \"amd64\") {\n                            $scope.source.selections.arches.push(arch);\n                        }\n                    });\n                };\n\n                // Connected to the simplestreams endpoint. This only gets the\n                // information from the endpoint it does not save it into the\n                // database.\n                $scope.connect = function() {\n                    if($scope.isConnectButtonDisabled()) {\n                        return;\n                    }\n\n                    var source = $scope.getSourceParams();\n                    $scope.source.connecting = true;\n                    $scope.source.releases = [];\n                    $scope.source.arches = [];\n                    $scope.source.selections.changed = true;\n                    $scope.source.selections.releases = [];\n                    $scope.source.selections.arches = [];\n                    $scope.regenerateUbuntuImages();\n                    BootResourcesManager.fetch(source).then(function(data) {\n                        $scope.source.connecting = false;\n                        data = angular.fromJson(data);\n                        $scope.source.releases = data.releases;\n                        $scope.source.arches = data.arches;\n                        $scope.selectDefaults();\n                        $scope.regenerateUbuntuImages();\n                    }, function(error) {\n                        $scope.source.connecting = false;\n                        $scope.source.errorMessage = error;\n                    });\n                };\n\n                // Return true if the connect block should be shown.\n                $scope.showConnectBlock = function() {\n                    return $scope.source.tooMany || (\n                        $scope.source.isNew && !$scope.showSelections());\n                };\n\n                // Return true if the release and architecture selection\n                // should be shown.\n                $scope.showSelections = function() {\n                    return (\n                        $scope.source.releases.length > 0 &&\n                        $scope.source.arches.length > 0);\n                };\n\n                // Return the Ubuntu LTS releases.\n                $scope.getUbuntuLTSReleases = function() {\n                    var releases = $scope.bootResources.ubuntu.releases;\n                    if($scope.source.isNew) {\n                        releases = $scope.source.releases;\n                    }\n                    var filtered = [];\n                    angular.forEach(releases, function(release) {\n                        if(!release.deleted &&\n                            release.title.indexOf('LTS') !== -1) {\n                            filtered.push(release);\n                        }\n                    });\n                    return filtered;\n                };\n\n                // Return the Ubuntu non-LTS releases.\n                $scope.getUbuntuNonLTSReleases = function() {\n                    var releases = $scope.bootResources.ubuntu.releases;\n                    if($scope.source.isNew) {\n                        releases = $scope.source.releases;\n                    }\n                    var filtered = [];\n                    angular.forEach(releases, function(release) {\n                        if(!release.deleted &&\n                            release.title.indexOf('LTS') === -1) {\n                            filtered.push(release);\n                        }\n                    });\n                    return filtered;\n                };\n\n                // Return the available architectures.\n                $scope.getArchitectures = function() {\n                    var arches = $scope.bootResources.ubuntu.arches;\n                    if($scope.source.isNew) {\n                        arches = $scope.source.arches;\n                    }\n                    var filtered = [];\n                    angular.forEach(arches, function(arch) {\n                        if(!arch.deleted) {\n                            filtered.push(arch);\n                        }\n                    });\n                    return filtered;\n                };\n\n                // Return true if the source has this selected.\n                $scope.isSelected = function(type, obj) {\n                    return $scope.source.selections[type].indexOf(obj) >= 0;\n                };\n\n                // Toggle the selection of the release or the architecture.\n                $scope.toggleSelection = function(type, obj) {\n                    var idx = $scope.source.selections[type].indexOf(obj);\n                    if(idx === -1) {\n                        $scope.source.selections[type].push(obj);\n                    } else {\n                        $scope.source.selections[type].splice(idx, 1);\n                    }\n                    $scope.source.selections.changed = true;\n                    $scope.regenerateUbuntuImages();\n                };\n\n                // Return true if the images table should be shown.\n                $scope.showImagesTable = function() {\n                    if($scope.ubuntuImages.length > 0) {\n                        return true;\n                    } else {\n                        // Show the images table source has\n                        // releases and architectures.\n                        return (\n                            $scope.source.arches.length > 0 &&\n                            $scope.source.releases.length > 0);\n                    }\n                };\n\n                // Regenerates the Ubuntu images list for the directive.\n                $scope.regenerateUbuntuImages = function() {\n                    var getResource = function() { return null; };\n                    var resources = $scope.bootResources.resources.filter(\n                        function(resource) {\n                            var name_split = resource.name.split('/');\n                            var resource_os = name_split[0];\n                            return (\n                                resource.rtype === 0 &&\n                                resource_os === 'ubuntu');\n                        });\n                    if(!$scope.source.isNew) {\n                        getResource = function(release, arch) {\n                            var i;\n                            for(i = 0; i < resources.length; i++) {\n                                // Only care about Ubuntu images.\n                                var resource = (resources[i]);\n                                var name_split = resource.name.split('/');\n                                var resource_release = name_split[1];\n                                if(resource_release === release &&\n                                    resource.arch === arch) {\n                                    resources.splice(i, 1);\n                                    return resource;\n                                }\n                            }\n                            return null;\n                        };\n                    }\n\n                    // Create the images based on the selections.\n                    $scope.ubuntuImages.length = 0;\n                    angular.forEach($scope.source.selections.releases,\n                        function(release) {\n                            angular.forEach($scope.source.selections.arches,\n                                function(arch) {\n                                    var image = {\n                                        icon: 'p-icon--status-queued',\n                                        title: release.title,\n                                        arch: arch.title,\n                                        size: '-',\n                                        status: 'Selected for download',\n                                        beingDeleted: false,\n                                        name: release.name\n                                    };\n                                    var resource = getResource(\n                                        release.name, arch.name);\n                                    if(angular.isObject(resource)) {\n                                        image.resourceId = resource.id;\n                                        image.icon = (\n                                            'p-icon--status-' + resource.icon);\n                                        image.size = resource.size;\n                                        image.status = resource.status;\n                                        if(resource.downloading) {\n                                            image.icon += ' u-animation--pulse';\n                                        }\n                                    }\n                                    $scope.ubuntuImages.push(image);\n                                });\n                        });\n\n                    // If not a new source and images remain in resources, then\n                    // those are set to be deleted.\n                    if(!$scope.source.isNew) {\n                        angular.forEach(resources, function(resource) {\n                            var name_split = resource.name.split('/');\n                            var image = {\n                                icon: 'p-icon--status-failed',\n                                title: resource.title,\n                                arch: resource.arch,\n                                size: resource.size,\n                                status: 'Will be deleted',\n                                beingDeleted: true,\n                                name: name_split[1]\n                            };\n                            $scope.ubuntuImages.push(image);\n                        });\n                    }\n                };\n\n                // Regenerates the Ubuntu Core images list for the directive.\n                $scope.regenerateUbuntuCoreImages = function() {\n                    var isUbuntuCore = function(resource) {\n                        var name_split = resource.name.split('/');\n                        var resource_os = name_split[0];\n                        return (\n                            resource.rtype === 0 &&\n                            resource_os === 'ubuntu-core');\n                    };\n                    var resources = (\n                        $scope.bootResources.resources.filter(isUbuntuCore));\n                    var getResource = function(release, arch) {\n                        var i;\n                        for(i = 0; i < resources.length; i++) {\n                            // Only care about other images. Removing custom,\n                            // bootloaders, and Ubuntu images.\n                            var resource = (resources[i]);\n                            var name_split = resource.name.split('/');\n                            var resource_release = name_split[1];\n                            if(resource_release === release &&\n                                resource.arch === arch) {\n                                resources.splice(i, 1);\n                                return resource;\n                            }\n                        }\n                        return null;\n                    };\n\n                    // Create the images based on the selections.\n                    $scope.ubuntuCoreImages.length = 0;\n                    angular.forEach($scope.ubuntu_core.images,\n                        function(ubuntuCoreImage) {\n                            if(ubuntuCoreImage.checked) {\n                                var name_split = ubuntuCoreImage.name.split(\n                                    '/');\n                                var image = {\n                                    icon: 'p-icon--status-queued',\n                                    title: ubuntuCoreImage.title,\n                                    arch: name_split[1],\n                                    size: '-',\n                                    status: 'Selected for download',\n                                    beingDeleted: false\n                                };\n                                var resource = getResource(\n                                    name_split[3], name_split[1]);\n                                if(angular.isObject(resource)) {\n                                    image.icon = (\n                                        'p-icon--status-' + resource.icon);\n                                    image.size = resource.size;\n                                    image.status = resource.status;\n                                    if(resource.downloading) {\n                                        image.icon += ' u-animation--pulse';\n                                    }\n                                }\n                                $scope.ubuntuCoreImages.push(image);\n                            }\n                        });\n\n                    // If not a new source and images remain in resources, then\n                    // those are set to be deleted.\n                    angular.forEach(resources, function(resource) {\n                        var image = {\n                            icon: 'p-icon--status-failed',\n                            title: resource.title,\n                            arch: resource.arch,\n                            size: resource.size,\n                            status: 'Will be deleted',\n                            beingDeleted: true\n                        };\n                        $scope.ubuntuCoreImages.push(image);\n                    });\n                };\n\n                // Regenerates the other images list for the directive.\n                $scope.regenerateOtherImages = function() {\n                    var isOther = function(resource) {\n                        var name_split = resource.name.split('/');\n                        var resource_os = name_split[0];\n                        return (\n                            resource.rtype === 0 &&\n                            resource_os !== 'ubuntu' &&\n                            resource_os !== 'ubuntu-core' &&\n                            resource_os !== 'custom');\n                    };\n                    var resources = (\n                        $scope.bootResources.resources.filter(isOther));\n                    var getResource = function(release, arch) {\n                        var i;\n                        for(i = 0; i < resources.length; i++) {\n                            // Only care about other images. Removing custom,\n                            // bootloaders, and Ubuntu images.\n                            var resource = (resources[i]);\n                            var name_split = resource.name.split('/');\n                            var resource_release = name_split[1];\n                            if(resource_release === release &&\n                                resource.arch === arch) {\n                                resources.splice(i, 1);\n                                return resource;\n                            }\n                        }\n                        return null;\n                    };\n\n                    // Create the images based on the selections.\n                    $scope.otherImages.length = 0;\n                    angular.forEach($scope.other.images,\n                        function(otherImage) {\n                            if(otherImage.checked) {\n                                var name_split = otherImage.name.split('/');\n                                var image = {\n                                    icon: 'p-icon--status-queued',\n                                    title: otherImage.title,\n                                    arch: name_split[1],\n                                    size: '-',\n                                    status: 'Selected for download',\n                                    beingDeleted: false\n                                };\n                                var resource = getResource(\n                                    name_split[3], name_split[1]);\n                                if(angular.isObject(resource)) {\n                                    image.icon = (\n                                        'p-icon--status-' + resource.icon);\n                                    image.size = resource.size;\n                                    image.status = resource.status;\n                                    if(resource.downloading) {\n                                        image.icon += ' u-animation--pulse';\n                                    }\n                                }\n                                $scope.otherImages.push(image);\n                            }\n                        });\n\n                    // If not a new source and images remain in resources, then\n                    // those are set to be deleted.\n                    angular.forEach(resources, function(resource) {\n                        var image = {\n                            icon: 'p-icon--status-failed',\n                            title: resource.title,\n                            arch: resource.arch,\n                            size: resource.size,\n                            status: 'Will be deleted',\n                            beingDeleted: true\n                        };\n                        $scope.otherImages.push(image);\n                    });\n                };\n\n                // Helper for basic image generation.\n                $scope._regenerateImages = function(rtype, images) {\n                    // Create the generated images list.\n                    images.length = 0;\n                    angular.forEach($scope.bootResources.resources,\n                        function(resource) {\n                            if(resource.rtype === rtype) {\n                                var image = {\n                                    icon: 'p-icon--status-' + resource.icon,\n                                    title: resource.title,\n                                    arch: resource.arch,\n                                    image_id: resource.id,\n                                    size: resource.size,\n                                    status: resource.status\n                                };\n                                if(resource.downloading) {\n                                    image.icon += ' u-animation--pulse';\n                                }\n                                images.push(image);\n                            }\n                        });\n                };\n\n                // Regenerates the generated images list for the directive.\n                $scope.regenerateGeneratedImages = function() {\n                    $scope._regenerateImages(1, $scope.generatedImages);\n                };\n\n                // Regenerates the custom images list for the directive.\n                $scope.regenerateCustomImages = function() {\n                    $scope._regenerateImages(2, $scope.customImages);\n                };\n\n                // Returns true if at least one LTS is selected.\n                $scope.ltsIsSelected = function() {\n                    var i;\n                    for(i = 0; i < $scope.ubuntuImages.length; i++) {\n                        // Must have LTS in the title and not being deleted.\n                        if(!$scope.ubuntuImages[i].beingDeleted &&\n                            $scope.ubuntuImages[i].title.indexOf('LTS') >= 0) {\n                            // Must be greater than Ubuntu series 14.\n                            var series = parseInt(\n                                $scope.ubuntuImages[i].title.split('.')[0], 10);\n                            if(series >= 14) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                };\n\n                // Returns true if the commission series is selected\n                $scope.commissioningSeriesSelected = function() {\n                    var i;\n                    for(i = 0; i < $scope.ubuntuImages.length; i++) {\n                        if(!$scope.ubuntuImages[i].beingDeleted &&\n                           $scope.ubuntuImages[i].name ===\n                           $scope.bootResources.ubuntu.commissioning_series) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n\n                // Return if we are asking about deleting this image.\n                $scope.isShowingDeleteConfirm = function(image) {\n                    return image === $scope.removingImage;\n                };\n\n                // Mark the image for deletion.\n                $scope.quickRemove = function(image) {\n                    $scope.removingImage = image;\n                };\n\n                // Cancel image deletion.\n                $scope.cancelRemove = function() {\n                    $scope.removingImage = null;\n                };\n\n                // Mark the image for deletion.\n                $scope.confirmRemove = function(image) {\n                    if(image === $scope.removingImage) {\n                        BootResourcesManager.deleteImage(\n                            {id: image.image_id});\n                    }\n                    $scope.cancelRemove();\n                };\n\n                // Return true if the stop import button should be shown.\n                $scope.showStopImportButton = function() {\n                    return $scope.bootResources.region_import_running;\n                };\n\n                // Return true if should show save selection button, this\n                // doesn't mean it can actually be clicked.\n                $scope.showSaveSelection = function() {\n                    return $scope.showImagesTable();\n                };\n\n                // Return true if can save the current selection.\n                $scope.canSaveSelection = function() {\n                    var commissioning_series_being_deleted = false;\n                    var commissioning_series_arches = 0;\n                    var i;\n                    for(i = 0; i < $scope.ubuntuImages.length; i++) {\n                        if($scope.ubuntuImages[i].name ===\n                           $scope.bootResources.ubuntu.commissioning_series) {\n                            commissioning_series_arches++;\n                        }\n                    }\n                    // Only prevent the current commissioning series from\n                    // being deleted if it isn't the commissioning series isn't\n                    // available on another architecture.. If the current\n                    // commissioning series isn't currently selected another\n                    // LTS may be choosen, downloaded, and configured as the\n                    // commissioning series.\n                    for(i = 0; i < $scope.ubuntuImages.length; i++) {\n                        if($scope.ubuntuImages[i].beingDeleted &&\n                           $scope.ubuntuImages[i].name ===\n                           $scope.bootResources.ubuntu.commissioning_series &&\n                           commissioning_series_arches === 1) {\n                            commissioning_series_being_deleted = true;\n                            break;\n                        }\n                    }\n                    return (\n                        !commissioning_series_being_deleted &&\n                        !$scope.saving &&\n                        !$scope.stopping &&\n                        $scope.ltsIsSelected());\n                };\n\n                // Return the text for the save selection button.\n                $scope.getSaveSelectionText = function() {\n                    if($scope.saving) {\n                        return \"Saving...\";\n                    } else {\n                        return \"Update selection\";\n                    }\n                };\n\n                // Return true if can stop current import.\n                $scope.canStopImport = function() {\n                    return !$scope.saving && !$scope.stopping;\n                };\n\n                // Return the text for the stop import button.\n                $scope.getStopImportText = function() {\n                    if($scope.stopping) {\n                        return \"Stopping...\";\n                    } else {\n                        return \"Stop import\";\n                    }\n                };\n\n                // Called to stop the import.\n                $scope.stopImport = function() {\n                    if(!$scope.canStopImport()) {\n                        return;\n                    }\n\n                    $scope.stopping = true;\n                    BootResourcesManager.stopImport().then(function() {\n                        $scope.stopping = false;\n                    });\n                };\n\n                // Save the selections into boot selections.\n                $scope.saveSelection = function() {\n                    if(!$scope.canSaveSelection()) {\n                        return;\n                    }\n\n                    var params = $scope.getSourceParams();\n                    params.releases = (\n                        $scope.source.selections.releases.map(function(obj) {\n                            return obj.name;\n                        }));\n                    params.arches = (\n                        $scope.source.selections.arches.map(function(obj) {\n                            return obj.name;\n                        }));\n                    $scope.saving = true;\n                    BootResourcesManager.saveUbuntu(params).then(function() {\n                        $scope.saving = false;\n                        $scope.source.isNew = false;\n                        $scope.source.selections.changed = false;\n                        $scope.updateSource();\n                    });\n                };\n\n                // Re-create an array with the new objects using the old\n                // selected array.\n                $scope.getNewSelections = function(newObjs, oldSelections) {\n                    var newSelections = [];\n                    angular.forEach(newObjs, function(obj) {\n                        angular.forEach(oldSelections, function(selection) {\n                            if(obj.name === selection.name) {\n                                newSelections.push(obj);\n                            }\n                        });\n                    });\n                    return newSelections;\n                };\n\n                // Update the source information.\n                $scope.updateSource = function() {\n                    // Do not update if the source is new.\n                    if($scope.source.isNew) {\n                        return;\n                    }\n\n                    var source_len = $scope.bootResources.ubuntu.sources.length;\n                    if(source_len === 0) {\n                        $scope.source.isNew = true;\n                        $scope.source.source_type = 'custom';\n                        $scope.source.errorMessage = (\n                            \"Currently no source exists.\");\n                    } else if(source_len === 1) {\n                        var source = $scope.bootResources.ubuntu.sources[0];\n                        $scope.source.source_type = source.source_type;\n                        if(source.source_type === \"maas.io\") {\n                            $scope.source.url = \"\";\n                            $scope.source.keyring_filename = \"\";\n                            $scope.source.keyring_data = \"\";\n                        } else {\n                            $scope.source.url = source.url;\n                            $scope.source.keyring_filename = (\n                                source.keyring_filename);\n                            $scope.source.keyring_data = source.keyring_data;\n                        }\n                        $scope.source.releases = (\n                            $scope.bootResources.ubuntu.releases);\n                        $scope.source.arches = (\n                            $scope.bootResources.ubuntu.arches);\n                        if(!$scope.source.selections.changed) {\n                            // User didn't make a change update to the\n                            // current selections server side.\n                            $scope.source.selections.releases = (\n                                $scope.source.releases.filter(function(obj) {\n                                    return obj.checked;\n                                }));\n                            $scope.source.selections.arches = (\n                                $scope.source.arches.filter(function(obj) {\n                                return obj.checked;\n                            }));\n                        } else {\n                            // Update the objects to be the new objects, with\n                            // the same selections.\n                            $scope.source.selections.releases = (\n                                $scope.getNewSelections(\n                                    $scope.source.releases,\n                                    $scope.source.selections.releases));\n                            $scope.source.selections.arches = (\n                                $scope.getNewSelections(\n                                    $scope.source.arches,\n                                    $scope.source.selections.arches));\n                        }\n                        $scope.regenerateUbuntuImages();\n                    } else {\n                        // Having more than one source prevents modification\n                        // of the sources.\n                        $scope.source.tooMany = true;\n                        $scope.source.releases = (\n                            $scope.bootResources.ubuntu.releases);\n                        $scope.source.arches = (\n                            $scope.bootResources.ubuntu.arches);\n                        $scope.source.selections.releases = (\n                            $scope.source.releases.filter(function(obj) {\n                                return obj.checked;\n                            }));\n                        $scope.source.selections.arches = (\n                            $scope.source.arches.filter(function(obj) {\n                            return obj.checked;\n                        }));\n                        $scope.source.errorMessage = (\n                            \"More than one image source exists. UI does not \" +\n                            \"support modification of sources when more than \" +\n                            \"one has been defined. Used the API to adjust \" +\n                            \"your sources.\");\n                        $scope.regenerateUbuntuImages();\n                    }\n                };\n\n                // Toggle the selection of Ubuntu Core images.\n                $scope.toggleUbuntuCoreSelection = function(image) {\n                    $scope.ubuntu_core.changed = true;\n                    image.checked = !image.checked;\n                    $scope.regenerateUbuntuCoreImages();\n                };\n\n                // Save the Ubuntu Core image selections into boot selections.\n                $scope.saveUbuntuCoreSelection = function() {\n                    var params = {\n                        images: $scope.ubuntu_core.images.filter(function(\n                                image) {\n                            return image.checked;\n                        }).map(function(image) {\n                            return image.name;\n                        })\n                    };\n                    $scope.saving = true;\n                    BootResourcesManager.saveUbuntuCore(params).then(\n                            function() {\n                        $scope.saving = false;\n                    });\n                };\n\n                // Toggle the selection of other images.\n                $scope.toggleOtherSelection = function(image) {\n                    $scope.other.changed = true;\n                    image.checked = !image.checked;\n                    $scope.regenerateOtherImages();\n                };\n\n                // Save the other image selections into boot selections.\n                $scope.saveOtherSelection = function() {\n                    var params = {\n                        images: $scope.other.images.filter(function(image) {\n                            return image.checked;\n                        }).map(function(image) {\n                            return image.name;\n                        })\n                    };\n                    $scope.saving = true;\n                    BootResourcesManager.saveOther(params).then(function() {\n                        $scope.saving = false;\n                    });\n                };\n\n                // Return True if the Ubuntu image can be removed.\n                $scope.canBeRemoved = function(image) {\n                    // Image must have a resourceId to be able to be removed.\n                    if(!angular.isNumber(image.resourceId)) {\n                        return false;\n                    }\n\n                    // If the release or architecture is set to deleted\n                    // then this image can be deleted.\n                    var i;\n                    var releases = $scope.bootResources.ubuntu.releases;\n                    var arches = $scope.bootResources.ubuntu.arches;\n                    for(i = 0; i < releases.length; i++) {\n                        var release = releases[i];\n                        if(release.deleted && image.title === release.title) {\n                            return true;\n                        }\n                    }\n                    for(i = 0; i < arches.length; i++) {\n                        var arch = arches[i];\n                        if(arch.deleted && image.arch === arch.name) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n\n                // Deletes the give image.\n                $scope.deleteImage = function(image) {\n                    if(angular.isObject(image)) {\n                        $scope.ubuntuDeleteId = image.resourceId;\n                    } else {\n                        $scope.ubuntuDeleteId = null;\n                    }\n                };\n\n                // Deletes the give image.\n                $scope.confirmDeleteImage = function() {\n                    // Delete the image by its resourceId.\n                    BootResourcesManager.deleteImage(\n                        {id: $scope.ubuntuDeleteId});\n                    $scope.ubuntuDeleteId = null;\n                };\n\n                // Start polling now that the directive is viewable and ensure\n                // the UserManager is loaded.\n                var ready = 2;\n                BootResourcesManager.startPolling().then(function() {\n                    ready -= 1;\n                    if(ready === 0) {\n                        $scope.loading = false;\n                    }\n                });\n                ManagerHelperService.loadManager(\n                    $scope, UsersManager).then(function() {\n                    ready -= 1;\n                    if(ready === 0) {\n                        $scope.loading = false;\n                    }\n                });\n\n                // Update the source information with the ubuntu source\n                // information changes.\n                $scope.$watch(\"bootResources.ubuntu\", function() {\n                    if(!angular.isObject($scope.bootResources.ubuntu)) {\n                        return;\n                    }\n                    $scope.updateSource();\n                });\n\n                // Regenerate the images array when the resources change.\n                $scope.$watch(\"bootResources.resources\", function() {\n                    if(!angular.isArray($scope.bootResources.resources)) {\n                        return;\n                    }\n                    $scope.regenerateUbuntuImages();\n                    $scope.regenerateUbuntuCoreImages();\n                    $scope.regenerateOtherImages();\n                    $scope.regenerateGeneratedImages();\n                    $scope.regenerateCustomImages();\n                });\n\n                $scope.$watch(\"bootResources.ubuntu_core_images\", function() {\n                    var images = $scope.bootResources.ubuntu_core_images;\n                    if(!angular.isArray(images)) {\n                        return;\n                    }\n                    if(!$scope.ubuntu_core.changed) {\n                        $scope.ubuntu_core.images = images;\n                    }\n                    $scope.regenerateUbuntuCoreImages();\n                });\n\n                $scope.$watch(\"bootResources.other_images\", function() {\n                    if(!angular.isArray($scope.bootResources.other_images)) {\n                        return;\n                    }\n                    if(!$scope.other.changed) {\n                        $scope.other.images = $scope.bootResources.other_images;\n                    }\n                    $scope.regenerateOtherImages();\n                });\n\n                // Stop polling when the directive is destroyed.\n                $scope.$on('$destroy', function() {\n                    BootResourcesManager.stopPolling();\n                });\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/boot_images.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Call to action directive.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the cta.html into the template cache.\n    $templateCache.put('directive/templates/cta.html', [\n      '<div class=\"p-contextual-menu\">',\n        '<button ',\n          'class=\"p-button p-contextual-menu__toggle\" ',\n          'aria-controls=\"#cta-menu\" ',\n          'aria-expanded=\"false\" ',\n          'aria-haspopup=\"true\" ',\n          'data-ng-click=\"shown=!shown\"',\n        '>',\n          '{$ getTitle() $}',\n          '<i class=\"p-icon--chevron on-right\"></i>',\n        '</button>',\n        '<div class=\"p-contextual-menu__dropdown\" ',\n          'id=\"cta-menu\" ',\n          'aria-hidden=\"false\" ',\n          'aria-label=\"submenu\"',\n          'data-ng-show=\"shown\"',\n        '>',\n          '<button ',\n            'class=\"',\n              'p-button u-no-margin--left p-contextual-menu__link',\n            '\" ',\n            'data-ng-repeat=\"select in maasCta\" ',\n            'data-ng-click=\"selectItem(select)\">',\n              '{$ getOptionTitle(select) $}',\n          '</button>',\n        '</div>',\n      '</div>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive('maasCta', function() {\n    return {\n        restrict: \"A\",\n        replace: true,\n        require: \"ngModel\",\n        scope: {\n            maasCta: '=',\n            ngModel: '='\n        },\n        templateUrl: 'directive/templates/cta.html',\n        link : function(scope, element, attrs, ngModelCtrl) {\n            // Use the link function to grab the ngModel controller.\n\n            // Title of the button when not active.\n            var defaultTitle = \"Take action\";\n            if(angular.isString(attrs.defaultTitle) &&\n                attrs.defaultTitle !== \"\") {\n                defaultTitle = attrs.defaultTitle;\n            }\n\n            // When an item is selected in the list set the title, hide the\n            // dropdown, and set the value to the given model.\n            scope.selectItem = function(select) {\n                scope.shown = false;\n                ngModelCtrl.$setViewValue(select);\n            };\n\n            // Return the title of the dropdown button.\n            scope.getTitle = function() {\n                if(angular.isObject(ngModelCtrl.$modelValue)) {\n                    option = ngModelCtrl.$modelValue;\n                    scope.secondary = true;\n                    // Some designs have the requirement that the title of\n                    // the menu option change if it is selected.\n                    if(angular.isString(option.selectedTitle)) {\n                        return option.selectedTitle;\n                    }\n                    return option.title;\n                } else {\n                    scope.secondary = false;\n                    return defaultTitle;\n                }\n            };\n\n            // Called to get the title for each option. (Sometimes the title\n            // of an option is different when it is selected.)\n            scope.getOptionTitle = function(option) {\n                if(!scope.secondary) {\n                    return option.title;\n                } else {\n                    if(angular.isString(option.selectedTitle)) {\n                        return option.selectedTitle;\n                    } else {\n                        return option.title;\n                    }\n                }\n            };\n\n            // When the model changes in the above selectItem function this\n            // function will be called causing the ngChange directive to be\n            // fired.\n            ngModelCtrl.$viewChangeListeners.push(function() {\n                scope.$eval(attrs.ngChange);\n            });\n        },\n        controller: function($scope, $rootScope, $element, $document) {\n            // Default dropdown is hidden.\n            $scope.shown = false;\n            $scope.secondary = false;\n\n            // Don't propagate the element click. This stops the click event\n            // from firing on the body element.\n            $element.bind('click', function (evt) {\n                evt.stopPropagation();\n            });\n\n            // If a click makes it to the body element then hide the dropdown.\n            $document.find('body').bind('click', function () {\n                // Use $apply because this function will be called outside\n                // of the digest cycle.\n                $rootScope.$apply($scope.shown = false);\n            });\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/call_to_action.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Controller status icon. Used in the controllers listing on the nodes page.\n */\n\nangular.module('MAAS').directive('maasCardLoader', ['$compile',\n  function($compile) {\n      return {\n          restrict: \"A\",\n          link: function(scope, element, attrs) {\n            var templateUrl = (\n                'static/partials/cards/' + attrs.maasCardLoader + (\n                  '.html?v=' + MAAS_config.files_version));\n            var include = (\n              '<ng-include src=\"\\'' + templateUrl + '\\'\"></ng-include>');\n            element.html(include);\n            $compile(element.contents())(scope);\n          }\n      };\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/card_loader.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Accordion directive.\n *\n * Provides an accordion effect to an element with maas-accordion class and\n * all child elements with maas-accordion-tab. Only one accordion tab is open\n * at a time, selecting another accordion will set \"active\" on that\n * accordion tab.\n */\n\n\n angular.module('MAAS').directive('maasCodeLines', function () {\n     return {\n         restrict: \"A\",\n         scope: {\n             maasCodeLines: '&'\n         },\n         link: function(scope, element, attributes) {\n\n             function insertContent() {\n\n                 // Empty the element contents and include again, this asures\n                 // its the most up-to-date content\n                 element.empty();\n                 element.text(scope.maasCodeLines);\n\n                 // Count the line contents\n                 var lines = element.html().split('\\n'),\n                     newLine = '',\n                     insert = \"<code>\";\n\n                 // Each line is to be wrapped by a span which is style & given\n                 // its appropriate line number\n                 $.each(lines, function() {\n                   insert += newLine + '<span class=\"code-line\">' +\n                   this + '</span>';\n                   newLine = '\\n';\n                 });\n                 insert += \"</code>\";\n\n                 // Re-insert the contents\n                 element.html(insert);\n             }\n\n             // Watch the contents of the element so when it changes to\n             // re-add the line numbers.\n             scope.$watch(scope.maasCodeLines, insertContent);\n         }\n     };\n });\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/code_lines.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Content editable directive.\n *\n * HTML provides a feature that allows any element to be editable with\n * contenteditable attribute. This directive uses that attribute to link\n * the contents of that element to a model. This directive is not prefixed\n * with maas so Angular can identify all elements with this attribute.\n */\n\n\nangular.module('MAAS').directive('contenteditable', function() {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        scope: {\n            ngDisabled: \"&\",\n            maasEditing: \"&\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n\n            // If the element is disabled then make the element lose focus.\n            var focusHandler = function() {\n                if(scope.ngDisabled()) {\n                    element.blur();\n                } else {\n                    // Didn't lose focus, so its now editing.\n                    scope.$apply(scope.maasEditing());\n                }\n            };\n            element.bind(\"focus\", focusHandler);\n\n            // Update the value of the model when events occur that\n            // can change the value of the model.\n            var changeHandler = function() {\n                scope.$apply(ngModel.$setViewValue(element.text()));\n            };\n            element.bind(\"blur keyup change\", changeHandler);\n\n            // When the model changes set the html content for that element.\n            ngModel.$render = function() {\n                element.html(ngModel.$viewValue || \"\");\n            };\n\n            // When the model changes this function will be called causing the\n            // ngChange directive to be fired.\n            ngModel.$viewChangeListeners.push(function() {\n                scope.$eval(attrs.ngChange);\n            });\n\n            // Remove the event handler on the element when the scope is\n            // destroyed.\n            scope.$on(\"$destroy\", function() {\n                element.unbind(\"blur keyup change\", changeHandler);\n                element.unbind(\"focus\", focusHandler);\n            });\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/contenteditable.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Controller image status directive.\n *\n * Shows the image status for a controller.\n */\n\n angular.module('MAAS').service('ControllerImageStatusService',\n    ['$timeout', '$interval', 'ControllersManager', function(\n        $timeout, $interval, ControllersManager) {\n     var self = this;\n\n     // How often to check the sync status of a controller in seconds.\n     var CHECK_INTERVAL = 30;\n\n     // List of controllers that need to have the image status updated.\n     this.controllers = [];\n\n     // List of current controller statues.\n     this.statuses = {};\n\n     // Interval function that is called to update the statuses.\n     this.updateStatuses = function() {\n         var controllerIds = [];\n         angular.forEach(self.controllers, function(system_id) {\n             controllerIds.push({system_id: system_id});\n         });\n\n         // Check the image states.\n         ControllersManager.checkImageStates(controllerIds).then(\n                 function(results) {\n             angular.forEach(controllerIds, function(controller) {\n                 var status = results[controller.system_id];\n                 if(status) {\n                     self.statuses[controller.system_id] = status;\n                 } else {\n                     self.statuses[controller.system_id] = \"Unknown\";\n                 }\n             });\n         });\n     };\n\n     // Register this controller system_id.\n     this.register = function(system_id) {\n         var known = self.controllers.indexOf(system_id) >= 0;\n         if(!known) {\n             self.controllers.push(system_id);\n         }\n\n         // When the interval is already running and its a new controller then\n         // the interval needs to be reset. When it already exists it doesn't\n         // need to be reset.\n         if(angular.isDefined(self.runningInterval)) {\n             if(known) {\n                 return;\n             } else {\n                 $interval.cancel(self.runningInterval);\n                 self.runningInterval = undefined;\n             }\n         }\n\n         // If its not running and the timeout has been started we re-create\n         // the timeout. This delays the start of the interval until the\n         // all directives on the page have been fully loaded.\n         if(angular.isDefined(self.startTimeout)) {\n             $timeout.cancel(self.startTimeout);\n         }\n         self.startTimeout = $timeout(function() {\n             self.startTimeout = undefined;\n             self.runningInterval = $interval(function() {\n                 self.updateStatuses();\n             }, CHECK_INTERVAL * 1000);\n             self.updateStatuses();\n         }, 100);\n     };\n\n     // Unregister the controller.\n     this.unregister = function(system_id) {\n        var idx = self.controllers.indexOf(system_id);\n        if(idx > -1) {\n            self.controllers.splice(idx, 1);\n        }\n\n        // If no controllers are left stop all intervals and timeouts.\n        if(self.controllers.length === 0) {\n            if(angular.isDefined(self.startTimeout)) {\n                $timeout.cancel(self.startTimeout);\n                self.startTimeout = undefined;\n            }\n            if(angular.isDefined(self.runningInterval)) {\n                $interval.cancel(self.runningInterval);\n                self.runningInterval = undefined;\n            }\n        }\n     };\n\n     // Return true if the spinner should be shown.\n     this.showSpinner = function(system_id) {\n         var status = self.statuses[system_id];\n         if(angular.isString(status) && status !== \"Syncing\") {\n             return false;\n         } else {\n             return true;\n         }\n     };\n\n     // Get the image status.\n     this.getImageStatus = function(system_id) {\n         var status = self.statuses[system_id];\n         if(angular.isString(status)) {\n             return status;\n         } else {\n             return \"Asking for status...\";\n         }\n     };\n}]);\n\nangular.module('MAAS').directive('maasControllerImageStatus',\n    ['ControllerImageStatusService', function(\n        ControllerImageStatusService) {\n\n    return {\n        restrict: \"E\",\n        scope: {\n            systemId: \"=\"\n        },\n        template: [\n            '<i class=\"p-icon--loading u-animation--spin\"',\n                'data-ng-if=\"showSpinner()\"></i> ',\n            '{$ getImageStatus() $}'].join(''),\n        link: function(scope, element, attrs) {\n            // Don't register until the systemId is set.\n            var unwatch, registered = false;\n            unwatch = scope.$watch(\"systemId\", function() {\n                if(angular.isDefined(scope.systemId) && !registered) {\n                    ControllerImageStatusService.register(scope.systemId);\n                    registered = true;\n                    unwatch();\n                }\n            });\n\n            scope.showSpinner = function() {\n                return ControllerImageStatusService.showSpinner(\n                    scope.systemId);\n            };\n            scope.getImageStatus = function() {\n                return ControllerImageStatusService.getImageStatus(\n                    scope.systemId);\n            };\n\n            // Unregister when destroyed.\n            scope.$on(\"$destroy\", function() {\n                if(registered) {\n                    ControllerImageStatusService.unregister(scope.systemId);\n                }\n            });\n        }\n    };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/controller_image_status.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Controller status icon. Used in the controllers listing on the nodes page.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the controller-status.html into the template cache.\n    $templateCache.put('directive/templates/controller-status.html', [\n        '<span>',\n          '<span class=\"p-icon--{$ serviceClass $}\" data-ng-if=\"!textOnly\">',\n          '</span>',\n          '<span data-ng-if=\"textOnly\" data-ng-bind=\"serviceText\"></span>',\n        '</span>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive('maasControllerStatus', [\n    \"ControllersManager\", \"ServicesManager\",\n    function(ControllersManager, ServicesManager) {\n        return {\n            restrict: \"A\",\n            scope: {\n                controller: '=maasControllerStatus',\n                textOnly: '=?maasTextOnly'\n            },\n            templateUrl: 'directive/templates/controller-status.html',\n            controller: function($scope) {\n\n                $scope.serviceClass = \"unknown\";\n                $scope.services = ServicesManager.getItems();\n                $scope.serviceText = \"\";\n                if($scope.textOnly) {\n                  $scope.textOnly = true;\n                } else {\n                  $scope.textOnly = false;\n                }\n\n                // Return the status class for the service.\n                function getClass(service) {\n                    if(service.status === \"running\") {\n                        return \"success\";\n                    } else if (service.status === \"degraded\") {\n                        return \"warning\";\n                    } else if (service.status === \"dead\") {\n                        return \"error\";\n                    } else {\n                        return \"unknown\";\n                    }\n                }\n\n                // Return the number of times class is displayed.\n                function countClass(classes, class_name) {\n                  var counter = 0;\n                  angular.forEach(classes, function(name) {\n                    if(name === class_name) {\n                      counter++;\n                    }\n                  });\n                  return counter;\n                }\n\n                // Update the class based on status of the services on the\n                // controller.\n                function updateStatusClass() {\n                    $scope.serviceClass = \"unknown\";\n                    if(angular.isObject($scope.controller)) {\n                        var services = ControllersManager.getServices(\n                            $scope.controller);\n                        if(services.length > 0) {\n                            var classes = services.map(getClass);\n                            if(classes.indexOf(\"error\") !== -1) {\n                                $scope.serviceClass = \"power-error\";\n                                $scope.serviceText = countClass(\n                                  classes, \"error\") + \" dead\";\n                            } else if(classes.indexOf(\"warning\") !== -1) {\n                                $scope.serviceClass = \"warning\";\n                                $scope.serviceText = countClass(\n                                  classes, \"warning\") + \" degraded\";\n                            } else {\n                                $scope.serviceClass = \"success\";\n                                $scope.serviceText = countClass(\n                                  classes, \"success\") + \" running\";\n                            }\n                        }\n                    }\n                }\n\n                // Watch the services array and the services on the controller,\n                // if any changes then update the status.\n                $scope.$watch(\"controller.service_ids\", updateStatusClass);\n                $scope.$watchCollection(\"services\", updateStatusClass);\n\n                // Update on creation.\n                updateStatusClass();\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/controller_status.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Double click overlay directive.\n *\n * Provides the ability for a disabled element to still accept the\n * double click event. By default if an element is disabled then it will\n * receive no click events. This overlays the element with another element\n * that will still receive click events.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the style for the maas-dbl-overlay class. We inject the style\n    // instead of placing it in maas-styles.css because it is required for\n    // this directive to work at all.\n    var styleElement = document.createElement('style');\n    styleElement.innerHTML = [\n        '.maas-dbl-overlay {',\n            'display: inline-block;',\n            'position: relative;',\n        '}',\n        '.maas-dbl-overlay--overlay {',\n            'position: absolute;',\n            'left: 0;',\n            'right: 0;',\n            'top: 0;',\n            'bottom: 0;',\n            '-webkit-touch-callout: none;',\n            '-webkit-user-select: none;',\n            '-khtml-user-select: none;',\n            '-moz-user-select: none;',\n            '-ms-user-select: none;',\n            'user-select: none;',\n        '}'\n    ].join('');\n    document.getElementsByTagName('head')[0].appendChild(styleElement);\n\n    // Inject the double_click_overlay.html into the template cache.\n    $templateCache.put('directive/templates/double_click_overlay.html', [\n        '<div class=\"maas-dbl-overlay\">',\n            '<span data-ng-transclude></span>',\n            '<div class=\"maas-dbl-overlay--overlay\"></div>',\n        '</div>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive('maasDblClickOverlay', ['BrowserService',\n    function(BrowserService) {\n        return {\n            restrict: \"A\",\n            transclude: true,\n            replace: true,\n            scope: {\n                maasDblClickOverlay: '&'\n            },\n            templateUrl: 'directive/templates/double_click_overlay.html',\n            link: function(scope, element, attrs) {\n                // Create the click function that will be called when the\n                // overlay is clicked. This changes based on the element that\n                // is transcluded into this directive.\n                var overlay = element.find(\".maas-dbl-overlay--overlay\");\n                var transclude = element.find(\n                    \"span[data-ng-transclude]\").children()[0];\n                var clickElement;\n                if(transclude.tagName === \"SELECT\") {\n                    clickElement = function() {\n                        // Have to create a custom mousedown event for the\n                        // select click to be handled. Using 'click()' or\n                        //'focus()' will not work.\n                        var evt = document.createEvent('MouseEvents');\n                        evt.initMouseEvent(\n                            'mousedown', true, true, window, 0, 0, 0, 0, 0,\n                            false, false, false, false, 0, null);\n                        transclude.dispatchEvent(evt);\n                    };\n\n                    // Selects use a pointer for the cursor.\n                    overlay.css({ cursor: \"pointer\" });\n                } else if(transclude.tagName === \"INPUT\") {\n                    clickElement = function() {\n                        // An input will become in focus when clicked.\n                        angular.element(transclude).triggerHandler('focus');\n                    };\n\n                    // Inputs use a text for the cursor.\n                    overlay.css({ cursor: \"text\" });\n                } else {\n                    clickElement = function() {\n                        // Standard element just call click on that element.\n                        angular.element(transclude).triggerHandler('click');\n                    };\n\n                    // Don't set cursor on other element types.\n                }\n\n                // Add the click and double click handlers.\n                var overlayClick = function(evt) {\n                    clickElement();\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                };\n                var overlayDblClick = function(evt) {\n                    // Call the double click handler with in the scope.\n                    scope.$apply(scope.maasDblClickOverlay);\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                };\n\n                // Enable the handlers if not Firefox. It firefox, then hide\n                // the overlay as Firefox does not allow sending click events\n                // to select elements.\n                if(BrowserService.browser !== \"firefox\") {\n                    overlay.on(\"click\", overlayClick);\n                    overlay.on(\"dblclick\", overlayDblClick);\n                } else {\n                    overlay.addClass(\"ng-hide\");\n                }\n\n                // Remove the handlers when the scope is destroyed.\n                scope.$on(\"$destroy\", function() {\n                    overlay.off(\"click\", overlayClick);\n                    overlay.off(\"dblclick\", overlayDblClick);\n                });\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/dbl_click_overlay.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Enter blur directive.\n *\n * When the enter key is pressed make the element lose focus (aka. blur event).\n */\n\n\nangular.module('MAAS').directive('maasEnterBlur', function() {\n    return {\n        restrict: \"A\",\n        link: function(scope, element, attrs) {\n            element.bind(\"keydown keypress\", function(evt) {\n                if(evt.which === 13) {\n                    element.blur();\n                    evt.preventDefault();\n                }\n            });\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/enter_blur.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n*/\n\nangular.module('MAAS').directive('maasEnter', function () {\n    return {\n        restrict: \"A\",\n        link: function (scope, element, attrs) {\n            element.bind(\"keydown keypress\", function (evt) {\n                if(evt.which === 13) {\n                    scope.$apply(function () {\n                        scope.$eval(attrs.maasEnter);\n                    });\n                    evt.preventDefault();\n                }\n            });\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/enter.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Error overlay.\n *\n * Directive overrides the entire transcluded element if an error occurs or\n * connection to the region over the websocket fails or becomes disconnected.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the error_overlay.html into the template cache.\n    $templateCache.put('directive/templates/error_overlay.html', [\n        '<header id=\"error-header\" class=\"page-header\" data-ng-show=\"show()\">',\n            '<div class=\"row\">',\n                '<h1 class=\"page-header__title\">',\n                    '<span class=\"p-icon--loading u-animation--spin ',\n                        'u-margin--right-small\"',\n                        'data-ng-hide=\"clientError\"></span>',\n                    '{$ getTitle() $}',\n                '</h1>',\n                '<div class=\"page-header__controls\">',\n                    '<button class=\"button--secondary button--inline\"',\n                        'data-ng-click=\"reload()\"',\n                        'data-ng-show=\"clientError\">Reload</button>',\n                '</div>',\n                '<div class=\"page-header__dropdown is-open\" ',\n                    'data-ng-show=\"error\">',\n                    '<div class=\"page-header__section twelve-col',\n                        'u-margin--bottom-none\">',\n                        '<p class=\"page-header__message',\n                                  'page-header__message--error\">',\n                            '{$ error $}',\n                        '</p>',\n                    '</div>',\n                '</div>',\n            '</div>',\n        '</header>',\n        '<div class=\"ng-hide u-no-margin--top\" data-ng-hide=\"show()\">',\n            '<div data-ng-transclude></div>',\n        '</div>'\n    ].join(''));\n\n    // Preload the svg and png error icon. Its possible that it has never been\n    // loaded by the browser and if the region connection goes down and the\n    // directive gets shown with an error the icon will be missing.\n    //\n    // Note: This is skipped if unit testing because it will throw 404 errors\n    // continuously.\n    if(!angular.isDefined(window.jasmine)) {\n        var image = new Image();\n        image.src = \"static/assets/images/icons/error.svg\";\n        image = new Image();\n        image.src = \"static/assets/images/icons/error.png\";\n    }\n}]);\n\nangular.module('MAAS').directive('maasErrorOverlay', [\n    '$window', '$timeout', 'RegionConnection', 'ErrorService',\n    function($window, $timeout, RegionConnection, ErrorService) {\n        return {\n            restrict: \"A\",\n            transclude: true,\n            scope: true,\n            templateUrl: 'directive/templates/error_overlay.html',\n            link: function(scope, element, attrs) {\n\n                scope.connected = false;\n                scope.showDisconnected = false;\n                scope.clientError = false;\n                scope.wasConnected = false;\n\n                // Holds the promise that sets showDisconnected to true. Will\n                // be cleared when the scope is destroyed.\n                var markDisconnected;\n\n                // Returns true when the overlay should be shown.\n                scope.show = function() {\n                    // Always show if clientError.\n                    if(scope.clientError) {\n                        return true;\n                    }\n                    // Never show if connected.\n                    if(scope.connected) {\n                        return false;\n                    }\n                    // Never been connected then always show.\n                    if(!scope.wasConnected) {\n                        return true;\n                    }\n                    // Not connected.\n                    return scope.showDisconnected;\n                };\n\n                // Returns the title for the header.\n                scope.getTitle = function() {\n                    if(scope.clientError) {\n                        return \"Error occurred\";\n                    } else if(scope.wasConnected) {\n                        return \"Connection lost, reconnecting...\";\n                    } else {\n                        return \"Connecting...\";\n                    }\n                };\n\n                // Called to reload the page.\n                scope.reload = function() {\n                    $window.location.reload();\n                };\n\n                // Called to when the connection status of the region\n                // changes. Updates the scope connected and error values.\n                var watchConnection = function() {\n                    // Do nothing if already a client error.\n                    if(scope.clientError) {\n                        return;\n                    }\n\n                    // Set connected and the time it changed.\n                    var connected = RegionConnection.isConnected();\n                    if(connected !== scope.connected) {\n                        scope.connected = connected;\n                        if(!connected) {\n                            scope.showDisconnected = false;\n\n                            // Show disconnected after 1/2 second. This removes\n                            // the flicker that can occur, if it disconnecets\n                            // and reconnected quickly.\n                            markDisconnected = $timeout(function() {\n                                scope.showDisconnected = true;\n                                markDisconnected = undefined;\n                            }, 500);\n                        }\n                    }\n\n                    // Set error and whether of not the connection\n                    // has ever been made.\n                    scope.error = RegionConnection.error;\n                    if(!scope.wasConnected && connected) {\n                        scope.wasConnected = true;\n                    }\n                };\n\n                // Watch the isConnected and error value on the\n                // RegionConnection.\n                scope.$watch(function() {\n                    return RegionConnection.isConnected();\n                }, watchConnection);\n                scope.$watch(function() {\n                    return RegionConnection.error;\n                }, watchConnection);\n\n                // Called then the error value on the ErrorService changes.\n                var watchError = function() {\n                    var error = ErrorService._error;\n                    if(angular.isString(error)) {\n                        scope.clientError = true;\n                        scope.error = ErrorService._error;\n                    }\n                };\n\n                // Watch _error on the ErrorService.\n                scope.$watch(function() {\n                    return ErrorService._error;\n                }, watchError);\n\n                // Cancel the timeout on scope destroy.\n                scope.$on(\"$destroy\", function() {\n                    if(angular.isDefined(markDisconnected)) {\n                        $timeout.cancel(markDisconnected);\n                    }\n                });\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/error_overlay.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Error toggle.\n *\n * Hides the element if an error occurs or no connection to the region\n * is present.\n */\n\nangular.module('MAAS').directive('maasErrorToggle', [\n    '$timeout', 'RegionConnection', 'ErrorService',\n    function($timeout, RegionConnection, ErrorService) {\n        return {\n            restrict: \"A\",\n            link: function(scope, element, attrs) {\n\n                // Holds timeout promise for setting ng-hide when\n                // connection is lost.\n                var disconnectedPromise;\n\n                // Cancel the disconnected timeout.\n                var cancelTimeout = function() {\n                    if(angular.isDefined(disconnectedPromise)) {\n                        $timeout.cancel(disconnectedPromise);\n                        disconnectedPromise = undefined;\n                    }\n                };\n\n                // Called to when the connection status of the region\n                // changes or the error on the ErrorService is set.\n                // The element is shown when connected and no errors.\n                var watchConnectionAndError = function() {\n                    var connected = RegionConnection.isConnected();\n                    var error = ErrorService._error;\n                    if(connected && !angular.isString(error)) {\n                        cancelTimeout();\n                        element.removeClass(\"ng-hide\");\n                    } else if(angular.isString(error)) {\n                        cancelTimeout();\n                        element.addClass(\"ng-hide\");\n                    } else if(!connected) {\n                        // Hide the element after 1/2 second. This stops\n                        // flickering when the connection goes down and\n                        // reconnects quickly.\n                        cancelTimeout();\n                        disconnectedPromise = $timeout(function() {\n                            element.addClass(\"ng-hide\");\n                        }, 500);\n                    }\n                };\n\n                // Watch the RegionConnection.isConnected() and\n                // ErrorService._error value.\n                scope.$watch(function() {\n                    return RegionConnection.isConnected();\n                }, watchConnectionAndError);\n                scope.$watch(function() {\n                    return ErrorService._error;\n                }, watchConnectionAndError);\n\n                // Cancel disconnect timeout on destroy.\n                scope.$on(\"$destroy\", function() {\n                    cancelTimeout();\n                });\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/error_toggle.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * IP Ranges directive.\n*/\n\nangular.module('MAAS').directive('maasIpRanges', [\n    '$filter', 'IPRangesManager', 'UsersManager',\n    'ManagerHelperService', 'ConverterService', function(\n        $filter, IPRangesManager, UsersManager, ManagerHelperService,\n        ConverterService) {\n        return {\n            restrict: \"E\",\n            scope: {\n                subnet: \"=\",\n                vlan: \"=\"\n            },\n            templateUrl: (\n                'static/partials/ipranges.html?v=' + (\n                    MAAS_config.files_version)),\n            controller: function($scope, $rootScope, $element, $document) {\n                $scope.loading = true;\n                $scope.ipranges = IPRangesManager.getItems();\n                $scope.iprangeManager = IPRangesManager;\n                $scope.newRange = null;\n                $scope.editIPRange = null;\n                $scope.deleteIPRange = null;\n\n                // Return true if the authenticated user is super user.\n                $scope.isSuperUser = function() {\n                    return UsersManager.isSuperUser();\n                };\n\n                // Called to start adding a new IP range.\n                $scope.addRange = function(type) {\n                    $scope.newRange = {\n                        type: type,\n                        start_ip: \"\",\n                        end_ip: \"\",\n                        comment: \"\"\n                    };\n                    if(angular.isObject($scope.subnet)) {\n                        $scope.newRange.subnet = $scope.subnet.id;\n                    }\n                    if(angular.isObject($scope.vlan)) {\n                        $scope.newRange.vlan = $scope.vlan.id;\n                    }\n                    if(type === \"dynamic\") {\n                        $scope.newRange.comment = \"Dynamic\";\n                    }\n                };\n\n                // Cancel adding the new IP range.\n                $scope.cancelAddRange = function() {\n                    $scope.newRange = null;\n                };\n\n                // Return true if the IP range can be modified by the\n                // authenticated user.\n                $scope.ipRangeCanBeModified = function(range) {\n                    if($scope.isSuperUser()) {\n                        return true;\n                    } else {\n                        // Can only modify reserved and same user.\n                        return (\n                            range.type === \"reserved\" &&\n                            range.user === UsersManager.getAuthUser().id);\n                    }\n                };\n\n                // Return true if the IP range is in edit mode.\n                $scope.isIPRangeInEditMode = function(range) {\n                    return $scope.editIPRange === range;\n                };\n\n                // Toggle edit mode for the IP range.\n                $scope.ipRangeToggleEditMode = function(range) {\n                    $scope.deleteIPRange = null;\n                    if($scope.isIPRangeInEditMode(range)) {\n                        $scope.editIPRange = null;\n                    } else {\n                        $scope.editIPRange = range;\n                    }\n                };\n\n                // Clear edit mode for the IP range.\n                $scope.ipRangeClearEditMode = function() {\n                    $scope.editIPRange = null;\n                };\n\n                // Return true if the IP range is in delete mode.\n                $scope.isIPRangeInDeleteMode = function(range) {\n                    return $scope.deleteIPRange === range;\n                };\n\n                // Enter delete mode for the IP range.\n                $scope.ipRangeEnterDeleteMode = function(range) {\n                    $scope.editIPRange = null;\n                    $scope.deleteIPRange = range;\n                };\n\n                // Exit delete mode for the IP range.\n                $scope.ipRangeCancelDelete = function() {\n                    $scope.deleteIPRange = null;\n                };\n\n                // Perform the delete operation on the IP range.\n                $scope.ipRangeConfirmDelete = function() {\n                    IPRangesManager.deleteItem(\n                        $scope.deleteIPRange).then(function() {\n                            $scope.deleteIPRange = null;\n                    });\n                };\n\n                // Sort ranges by starting IP address.\n                $scope.ipRangeSort = function(range) {\n                    if(range.start_ip.indexOf(':') !== -1) {\n                        return ConverterService.ipv6Expand(range.start_ip);\n                    } else {\n                        return ConverterService.ipv4ToInteger(range.start_ip);\n                    }\n                };\n\n                // Load the reqiured managers.\n                ManagerHelperService.loadManagers($scope, [\n                    IPRangesManager, UsersManager]).then(\n                        function() {\n                            $scope.loading = false;\n                        });\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/ipranges.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS object directive.\n *\n * Directive that connects a field to an object from the websocket. The field\n * is an instant save on blur.\n */\n\nangular.module('MAAS').directive('maasObjForm', ['JSONService',\n    function(JSONService) {\n        function MAASFormController(scope) {\n            this.obj = scope.obj;\n            this.manager = scope.manager;\n            this.fields = {};\n            this.scope = scope;\n            this.scope.saving = false;\n            this.scope.savingKeys = [];\n            if(angular.isObject(this.scope.obj)) {\n                this.scope.obj.$maasForm = this;\n            }\n\n            // Set the managerMethod.\n            this.managerMethod = scope.managerMethod;\n            if(angular.isUndefined(this.managerMethod)) {\n                this.managerMethod = \"updateItem\";\n            }\n\n            var self = this;\n            scope.$watch(\"obj\", function() {\n                // Update the object when it changes.\n                self.obj = scope.obj;\n                if(angular.isObject(self.obj)) {\n                    self.obj.$maasForm = self;\n                }\n            });\n            scope.$on(\"$destroy\", function() {\n                // Remove the $maasForm from the object when directive is\n                // deleted.\n                if(angular.isObject(self.obj)) {\n                    delete self.obj.$maasForm;\n                }\n            });\n        }\n\n        // Get the current value for a field in the form.\n        MAASFormController.prototype.getValue = function (key) {\n            var field = this.fields[key];\n            if(angular.isObject(field) && angular.isObject(field.scope)) {\n                return field.scope.getValue();\n            }\n        };\n\n        // Update the current value for a field in the form.\n        MAASFormController.prototype.updateValue = function (key, value) {\n            var field = this.fields[key];\n            if(angular.isObject(field) && angular.isObject(field.scope)) {\n                return field.scope.updateValue(value);\n            }\n        };\n\n        // Clone the current object for this form without the $maasForm\n        // property set.\n        MAASFormController.prototype.cloneObject = function() {\n            if(!angular.isObject(this.obj)) {\n                return this.obj;\n            } else {\n                delete this.obj.$maasForm;\n                var clonedObj = angular.copy(this.obj);\n                this.obj.$maasForm = this;\n                return clonedObj;\n            }\n        };\n\n        // Return true if table form.\n        MAASFormController.prototype.isTableForm = function () {\n            if(angular.isUndefined(this.scope.tableForm)) {\n                // Default is not a table form.\n                return false;\n            } else {\n                return this.scope.tableForm;\n            }\n        };\n\n        // Return true if the form should be saved on blur.\n        MAASFormController.prototype.saveOnBlur = function() {\n            if(angular.isUndefined(this.scope.saveOnBlur)) {\n                // Default is save on blur.\n                return true;\n            } else {\n                return this.scope.saveOnBlur;\n            }\n        };\n\n        // Return true if the form is saving this field.\n        MAASFormController.prototype.isSaving = function(key) {\n            return (\n                this.scope.saving && this.scope.savingKeys.indexOf(key) >= 0);\n        };\n\n        // Return true if the input should show the saving spinner. This is\n        // only show on inputs in forms that are using save on blur.\n        MAASFormController.prototype.showInputSaving = function(key) {\n            return this.saveOnBlur() && this.isSaving(key);\n        };\n\n        // Return true if any field in the form as an error.\n        MAASFormController.prototype.hasErrors = function() {\n            var hasErrors = false;\n            angular.forEach(this.fields, function(field) {\n                if(field.scope.hasErrors()) {\n                    hasErrors = true;\n                }\n            });\n            if(angular.isDefined(this.errorScope)) {\n                if(this.errorScope.hasErrors()) {\n                    hasErrors = true;\n                }\n            }\n            return hasErrors;\n        };\n\n        // Called by maas-obj-field to register it as a editable field.\n        MAASFormController.prototype.registerField = function(key, scope) {\n            // Store the state of the field and its scope.\n            this.fields[key] = {\n                editing: false,\n                scope: scope\n            };\n\n            // Watch for changes on the value of the object.\n            var self = this;\n            this.scope.$watch(\"obj.\" + key, function() {\n                if(angular.isObject(self.obj) && !self.fields[key].editing) {\n                    self.fields[key].scope.updateValue(self.obj[key]);\n                }\n            });\n\n            // Return the current value for the field.\n            if(angular.isObject(this.obj)) {\n                return this.obj[key];\n            } else {\n                return null;\n            }\n        };\n\n        // Called by maas-obj-field to unregister it as a editable field.\n        MAASFormController.prototype.unregisterField = function(key) {\n            delete this.fields[key];\n        };\n\n        // Called by maas-obj-field to place field in edit mode.\n        MAASFormController.prototype.startEditingField = function(key) {\n            this.fields[key].editing = true;\n        };\n\n        // Called by maas-obj-field to end edit mode for the field.\n        MAASFormController.prototype.stopEditingField = function(key, value) {\n            var field = this.fields[key];\n\n            // Do nothing if not save on blur.\n            if(!this.saveOnBlur()) {\n                field.editing = false;\n                return;\n            }\n\n            // Clear errors before saving.\n            field.scope.clearErrors();\n\n            // Copy the object and update the editing field.\n            var updatedObj = this.cloneObject();\n            updatedObj[key] = value;\n            if(updatedObj[key] === this.obj[key]) {\n                // Nothing changed.\n                field.editing = false;\n                return;\n            }\n\n            // Update the item in the manager.\n            this.scope.saving = true;\n            this.scope.savingKeys = [key];\n            this.updateItem(updatedObj, [key]);\n        };\n\n        // Update the item using the manager.\n        MAASFormController.prototype.updateItem = function(updatedObj, keys) {\n            var key = keys[0];\n            var field = this.fields[key];\n            var self = this;\n\n            // Pre-process the updatedObj if one is defined.\n            if(angular.isFunction(this.scope.preProcess)) {\n                updatedObj = this.scope.preProcess(updatedObj, keys);\n            }\n\n            // Update the item with the manager.\n            return this.manager[this.managerMethod](\n                updatedObj).then(function(newObj) {\n                    // Update the value of the element.\n                    field.editing = false;\n                    field.scope.updateValue(newObj[key]);\n                    self.scope.saving = false;\n                    self.scope.savingKeys = [];\n                    if(angular.isFunction(self.scope.afterSave)) {\n                        self.scope.afterSave(newObj);\n                    }\n                    return newObj;\n                }, function(error) {\n                    var errorJson = JSONService.tryParse(error);\n                    if(angular.isObject(errorJson)) {\n                        // Add the error to each field it matches.\n                        angular.forEach(errorJson, function(value, key) {\n                            var errorField = self.fields[key];\n                            if(!angular.isArray(value)) {\n                                value = [value];\n                            }\n\n                            if(angular.isObject(errorField)) {\n                                // Error on a field we know about, place the\n                                // error on that field.\n                                errorField.scope.setErrors(value);\n                            } else {\n                                // Error on a field we don't know about, place\n                                // the error on the editing field. Prefixing\n                                // the error with the field.\n                                if(key !== \"__all__\") {\n                                    value = value.map(function(v) {\n                                        return key + \": \" + v;\n                                    });\n                                }\n                                field.scope.setErrors(value);\n                            }\n                        });\n                    } else {\n                        // Add the string error to just the field error.\n                        field.scope.setErrors([error]);\n                    }\n                    self.scope.saving = false;\n                    self.scope.savingKeys = [];\n                    return error;\n                });\n        };\n\n        // Called when saveOnBlur is false to save the whole form.\n        MAASFormController.prototype.saveForm = function () {\n            var keys = [];\n            var updatedObj = this.cloneObject();\n            angular.forEach(this.fields, function(value, key) {\n                value.scope.clearErrors();\n                var newValue = value.scope.getValue();\n                if(angular.isDefined(newValue) &&\n                    updatedObj[key] !== newValue) {\n                    updatedObj[key] = newValue;\n                    keys.push(key);\n                }\n            });\n\n\n            // Pre-process the updatedObj if one is defined.\n            if(angular.isFunction(this.scope.preProcess)) {\n                updatedObj = this.scope.preProcess(updatedObj, keys);\n            }\n\n            // Clear the errors on the errorScope before save.\n            if(angular.isDefined(this.errorScope)) {\n                this.errorScope.clearErrors();\n            }\n\n            var self = this;\n            this.scope.saving = true;\n            this.scope.savingKeys = keys;\n            return this.manager[this.managerMethod](\n                updatedObj).then(function(newObj) {\n                    self.scope.saving = false;\n                    self.scope.savingKeys = [];\n                    if(angular.isFunction(self.scope.afterSave)) {\n                        self.scope.afterSave(newObj);\n                    }\n                    return newObj;\n                }, function(error) {\n                    var errorJson = JSONService.tryParse(error);\n                    if(angular.isObject(errorJson)) {\n                        // Add the error to each field it matches.\n                        angular.forEach(errorJson, function(value, key) {\n                            var errorField = self.fields[key];\n                            if(!angular.isArray(value)) {\n                                value = [value];\n                            }\n\n                            if(angular.isObject(errorField)) {\n                                // Error on a field we know about, place the\n                                // error on that field.\n                                errorField.scope.setErrors(value);\n                            } else {\n                                if(key !== \"__all__\") {\n                                    value = value.map(function(v) {\n                                        return key + \": \" + v;\n                                    });\n                                }\n                                // Error on a field we don't know about, place\n                                // the error on errorScope if set.\n                                if(angular.isDefined(self.errorScope)) {\n                                    self.errorScope.setErrors(value);\n                                } else {\n                                    // No error scope, just log to console.\n                                    console.log(value);\n                                }\n                            }\n                        });\n                    } else {\n                        // Add the string error to just the field error.\n                        if(angular.isDefined(self.errorScope)) {\n                            self.errorScope.setErrors([error]);\n                        } else {\n                            // No error scope, just log to console.\n                            console.log(error);\n                        }\n                    }\n                    self.scope.saving = false;\n                    self.scope.savingKeys = [];\n                    return error;\n                });\n        };\n\n        return {\n            restrict: \"E\",\n            scope: {\n                obj: \"=\",\n                manager: \"=\",\n                managerMethod: \"@\",\n                preProcess: \"=\",\n                afterSave: \"=\",\n                tableForm: \"=\",\n                saveOnBlur: \"=\",\n                inline: \"=\",\n                ngDisabled: \"&\"\n            },\n            transclude: true,\n            template: (\n                '<form class=\"p-form\" data-ng-class=\"{saving: saving, ' +\n                '\\'p-form--inline\\': inline, ' +\n                '\\'p-form--stacked\\': tableForm}\" ' +\n                'ng-transclude></form>'),\n            controller: ['$scope', MAASFormController]\n        };\n    }]);\n\nangular.module('MAAS').directive('maasObjFieldGroup', ['JSONService',\n    function(JSONService) {\n        // Controller for this directive.\n        function MAASGroupController(scope, timeout) {\n            this.fields = {};\n            this.scope = scope;\n            this.scope.saving = false;\n            this.scope.savingKeys = [];\n            this.timeout = timeout;\n\n            var self = this;\n            this.scope.isEditing = function() {\n                var editing = false;\n                angular.forEach(self.fields, function(value) {\n                    if(!editing) {\n                        editing = value.editing;\n                    }\n                });\n                return editing;\n            };\n        }\n\n        // Return true if table form.\n        MAASGroupController.prototype.isTableForm = function () {\n            return this.formController.isTableForm();\n        };\n\n        // Return true if should save on blur.\n        MAASGroupController.prototype.saveOnBlur = function () {\n            return this.formController.saveOnBlur();\n        };\n\n        // Return true if group is saving.\n        MAASGroupController.prototype.isSaving = function(key) {\n            return (\n                this.scope.saving && this.scope.savingKeys.indexOf(key) >= 0);\n        };\n\n        // Return true if the input should show the saving spinner. This is\n        // only show on inputs in forms that are using save on blur.\n        MAASGroupController.prototype.showInputSaving = function(key) {\n            // In a group we say the entire group is saving, not just that\n            // one key in the field is being saved.\n            return this.saveOnBlur() && this.scope.saving;\n        };\n\n        // Called by maas-obj-field to register it as a editable field.\n        MAASGroupController.prototype.registerField = function(key, scope) {\n            // Store the state of the field and its scope.\n            this.fields[key] = {\n                editing: false,\n                scope: scope\n            };\n            return this.formController.registerField(key, scope);\n        };\n\n        // Called by maas-obj-field to unregister it as a editable field.\n        MAASGroupController.prototype.unregisterField = function(key) {\n            delete this.fields[key];\n            this.formController.unregisterField(key);\n        };\n\n        // Called by maas-obj-field to place field in edit mode.\n        MAASGroupController.prototype.startEditingField = function(key) {\n            this.fields[key].editing = true;\n\n            // Set all fields in the group as editing in the formController.\n            var self = this;\n            angular.forEach(this.fields, function(value, key) {\n                self.formController.startEditingField(key);\n            });\n        };\n\n        // Called by maas-obj-field to exit edit mode for the field.\n        MAASGroupController.prototype.stopEditingField = function(key, value) {\n            var field = this.fields[key];\n            field.editing = false;\n\n            // Exit early if not save on blur.\n            if(!this.saveOnBlur()) {\n                return;\n            }\n\n            // Delay the handling of stop to make sure start is not called on\n            // the next field in the group.\n            var self = this;\n            this.timeout(function() {\n                // If any other fields are in edit mode then nothing to do.\n                var editing = false;\n                angular.forEach(self.fields, function(value) {\n                    if(!editing) {\n                        editing = value.editing;\n                    }\n                });\n                if(editing) {\n                    return;\n                }\n\n                // Copy the object and update the editing fields.\n                var keys = [];\n                var changed = false;\n                var updatedObj = self.formController.cloneObject();\n                angular.forEach(self.fields, function(value, key) {\n                    value.scope.clearErrors();\n                    var newValue = value.scope.getValue();\n                    if(angular.isDefined(newValue) &&\n                        updatedObj[key] !== newValue) {\n                        keys.push(key);\n                        updatedObj[key] = newValue;\n                        changed = true;\n                    }\n                });\n                if(!changed) {\n                    return;\n                }\n\n                // Place the field that actually triggered the update first.\n                var keyIdx = keys.indexOf(key);\n                if(keyIdx !== -1) {\n                    keys.splice(keyIdx, 1);\n                    keys.splice(0, 0, key);\n                }\n\n                // Save the object.\n                self.scope.saving = true;\n                self.scope.savingKeys = keys;\n                self.formController.updateItem(updatedObj, keys).then(\n                    function(obj) {\n                      self.scope.saving = false;\n                      self.scope.savingKeys = [];\n                      return obj;\n                  }, function(error) {\n                      self.scope.saving = false;\n                      self.scope.savingKeys = [];\n                      return error;\n                  });\n            }, 10); // Really short has to be next click.\n        };\n\n        return {\n            restrict: \"E\",\n            require: [\"^^maasObjForm\", \"maasObjFieldGroup\"],\n            scope: {},\n            transclude: true,\n            template: (\n                '<div class=\"form__siblings\" ' +\n                'data-ng-class=\"{\\'is-active\\': isEditing()}\" ' +\n                'data-ng-transclude></div>'),\n            controller: ['$scope', '$timeout', MAASGroupController],\n            link: {\n                pre: function(scope, element, attrs, controllers) {\n                    // Set formController on the MAASGroupController to\n                    // point to its parent MAASFormController. This is done in\n                    // pre-link so the controller has the formController before\n                    // registerField is called.\n                    controllers[1].formController = controllers[0];\n\n                    // Set ngDisabled on this scope from the form controller.\n                    scope.ngDisabled = controllers[0].scope.ngDisabled;\n\n                    // Set the object to always be the same on the scope.\n                    controllers[0].scope.$watch(\"obj\", function(obj) {\n                        scope.obj = obj;\n                    });\n                }\n            }\n        };\n    }]);\n\nangular.module('MAAS').directive('maasObjField', ['$compile',\n    function($compile) {\n        return {\n            restrict: \"E\",\n            require: [\"^^maasObjForm\", \"?^^maasObjFieldGroup\"],\n            scope: {\n                onChange: \"=\",\n                subtleText: \"@\"\n            },\n            transclude: true,\n            template: (\n                '<div data-ng-transclude></div>'),\n            link: function(scope, element, attrs, controllers) {\n                // Select the controller based on which is available.\n                var controller = controllers[1];\n                if(!angular.isObject(controller)) {\n                    controller = controllers[0];\n                }\n\n                // Set ngDisabled from the parent controller.\n                scope.ngDisabled = controller.scope.ngDisabled;\n\n                element.addClass(\"p-form__group\");\n                if(attrs.subtle !== \"false\") {\n                    element.addClass(\"form__group--subtle\");\n                }\n\n                // type and key required.\n                var missingAttrs = [];\n                if(!angular.isString(attrs.type) && attrs.type.length === 0) {\n                    missingAttrs.push(\"type\");\n                }\n                if(!angular.isString(attrs.key) && attrs.key.length === 0) {\n                    missingAttrs.push(\"key\");\n                }\n                if(missingAttrs.length > 0) {\n                    throw new Error(\n                        missingAttrs.join(\", \") +\n                        \" are required on maas-obj-field.\");\n                }\n\n                // Remove transcluded element.\n                element.find(\"div\").remove();\n\n                // Render the label.\n                var label = attrs.label || attrs.key;\n\n                if(attrs.disableLabel !== \"true\") {\n                    var labelElement = angular.element('<label/>');\n                    labelElement.attr('for', attrs.key);\n                    labelElement.text(label);\n                    labelElement.addClass('p-form__label');\n                    if(attrs.labelWidth) {\n                        labelElement.addClass(\"col-\" + attrs.labelWidth);\n                    } else {\n                        labelElement.addClass(\"u-margin--right\");\n                    }\n                    if(attrs.labelLeft === \"true\") {\n                        labelElement.addClass('u-padding--left');\n                        labelElement.addClass('u-position--relative');\n                    }\n                    element.append(labelElement);\n\n                    // Add a label info icon with tooltip.\n                    if(angular.isString(attrs.labelInfo)\n                            && attrs.labelInfo.length > 0) {\n                        var infoWrapper = angular.element(\n                            '<span>&nbsp;</span>');\n                        infoWrapper.addClass('p-tooltip p-tooltip--btm-right');\n\n                        var infoIcon = angular.element('<i/>');\n                        infoIcon.addClass('p-icon--information');\n                        infoIcon.attr(\n                            'aria-describedby', attrs.key + '-tooptip');\n\n                        var infoTooltip = angular.element('<p></p>');\n                        infoTooltip.addClass('p-tooltip__message');\n                        infoTooltip.text(attrs.labelInfo);\n                        infoTooltip.attr('id', attrs.key + '-tooptip');\n\n                        infoWrapper.append(infoIcon);\n                        infoWrapper.append(infoTooltip);\n\n                        labelElement.append(infoWrapper);\n\n                        // prevents the icon from being clickable\n                        infoIcon.bind('click', function (evt) {\n                            evt.preventDefault();\n                        });\n                    }\n                }\n\n                // Add the wrapper for the input.\n                var inputWrapper = angular.element('<div></div>');\n                inputWrapper.addClass(\"p-form__control\");\n\n                if(attrs.inputWidth) {\n                    inputWrapper.addClass(\"col-\" + attrs.inputWidth);\n                }\n\n                // Render the input based on the type.\n                var placeholder = attrs.placeholder || label;\n                var inputElement = null;\n                if(attrs.type === \"text\" || attrs.type === \"textarea\" ||\n                   attrs.type === \"password\") {\n                    if(attrs.type === \"text\") {\n                        inputElement = $compile(\n                            '<input type=\"text\" id=\"' + attrs.key +\n                            '\" placeholder=\"' + placeholder + '\"' +\n                            'data-ng-disabled=\"ngDisabled()\">')(scope);\n                    } else if(attrs.type === \"textarea\") {\n                        inputElement = $compile(\n                            '<textarea id=\"' + attrs.key +\n                            '\" placeholder=\"' + placeholder + '\"' +\n                            'data-ng-disabled=\"ngDisabled()\">' +\n                                '</textarea>')(scope);\n                    } else if(attrs.type === \"password\") {\n                        inputElement = $compile(\n                            '<input type=\"password\" id=\"' + attrs.key +\n                            '\" placeholder=\"' + placeholder + '\"' +\n                            'data-ng-disabled=\"ngDisabled()\">')(scope);\n                    }\n\n                    // Allow enter on blur, by default.\n                    if(attrs.blurOnEnter) {\n                        inputElement.bind(\"keydown keypress\", function(evt) {\n                            if(evt.which === 13) {\n                                inputElement.blur();\n                                evt.preventDefault();\n                            }\n                        });\n                    }\n\n                    // Revert value on esc.\n                    var self = this;\n                    inputElement.bind(\"keydown keypress\", function(evt) {\n                        if(evt.which === 27) {\n                            inputElement.val(controller.scope.obj[attrs.key]);\n                            inputElement.blur();\n                            evt.preventDefault();\n                        }\n                    });\n\n                    // Register the field with the controller and set the\n                    // current value for the field.\n                    var currentValue = controller.registerField(\n                        attrs.key, scope);\n                    inputElement.val(currentValue);\n\n                    // When element is in focus then editing is on.\n                    inputElement.on(\"focus\", function() {\n                        scope.$apply(function() {\n                            controller.startEditingField(attrs.key);\n                        });\n                    });\n\n                    // When element is not in focus then editing is done.\n                    inputElement.on(\"blur\", function() {\n                        scope.$apply(function() {\n                            controller.stopEditingField(\n                                attrs.key, inputElement.val());\n                        });\n                    });\n\n                    // Called by controller to update the value.\n                    scope.updateValue = function(newValue) {\n                        inputElement.val(newValue);\n                    };\n\n                    // Called by controller to get the value.\n                    scope.getValue = function() {\n                        return inputElement.val();\n                    };\n                } else if(attrs.type === \"options\") {\n                    // Requires the options attribute on the element. This\n                    // is copied directly into the ngOptions directive on\n                    // the select.\n                    var options = attrs.options;\n                    if(!angular.isString(options) || options.length === 0) {\n                        throw new Error(\n                            \"options attribute is required on type \" +\n                            \"'options' on maas-obj-field.\");\n                    }\n\n                    // Placeholder by default is disabled, allow it to be\n                    // enabled.\n                    var disabled = \"disabled\";\n                    if(attrs.placeholderEnabled === \"true\") {\n                        disabled = \"\";\n                    }\n\n                    // Create a child scope of the parent scope for this\n                    // directive. Since this directive is created with an\n                    // isolated scope we need the child to use the parent so\n                    // ngOptions can use properties defined in that scope.\n                    var childScope = scope.$parent.$new();\n                    childScope._ngDisabled = scope.ngDisabled;\n                    childScope._selectValue = controller.registerField(\n                        attrs.key, scope);\n                    childScope._selectNgChange = function() {\n                        scope._change();\n                        controller.stopEditingField(\n                            attrs.key, childScope._selectValue);\n                    };\n\n                    // Construct the select.\n                    inputElement = $compile(\n                        '<select id=\"' + attrs.key + '\" ' +\n                        'data-ng-model=\"_selectValue\" ' +\n                        'data-ng-options=\"' + options + '\"' +\n                        'data-ng-change=\"_selectNgChange()\"' +\n                        'data-ng-disabled=\"_ngDisabled()\">' +\n                        '<option value=\"\" ' + disabled + '>' + placeholder +\n                        '</option></select>')(childScope);\n\n                    // Called by controller to update the value.\n                    scope.updateValue = function(newValue) {\n                        childScope._selectValue = newValue;\n                    };\n\n                    // Called by controller to get the value.\n                    scope.getValue = function() {\n                        return childScope._selectValue;\n                    };\n                } else if(attrs.type === \"checkboxes\") {\n                    // Requires the values attribute on the element.\n                    var values = attrs.values;\n                    if(!angular.isString(values) || values.length === 0) {\n                        throw new Error(\n                            \"values attribute is required on type \" +\n                            \"'checkboxes' on maas-obj-field.\");\n                    }\n\n                    // Create a child scope of the parent scope for this\n                    // directive. Since this directive is created with an\n                    // isolated scope we need the child to use the parent so\n                    // values can come from the parent scope.\n                    var checkScope = scope.$parent.$new();\n                    checkScope._selectedValues = controller.registerField(\n                        attrs.key, scope);\n                    checkScope._checked = function(val) {\n                        return checkScope._selectedValues.indexOf(val) > -1;\n                    };\n                    checkScope._toggleChecked = function(val) {\n                        var idx = checkScope._selectedValues.indexOf(val);\n                        if(idx > -1) {\n                            // Uncheck.\n                            checkScope._selectedValues.splice(idx, 1);\n                        } else {\n                            // Check.\n                            checkScope._selectedValues.push(val);\n                        }\n                    };\n\n                    // Construct the checkbox list.\n                    inputElement = angular.element([\n                        '<div class=\"width--full\" ',\n                            'data-ng-repeat=\"val in ' + values +'\">',\n                            '<input id=\"' + attrs.key + '_' + '{$ val $}',\n                                '\" type=\"checkbox\" value=\"{$ val $}\" ',\n                                'class=\"checkbox\" ',\n                                'data-ng-checked=\"_checked(val)\" ',\n                                'data-ng-click=\"_toggleChecked(val)\">',\n                            '<label for=\"' + attrs.key + '_',\n                                '{$ val $}' + '\" ',\n                                'class=\"checkbox-label\">{$ val $}</label>',\n                        '</div>'\n                    ].join(''));\n                    inputElement = $compile(inputElement)(checkScope);\n\n                    // Called by controller to update the value.\n                    scope.updateValue = function(newValue) {\n                        checkScope._selectedValues = newValue;\n                    };\n\n                    // Called by controller to get the value.\n                    scope.getValue = function() {\n                        return checkScope._selectedValues;\n                    };\n                } else if(attrs.type === \"tags\") {\n                    var tagsScope = scope.$new();\n                    var tags = controller.registerField(\n                        attrs.key, scope);\n                    tagsScope._tags = tags.map(function(val) {\n                        return {text: val};\n                    });\n\n                    // Construct the tags input.\n                    inputElement = angular.element([\n                        '<tags-input id=\"' + attrs.key + '\" ',\n                            'data-ng-model=\"_tags\" ',\n                            'placeholder=\"' + placeholder + '\" ',\n                            'data-ng-change=\"_change()\" ',\n                            'allow-tags-pattern=\"[\\\\w-]+\"></tags-input>'\n                    ].join(''));\n                    inputElement = $compile(inputElement)(tagsScope);\n\n                    // Called by controller to update the value.\n                    scope.updateValue = function(newValue) {\n                        tagsScope._tags = newValue.map(\n                            function(val) {\n                                return {text: val};\n                            });\n                    };\n\n                    // Called by controller to get the value.\n                    scope.getValue = function() {\n                        return tagsScope._tags.map(\n                            function(val) {\n                                return val.text;\n                            });\n                    };\n                } else if(attrs.type === \"onoffswitch\") {\n                    var switchScope = scope.$new();\n                    switchScope._toggle = controller.registerField(\n                        attrs.key, scope);\n                    switchScope._changed = function() {\n                        scope._change();\n                        controller.startEditingField(attrs.key);\n                        controller.stopEditingField(\n                            attrs.key, switchScope.getValue());\n                    };\n\n                    // Construct the on and off toggle.\n                    inputElement = angular.element([\n                      '<div class=\"maas-p-switch\">',\n                        '<input type=\"checkbox\" name=\"' + attrs.key + '\" ',\n                          'class=\"maas-p-switch--input\" ',\n                          'id=\"' + attrs.key + '\" ',\n                          'data-ng-model=\"_toggle\" ',\n                          'data-ng-change=\"_changed()\">',\n                        '<div class=\"maas-p-switch--mask\"></div>',\n                      '</div>'\n                    ].join(''));\n                    inputElement = $compile(inputElement)(switchScope);\n\n                    // Called by controller to update the value.\n                    scope.updateValue = function(newValue) {\n                        // WARNING: This code is difficult to unit test, since\n                        // we could not figure out how to get the\n                        // isolateScope() from the transcluded element. Be sure\n                        // to manually test versions of this toggle with and\n                        // without the on-value and off-value attributes, such\n                        // as by verifying that both the on/off toggle on both\n                        // the discovery page and the subnet details page work.\n                        if(attrs.onValue && attrs.onValue === newValue) {\n                            switchScope._toggle = true;\n                        } else if(attrs.offValue &&\n                                attrs.offValue === newValue) {\n                            switchScope._toggle = false;\n                        } else {\n                            switchScope._toggle = newValue;\n                        }\n                    };\n\n                    // Called by controller to get the value.\n                    scope.getValue = function() {\n                        // WARNING: This code is difficult to unit test, since\n                        // we could not figure out how to get the\n                        // isolateScope() from the transcluded element. Be sure\n                        // to manually test versions of this toggle with and\n                        // without the on-value and off-value attributes, such\n                        // as by verifying that both the on/off toggle on both\n                        // the discovery page and the subnet details page work.\n                        if(switchScope._toggle) {\n                            if(attrs.onValue) {\n                                return attrs.onValue;\n                            } else {\n                                return true;\n                            }\n                        } else {\n                            if(attrs.offValue) {\n                                return attrs.offValue;\n                            } else {\n                                return false;\n                            }\n                        }\n                    };\n                } else {\n                    throw new Error(\n                        \"Unknown type on maas-obj-field: \" + attrs.type);\n                }\n\n                // Called on change.\n                scope._change = function() {\n                    if(angular.isFunction(scope.onChange)) {\n                        scope.onChange(\n                            attrs.key,\n                            controller.getValue(attrs.key),\n                            controller);\n                    }\n                };\n\n                // Copy input class to the input element.\n                if(attrs.inputClass) {\n                    inputElement.addClass(attrs.inputClass);\n                }\n                inputWrapper.append(inputElement);\n\n                // Errors element.\n                var errorsElement = angular.element(\n                    '<ul class=\"p-list u-no-margin--top\"></ul>');\n                if(!controller.isTableForm()) {\n                    errorsElement.addClass(\"form__error\");\n                }\n                inputWrapper.append(errorsElement);\n\n                // Help text elements\n                if (attrs.helpText) {\n                    var helpTextElement = angular.element(\n                        '<p>' + attrs.helpText + '</p>');\n                    helpTextElement.addClass(\"p-form-help-text\");\n                    inputWrapper.append(helpTextElement);\n                }\n\n                // Called by controller to clear all errors.\n                scope.clearErrors = function() {\n                    inputElement.removeClass(\"ng-dirty\");\n                    inputElement.removeClass(\"p-form-validation__input\");\n                    inputWrapper.removeClass(\"p-form-validation\");\n                    inputWrapper.removeClass(\"is-error\");\n                    inputWrapper.removeClass(\"u-no-margin--top\");\n                    errorsElement.empty();\n                };\n\n                // Called by controller to set errors.\n                scope.setErrors = function(errors) {\n                    if(errors.length > 0) {\n                        inputWrapper.addClass(\"p-form-validation\");\n                        inputWrapper.addClass(\"is-error\");\n                        inputWrapper.addClass(\"u-no-margin--top\");\n                        inputElement.addClass(\"ng-dirty\");\n                        inputElement.addClass(\"p-form-validation__input\");\n                        angular.forEach(errors, function(error) {\n                            errorsElement.append(\n                              '<li class=\"p-form-validation__message\">' +\n                              '<strong>Error:</strong> ' + error + '</li>'\n                            );\n                        });\n                        // Set the input in focus but outside of the current\n                        // digest cycle.\n                        setTimeout(function() {\n                            inputElement.focus();\n                        }, 1);\n                    }\n                };\n\n                // Called by controller to see if error is set on field.\n                scope.hasErrors = function() {\n                    return inputWrapper.hasClass(\"is-error\");\n                };\n\n                // Subtle text element.\n                if(attrs.subtleText) {\n                    var subtleTextElement = $compile(\n                        angular.element(\n                            '<span class=\"p-form-help-text\" ' +\n                            'data-ng-bind=\"subtleText\"></span>'))(scope);\n                    inputWrapper.append(subtleTextElement);\n                }\n                element.append(inputWrapper);\n\n                // Watch the showing of saving spinner. Update the elements\n                // correctly to show the saving.\n                scope.$watch(function() {\n                    return controller.showInputSaving(attrs.key);\n                }, function(value) {\n                    if(value) {\n                        inputWrapper.children(\n                            ':first').addClass('u-border--information');\n                        inputWrapper.append(\n                            '<i class=\"obj-saving icon ' +\n                            'p-icon--spinner u-animation--spin\"></i>');\n                        inputWrapper.addClass('p-tooltip');\n                        inputWrapper.addClass('p-tooltip--bottom');\n                        inputWrapper.attr('aria-label', 'Saving');\n                    } else {\n                      inputWrapper.children(\n                          ':first').removeClass('u-border--information');\n                        inputWrapper.find('i.obj-saving').remove();\n                        inputWrapper.removeClass('p-tooltip');\n                        inputWrapper.removeClass('p-tooltip--right');\n                        inputWrapper.removeAttr('aria-label');\n                    }\n                });\n\n                // Called when the scope is destroyed.\n                scope.$on(\"$destroy\", function() {\n                    controller.unregisterField(attrs.key);\n                });\n            }\n        };\n    }]);\n\nangular.module('MAAS').directive('maasObjSave', function() {\n        return {\n            restrict: \"A\",\n            require: [\"^^maasObjForm\"],\n            scope: {},\n            link: function(scope, element, attrs, controllers) {\n                // Only allow maas-obj-save when saveOnBlur is false.\n                var controller = controllers[0];\n                if(controller.saveOnBlur()) {\n                    throw new Error(\n                        \"maas-obj-save is only allowed when save-on-blur is \" +\n                        \"set to false.\");\n                }\n\n                element.on(\"click\", function() {\n                    scope.$apply(function() {\n                        controller.saveForm();\n                    });\n                });\n            }\n        };\n    });\n\nangular.module('MAAS').directive('maasObjErrors', function() {\n        return {\n            restrict: \"E\",\n            require: [\"^^maasObjForm\"],\n            scope: {},\n            template: '<ul class=\"p-list u-no-margin--top\"></ul>',\n            link: function(scope, element, attrs, controllers) {\n                // Set on the controller the global error handler.\n                controllers[0].errorScope = scope;\n                var ul = element.find(\"ul\");\n\n                // Called by controller to clear all errors.\n                scope.clearErrors = function() {\n                    ul.empty();\n                };\n\n                // Called by controller to set errors.\n                scope.setErrors = function(errors) {\n                    if(errors.length > 0) {\n                        angular.forEach(errors, function(error) {\n                            ul.append(\n                              '<li class=\"p-list__item\">' +\n                              '<i class=\"p-icon--error\"></i> ' +\n                              error + '</li>'\n                            );\n                        });\n                    }\n                };\n\n                // Called by controller to see if error is set on field.\n                scope.hasErrors = function() {\n                    return ul.children().length > 0;\n                };\n            }\n        };\n    });\n\n\nangular.module('MAAS').directive('maasObjSaving', function() {\n        return {\n            restrict: \"E\",\n            require: \"^^maasObjForm\",\n            scope: {},\n            transclude: true,\n            template: [\n              '<span data-ng-if=\"saving\">',\n                '<i class=\"p-icon--loading u-animation--spin\"></i>',\n                '<span data-ng-transclude></span>',\n              '</span>'].join(''),\n            link: function(scope, element, attrs, controller) {\n                scope.saving = false;\n                scope.$watch(function() {\n                    return controller.scope.saving;\n                }, function(value) {\n                    scope.saving = value;\n                });\n            }\n        };\n    });\n\n\nangular.module('MAAS').directive('maasObjShowSaving', function() {\n        return {\n            restrict: \"A\",\n            require: \"^^maasObjForm\",\n            link: function(scope, element, attrs, controller) {\n                scope.$watch(function() {\n                    return controller.scope.saving;\n                }, function(value) {\n                    if(value) {\n                        element.removeClass(\"ng-hide\");\n                    } else {\n                        element.addClass(\"ng-hide\");\n                    }\n                });\n            }\n        };\n    });\n\n\nangular.module('MAAS').directive('maasObjHideSaving', function() {\n        return {\n            restrict: \"A\",\n            require: \"^^maasObjForm\",\n            link: function(scope, element, attrs, controller) {\n                scope.$watch(function() {\n                    return controller.scope.saving;\n                }, function(value) {\n                    if(value) {\n                        element.addClass(\"ng-hide\");\n                    } else {\n                        element.removeClass(\"ng-hide\");\n                    }\n                });\n            }\n        };\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/maas_obj_form.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Creates the auto-formatting for MAC address inputs.\n */\n\nangular.module('MAAS').directive('macAddress', function () {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        link: function (scope, ele, attr, ngModelCtrl, ngModel) {\n            if (!ngModelCtrl) {\n              return;\n            }\n\n            var macAddressParse = function (value) {\n                return value.toUpperCase();\n            };\n\n            var macAddressFormat = function (value) {\n\n                if (!value) {\n                  return undefined;\n                }\n\n                var numbers = value.replace(/:/g, \"\");\n\n                if (value.length % 3 === 0) {\n\n                    return numbers.replace(/([0-9A-Za-z]{2})/g, \"$1:\");\n                }\n            };\n\n            ngModelCtrl.$parsers.push(macAddressParse);\n            ngModelCtrl.$formatters.push(macAddressFormat);\n\n            ele.on('input', function () {\n                var value = macAddressFormat(ele.val());\n\n                if (value !== undefined) {\n                    ngModelCtrl.$setViewValue(value);\n                    ngModelCtrl.$render();\n                }\n                scope.$apply();\n            });\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/mac_address.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n* GNU Affero General Public License version 3 (see the file LICENSE).\n*\n* Machines listing directive.\n*\n* Renders the machines listing.\n*/\n// testing\n\n\n\nangular.module('MAAS').directive('maasMachinesTable', [\n  'MachinesManager', 'GeneralManager', 'ManagerHelperService',\n  function (MachinesManager, GeneralManager, ManagerHelperService) {\n    return {\n      restrict: \"E\",\n      scope: {\n        search: \"=\",\n        ngDisabled: \"&\",\n        machineHasError: \"&\",\n        hideCheckboxes: \"=?\",\n        onListingChange: \"&\",\n        onCheckAll: \"&\",\n        onCheck: \"&\"\n      },\n      templateUrl: (\n        'static/partials/machines-table.html?v=' + (\n          MAAS_config.files_version)),\n      link: function(scope, element, attrs) {\n        // Statuses that should show spinner.\n        var SPINNER_STATUSES = [\n          1,   // commissioning\n          9,   // deploying\n          12,  // releasing\n          14,  // disk erasing\n          17,  // entering rescue mode\n          19,  // exiting rescue mode\n          21   // testing\n        ];\n\n        // Scope variables.\n        scope.table = {\n          column: 'fqdn',\n          predicate: 'fqdn',\n          reverse: false,\n          allViewableChecked: false,\n          machines: MachinesManager.getItems(),\n          filteredMachines: [],\n          osinfo: GeneralManager.getData(\"osinfo\")\n        };\n\n        // Ensures that the checkbox for select all is the correct value.\n        scope.updateAllChecked = function() {\n          // Not checked when the filtered machines are empty.\n          if(scope.table.filteredMachines.length === 0) {\n              scope.table.allViewableChecked = false;\n              return;\n          }\n\n          // Loop through all filtered machines and see if all are checked.\n          var i;\n          for(i = 0; i < scope.table.filteredMachines.length; i++) {\n              if(!scope.table.filteredMachines[i].$selected) {\n                  scope.table.allViewableChecked = false;\n                  return;\n              }\n          }\n          scope.table.allViewableChecked = true;\n        };\n\n        // Selects and deselects visible machines.\n        scope.toggleCheckAll = function() {\n          if(scope.table.allViewableChecked) {\n            angular.forEach(\n              scope.table.filteredMachines, function(machine) {\n                MachinesManager.unselectItem(machine.system_id);\n              });\n          } else {\n            angular.forEach(\n              scope.table.filteredMachines, function(machine) {\n                MachinesManager.selectItem(machine.system_id);\n              });\n          }\n          scope.updateAllChecked();\n          scope.onCheckAll();\n        };\n\n        // Selects and unselects machine.\n        scope.toggleChecked = function(machine) {\n          if(MachinesManager.isSelected(machine.system_id)) {\n            MachinesManager.unselectItem(machine.system_id);\n          } else {\n            MachinesManager.selectItem(machine.system_id);\n          }\n          scope.updateAllChecked();\n          scope.onCheck({$machine: machine});\n        };\n\n        // Sorts the table by predicate.\n        scope.sortTable = function(predicate) {\n            scope.table.predicate = predicate;\n            scope.table.reverse = !scope.table.reverse;\n        };\n\n        // Sets the viewable column or sorts.\n        scope.selectColumnOrSort = function(predicate) {\n            if(scope.table.column !== predicate) {\n                scope.table.column = predicate;\n            } else {\n                scope.sortTable(predicate);\n            }\n        };\n\n        // Return true if spinner should be shown.\n        scope.showSpinner = function(machine) {\n            return SPINNER_STATUSES.indexOf(machine.status_code) > -1;\n        };\n\n        scope.showFailedTestWarning = function(machine) {\n            if(scope.showSpinner(machine)) {\n                return false;\n            }\n            switch(machine.status_code) {\n                // NEW\n                case 0:\n                // COMMISSIONING\n                case 1:\n                // FAILED_COMMISSIONING\n                case 2:\n                // TESTING\n                case 21:\n                // FAILED_TESTING\n                case 22:\n                    return false;\n            }\n            switch(machine.testing_status) {\n                // Tests havn't been run\n                case -1:\n                // Tests have passed\n                case 2:\n                    return false;\n            }\n            return true;\n        };\n\n        // Return true if the other node status should be shown.\n        scope.showNodeStatus = function(machine) {\n            // -1 means tests havn't been run, 2 means tests have passed.\n            if(!scope.showSpinner(machine) &&\n               !scope.showFailedTestWarning(machine) &&\n               machine.other_test_status !== -1 &&\n               machine.other_test_status !== 2) {\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        // Returns the release title from osinfo.\n        scope.getReleaseTitle = function(os_release) {\n          if(angular.isArray(scope.table.osinfo.releases)) {\n            for(i = 0; i < scope.table.osinfo.releases.length; i++) {\n              var release = scope.table.osinfo.releases[i];\n              if(release[0] === os_release) {\n                return release[1];\n              }\n            }\n          }\n          return os_release;\n        };\n\n        // Returns the status text to show.\n        scope.getStatusText = function(machine) {\n          var showRelease = ['Deploying', 'Deployed'];\n          if(showRelease.indexOf(machine.status) === -1) {\n            return machine.status;\n          } else {\n            var releaseTitle = scope.getReleaseTitle(\n              machine.osystem + '/' + machine.distro_series);\n            if(machine.osystem === \"ubuntu\") {\n              releaseTitle = releaseTitle.split('\"')[0].trim();\n            }\n            if(machine.status === \"Deployed\") {\n              return releaseTitle;\n            }\n            if(machine.status === \"Deploying\") {\n              return machine.status + ' ' + releaseTitle;\n            }\n          }\n        };\n\n        // When the list of filtered machines change update the all checkbox.\n        scope.$watchCollection(\"table.filteredMachines\", function() {\n          scope.updateAllChecked();\n          scope.onListingChange({$machines: scope.table.filteredMachines});\n        });\n\n        // Load the required managers and start polling for osinfo.\n        ManagerHelperService.loadManagers(\n          scope, [MachinesManager, GeneralManager]).then(function() {\n            GeneralManager.startPolling(scope, \"osinfo\");\n          });\n\n        // Stop polling when the scope is destroyed.\n        scope.$on(\"$destroy\", function() {\n          GeneralManager.stopPolling(scope, \"osinfo\");\n        });\n      }\n    };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/machines_table.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Notifications.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject notifications.html into the template cache.\n    $templateCache.put('directive/templates/notifications.html', [\n      '<div class=\"u-no-margin--top\" data-ng-repeat=\"category in categories\"',\n        ' data-ng-init=\"notifications = categoryNotifications[category]\">',\n        // 1 notification.\n        '<span class=\"row\" data-ng-if=\"notifications.length == 1\">',\n          '<ul class=\"p-list\" data-ng-class=\"{\\'is-open\\': shown}\">',\n            '<li data-ng-repeat=\"notification in notifications\"',\n            ' class=\"p-notification\"',\n            ' data-ng-class=\"categoryClasses[notification.category]\">',\n              '<p class=\"p-notification__response\">',\n                '<span data-ng-bind-html=\"notification.message\"></span> ',\n                '<a class=\"p-notification__action\"',\n                ' data-ng-click=\"dismiss(notification)\">Dismiss</a>',\n              '</p>',\n            '</li>',\n          '</ul>',\n        '</span>',\n        // 2 or more notifications.\n        '<div class=\"row p-notification--group\" ',\n             'data-ng-if=\"notifications.length >= 2\"',\n        ' data-ng-init=\"shown = false\">',\n            '<div data-ng-class=\"categoryClasses[notifications[0].category]\">',\n                '<a aria-label=\"{$ notifications.length $} ',\n                    '{$ categoryTitles[category] $}, click to open messages.\"',\n                    ' maas-enter=\"shown = !shown\"',\n                    ' class=\"p-notification__toggle\"',\n                    ' data-ng-click=\"shown = !shown\">',\n                    '<p class=\"p-notification__response\">',\n                        '<span class=\"p-notification__status\"',\n                        ' data-count=\"{$ notifications.length $}\"',\n                        ' data-ng-bind=\"notifications.length + \\' \\' + ',\n                                       'categoryTitles[category]\"></span>',\n                        '<small>',\n                        '<i data-ng-class=\"{ \\'p-icon--expand\\': !shown,',\n                        ' \\'p-icon--collapse\\': shown }\"></i></small>',\n                    '</p>',\n                '</a>',\n                '<ul class=\"p-list--divided\" ',\n                    'data-ng-class=\"{\\'u-hide\\': !shown}\">',\n                    '<li data-ng-repeat=\"notification in notifications\"',\n                    ' class=\"p-list__item\">',\n                    '<p class=\"p-notification__response\">',\n                        '<span data-ng-bind-html=\"notification.message\">',\n                        '</span> ',\n                        '<a class=\"p-notification__action\"',\n                        ' data-ng-click=\"dismiss(notification)\">Dismiss</a>',\n                    '</p>',\n                    '</li>',\n                '</ul>',\n            '</div>',\n        '</div>',\n      '</div>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive('maasNotifications', [\n    \"NotificationsManager\", \"ManagerHelperService\",\n    function(NotificationsManager, ManagerHelperService) {\n        return {\n            restrict: \"E\",\n            templateUrl: 'directive/templates/notifications.html',\n            link: function($scope, element, attrs) {\n                ManagerHelperService.loadManager($scope, NotificationsManager);\n                $scope.notifications = NotificationsManager.getItems();\n                $scope.dismiss = angular.bind(\n                    NotificationsManager, NotificationsManager.dismiss);\n\n                $scope.categories = [\n                    \"error\",\n                    \"warning\",\n                    \"success\",\n                    \"info\"\n                ];\n                $scope.categoryTitles = {\n                    error: \"Errors\",\n                    warning: \"Warnings\",\n                    success: \"Successes\",\n                    info: \"Other messages\"\n                };\n                $scope.categoryClasses = {\n                    error: \"p-notification--negative\",\n                    warning: \"p-notification--caution\",\n                    success: \"p-notification--positive\",\n                    info: \"p-notification\"  // No suffix.\n                };\n                $scope.categoryNotifications = {\n                    error: [],\n                    warning: [],\n                    success: [],\n                    info: []\n                };\n\n                $scope.$watchCollection(\n                    \"notifications\", function() {\n                        var cns = $scope.categoryNotifications;\n                        angular.forEach(\n                            $scope.categories, function(category) {\n                                cns[category].length = 0;\n                            }\n                        );\n                        angular.forEach(\n                            $scope.notifications, function(notification) {\n                                cns[notification.category].push(notification);\n                            }\n                        );\n                    }\n                );\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/notifications.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * OS/Release select directive.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the os-select.html into the template cache.\n    $templateCache.put('directive/templates/os-select.html', [\n        '<div class=\"form__group-input\"> ',\n            '<select name=\"os\" class=\"u-margin--right\" ',\n                'data-ng-model=\"ngModel.osystem\" ',\n                'data-ng-change=\"selectedOSChanged()\" ',\n                'data-ng-options=\"',\n                'os[0] as os[1] for os in maasOsSelect.osystems\">',\n            '</select>',\n        '</div>',\n        '<div class=\"form__group-input\"> ',\n            '<select name=\"release\" class=\"u-margin--right\" ',\n                'data-ng-model=\"ngModel.release\" ',\n                'data-ng-change=\"selectedReleaseChanged()\" ',\n                'data-ng-options=\"',\n                'release[0] as release[1] for release in releases\">',\n            '</select>',\n        '</div>',\n        '<div class=\"form__group-input\"> ',\n            '<select name=\"hwe_kernel\" data-ng-model=\"ngModel.hwe_kernel\" ',\n                'data-ng-show=\"hwe_kernels.length\"',\n                'data-ng-options=\"',\n                'hwe_kernel[0] as hwe_kernel[1] for hwe_kernel ',\n                'in hwe_kernels\">',\n                '<option value=\"\">Default kernel</option>',\n            '</select>',\n        '</div>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive('maasOsSelect', function() {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        scope: {\n            maasOsSelect: '=',\n            ngModel: '='\n        },\n        templateUrl: 'directive/templates/os-select.html',\n        controller: function($scope) {\n\n            // Return only the selectable releases based on the selected os.\n            function getSelectableReleases() {\n                if(angular.isObject($scope.maasOsSelect) &&\n                    angular.isArray($scope.maasOsSelect.releases)) {\n                    var i, allChoices = $scope.maasOsSelect.releases;\n                    var choice, choices = [];\n                    for(i = 0; i < allChoices.length; i++) {\n                        choice = allChoices[i];\n                        if(choice[0].indexOf($scope.ngModel.osystem + '/') > -1)\n                        {\n                            choices.push(choice);\n                        }\n                    }\n                    return choices;\n                }\n                return [];\n            }\n\n            // Return only the selectable kernels based on the selected os.\n            function getSelectableKernels() {\n                if(angular.isObject($scope.maasOsSelect) &&\n                    angular.isObject($scope.maasOsSelect.kernels) &&\n                    angular.isString($scope.ngModel.osystem) &&\n                    angular.isString($scope.ngModel.release)) {\n                    var os = $scope.ngModel.osystem;\n                    var release = $scope.ngModel.release.split('/')[1];\n                    var osKernels = $scope.maasOsSelect.kernels[os];\n                    if(angular.isObject(osKernels)) {\n                        return osKernels[release];\n                    }\n                }\n                return [];\n            }\n\n            // Returns the defaultValue if its in the choices array. Otherwise\n            // it returns the weighted choice if present, followed by the\n            // first choice.\n            function getDefaultOrFirst(array, defaultValue, weightValue) {\n                var i, first, weightedPresent = false;\n                for(i = 0; i < array.length; i++) {\n                    if(angular.isUndefined(first)) {\n                        first = array[i][0];\n                    }\n                    if(array[i][0] === defaultValue) {\n                        return defaultValue;\n                    }\n                    if(angular.isString(weightValue) &&\n                        array[i][0] === weightValue) {\n                        weightedPresent = true;\n                    }\n                }\n                if(weightedPresent) {\n                    return weightValue;\n                }\n                if(angular.isUndefined(first)) {\n                    return null;\n                }\n                return first;\n            }\n\n            // Sets the default selected values for the ngModel. Only sets the\n            // values once the maasOsSelect is populated. Sets the selected\n            // osystem to default_osystem if present, followed by 'ubuntu' if\n            // present, followed by the first available. Sets the selected\n            // release to the default_release if present, followed by the first\n            // available.\n            function setDefault() {\n                // Do nothing if model is already set.\n                if(angular.isString($scope.ngModel.osystem) &&\n                    angular.isString($scope.ngModel.release)) {\n                    return;\n                }\n                // Do nothing if the default is not set.\n                if(angular.isUndefined($scope.maasOsSelect.default_osystem) ||\n                    angular.isUndefined($scope.maasOsSelect.default_release)) {\n                    return;\n                }\n\n                // Set the intial defaults.\n                $scope.ngModel.osystem = getDefaultOrFirst(\n                    $scope.maasOsSelect.osystems,\n                    $scope.maasOsSelect.default_osystem, \"ubuntu\");\n                $scope.releases = getSelectableReleases();\n                $scope.ngModel.release = getDefaultOrFirst(\n                    $scope.releases,\n                    $scope.ngModel.osystem + \"/\" +\n                    $scope.maasOsSelect.default_release);\n                $scope.ngModel.kernel = \"\";\n            }\n\n            // Defaults\n            if(!angular.isObject($scope.ngModel)) {\n                $scope.ngModel = {\n                    osystem: null,\n                    release: null,\n                    hwe_kernel: null\n                };\n            }\n            $scope.releases = getSelectableReleases();\n            $scope.hwe_kernels = getSelectableKernels();\n\n            // Add the reset function to ngModel, allowing users to call\n            // this function to reset the defauls.\n            $scope.ngModel.$reset = function() {\n                $scope.ngModel.osystem = null;\n                $scope.ngModel.release = null;\n                $scope.ngModel.hwe_kernel = null;\n                setDefault();\n            };\n\n            // If the available os change update the available releases and\n            // set the default.\n            $scope.$watch(\"maasOsSelect.releases\", function() {\n                $scope.releases = getSelectableReleases();\n                setDefault();\n            });\n\n            // If the available release change update the available kernels and\n            // set the default.\n            $scope.$watch(\"maasOsSelect.kernels\", function() {\n                $scope.hwe_kernels = getSelectableKernels();\n                setDefault();\n            });\n\n            // Updates the default and selectable releases.\n            $scope.selectedOSChanged = function() {\n                $scope.releases = getSelectableReleases();\n                $scope.hwe_kernels = getSelectableKernels();\n                $scope.ngModel.release = null;\n                $scope.ngModel.hwe_kernel = null;\n                if($scope.releases.length > 0) {\n                    $scope.ngModel.release = $scope.releases[0][0];\n                }\n            };\n\n            // Updates the default and selectable kernels.\n            $scope.selectedReleaseChanged = function() {\n                $scope.hwe_kernels = getSelectableKernels();\n                $scope.ngModel.hwe_kernel = null;\n            };\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/os_select.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Placeholder directive.\n *\n * Allows the placeholder attribute on an element to be dynamic.\n */\n\n\nangular.module('MAAS').directive('ngPlaceholder', function() {\n    return {\n        restrict: \"A\",\n        scope: {\n            ngPlaceholder: \"=\"\n        },\n        link: function(scope, element, attrs) {\n            scope.$watch('ngPlaceholder', function() {\n                element[0].placeholder = scope.ngPlaceholder;\n            });\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/placeholder.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Pod parameters directive.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the power-parameters.html into the template cache.\n    $templateCache.put('directive/templates/pod-parameters.html', [\n        '<maas-obj-field type=\"options\" key=\"type\" label=\"Pod type\" ',\n          'label-width=\"2\" input-width=\"5\" ',\n          'placeholder=\"Select the pod type\" ',\n          'options=\"type.name as type.description for type in podTypes\" ',\n          'ng-if=\"!hideType\">',\n        '</maas-obj-field>',\n        '<div pod-fields></div>'\n    ].join(''));\n}]);\n\n\nangular.module('MAAS').directive(\n    'maasPodParameters', [\n        '$compile', 'GeneralManager', 'ManagerHelperService', function(\n        $compile, GeneralManager, ManagerHelperService) {\n    return {\n        restrict: \"E\",\n        require: \"^^maasObjForm\",\n        scope: {\n          hideType: '='\n        },\n        templateUrl: 'directive/templates/pod-parameters.html',\n        link: function(scope, element, attrs, controller) {\n            scope.powerTypes = GeneralManager.getData('power_types');\n            scope.podTypes = [];\n            scope.type = null;\n\n            var childScope, fieldsElement = angular.element(\n                element.find('div[pod-fields]'));\n\n            // Function to update the editable fields.\n            var updateFields = function(podType) {\n                var type = null;\n                var i;\n                for(i = 0; i < scope.podTypes.length; i++) {\n                    if(scope.podTypes[i].name === podType) {\n                      type = scope.podTypes[i];\n                    }\n                }\n\n                fieldsElement.empty();\n                if(childScope) {\n                  childScope.$destroy();\n                }\n                if(angular.isObject(type)) {\n                  var html = '<maas-obj-field-group>';\n                  angular.forEach(type.fields, function(field) {\n                      if(field.scope === 'bmc') {\n                          if(field.name === 'power_pass') {\n                              html += (\n                                  '<maas-obj-field type=\"password\" key=\"');\n                          } else {\n                              html += (\n                                  '<maas-obj-field type=\"text\" key=\"');\n                          }\n                          html += (field.name + '\" label=\"' + field.label +\n                            '\" ' + 'label-width=\"2\" input-width=\"5\">' +\n                            '</maas-obj-field>');\n                      }\n                  });\n                  html += '</maas-obj-field-group>';\n                  childScope = scope.$new();\n                  var ele = angular.element(html);\n                  fieldsElement.append(ele);\n                  $compile(ele)(\n                      childScope, undefined, {maasObjForm: controller});\n                }\n            };\n\n            // Return the selected type.\n            var getType = function() {\n                if(scope.hideType) {\n                    return controller.obj.type;\n                } else {\n                    return controller.getValue('type');\n                }\n            };\n\n            // Update the fields when the type changes.\n            scope.$watch(getType, updateFields);\n\n            // Update the pod types when the power types is updated.\n            scope.$watchCollection(\"powerTypes\", function() {\n                scope.podTypes.length = 0;\n                angular.forEach(scope.powerTypes, function(type) {\n                    if(type.driver_type === \"pod\") {\n                        scope.podTypes.push(type);\n                    }\n                });\n                updateFields(getType());\n            });\n\n            // When destroyed stop polling the power types.\n            scope.$on(\"$destroy\", function() {\n                if(GeneralManager.isPolling(\"power_types\")) {\n                    GeneralManager.stopPolling($scope, \"power_types\");\n                }\n            });\n\n            // Load the general manager and start polling.\n            ManagerHelperService.loadManager(scope, GeneralManager).then(\n                function() {\n                  GeneralManager.startPolling($scope, \"power_types\");\n                });\n        }\n    };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/pod_parameters.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Power parameters directive.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the power-parameters.html into the template cache.\n    $templateCache.put('directive/templates/power-parameters.html', [\n        '<div class=\"p-form__group\">',\n            '<label for=\"power-type\" ',\n                    'class=\"form__group-label col-2\">Power type</label>',\n            '<div class=\"form__group-input col-3\">',\n                '<select name=\"power-type\" id=\"power-type\" ',\n                    'data-ng-disabled=\"ngDisabled\" ',\n                    'data-ng-class=\"{ invalid: !ngModel.type }\" ',\n                    'data-ng-model=\"ngModel.type\" ',\n                    'data-ng-options=\"',\n                    'type as type.description ',\n                    'for type in maasPowerParameters track by type.name\">',\n                    '<option value=\"\" disabled selected>',\n                        'Select your power type',\n                    '</option>',\n                '</select>',\n            '</div>',\n        '</div>',\n        '<div class=\"p-form__group\" ',\n            'data-ng-repeat=\"field in ngModel.type.fields\">',\n            '<label for=\"{$ field.name $}\" class=\"form__group-label col-2\">',\n                '{$ field.label $}',\n            '</label>',\n            '<div class=\"form__group-input col-3\">',\n                '<maas-power-input field=\"field\" ',\n                    'data-ng-disabled=\"ngDisabled\" ',\n                    'data-ng-model=\"ngModel.parameters[field.name]\">',\n            '</div>',\n        '</div>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive('maasPowerInput', ['$compile',\n    function($compile) {\n        return {\n            restrict: \"E\",\n            require: \"ngModel\",\n            scope: {\n                field: '=',\n                ngModel: '='\n            },\n            link: function(scope, element, attrs) {\n                var type = scope.field.field_type;\n                var req = scope.field.required ? 'required=\"required\" ' : '';\n                var html = \"\";\n                if(type === \"string\" || type === \"mac_address\" ||\n                   type === \"password\") {\n                    // Build an input element with the correct attributes.\n                    var input_type = 'type=\"text\"';\n                    if(type === \"password\") {\n                        // If the input field is a password field, display it\n                        // as text or password depending on if we're editing\n                        // the fields.\n                        input_type = \"data-ng-type=\\\"ngModel.editing && \" +\n                            \"'text' || 'password'\\\"\";\n                    }\n                    html =\n                        '<input ' + input_type + ' ' +\n                        'name=\"' + scope.field.name + '\" ' +\n                        req + 'data-ng-model=\"' + attrs.ngModel + '\" ' +\n                        'data-ng-disabled=\"' + attrs.ngDisabled + '\" ';\n\n                    // Add mac address validation.\n                    if(type === \"mac_address\") {\n                        html +=\n                            'data-ng-pattern=\"' +\n                            '/^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$/\"';\n                    }\n                    html += '>';\n\n                    // Set the default value for the input on the model.\n                    if(angular.isUndefined(scope.ngModel)) {\n                        scope.ngModel = scope.field[\"default\"];\n                    }\n                } else if(type === \"choice\") {\n                    // Build a select element with the correct attributes.\n                    html =\n                        '<select name=\"' + scope.field.name + '\"' +\n                        req + 'data-ng-model=\"' + attrs.ngModel + '\" ' +\n                        'data-ng-disabled=\"' + attrs.ngDisabled + '\" ' +\n                        'data-ng-options=\"' +\n                        'choice[0] as choice[1] for choice in field.choices' +\n                        '\">';\n                    html += '</select>';\n\n                    // Set the default choice on the model.\n                    if(angular.isUndefined(scope.ngModel)) {\n                        var i;\n                        for(i = 0; i < scope.field.choices.length; i++) {\n                            var choice = scope.field.choices[i];\n                            if(scope.field[\"default\"] === choice[0]) {\n                                scope.ngModel = choice;\n                                break;\n                            }\n                        }\n                    }\n                } else {\n                    throw new Error(\"Unknown power_type: \"+ type);\n                }\n\n                // Replace the element with the compiled html using the parents\n                // scope. The parent scope is used because we want to build the\n                // element as if it was in the parent scope, not the scope that\n                // is defined in this directive.\n                element.replaceWith($compile(html)(scope.$parent));\n            }\n        };\n    }]);\n\nangular.module('MAAS').directive('maasPowerParameters', function() {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        scope: {\n            maasPowerParameters: '=',\n            ngModel: '=',\n            ngDisabled: '='\n        },\n        templateUrl: 'directive/templates/power-parameters.html'\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/power_parameters.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Proxy settings directive.\n*/\n\nangular.module('MAAS').directive('maasProxySettings', [\n    '$sce', 'ConfigsManager', 'ManagerHelperService', 'JSONService',\n    function($sce, ConfigsManager, ManagerHelperService, JSONService) {\n        return {\n            restrict: \"E\",\n            scope: {},\n            templateUrl: 'static/partials/proxy-settings.html',\n            controller: function($scope, $rootScope, $element, $document) {\n                $scope.loading = true;\n                ManagerHelperService.loadManager(\n                    $scope, ConfigsManager).then(function() {\n                    $scope.loading = false;\n                    $scope.httpProxy = ConfigsManager.getItemFromList(\n                        \"http_proxy\");\n                    $scope.enableHttpProxy = ConfigsManager.getItemFromList(\n                        \"enable_http_proxy\");\n                    $scope.usePeerProxy = ConfigsManager.getItemFromList(\n                        \"use_peer_proxy\");\n                    if ($scope.enableHttpProxy.value) {\n                        if ($scope.httpProxy.value) {\n                            if ($scope.usePeerProxy.value) {\n                                $scope.proxy_type = \"peer-proxy\";\n                            } else {\n                                $scope.proxy_type = \"external-proxy\";\n                            }\n                        } else {\n                            $scope.proxy_type = \"builtin-proxy\";\n                        }\n                    } else {\n                        $scope.proxy_type = \"no-proxy\";\n                    }\n                });\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/proxy_settings.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Release name.\n *\n * Converts the provided release name into the release title.\n */\n\n\nangular.module('MAAS').directive('maasReleaseName', [\n    'GeneralManager', 'ManagerHelperService',\n    function(GeneralManager, ManagerHelperService) {\n    return {\n        restrict: \"A\",\n        scope: {\n          releaseName: \"=maasReleaseName\"\n        },\n        link: function(scope, element, attrs) {\n            scope.osinfo = GeneralManager.getData(\"osinfo\");\n\n            // Gets the release name.\n            var getName = function() {\n                if(angular.isArray(scope.osinfo.releases)) {\n                  for(i = 0; i < scope.osinfo.releases.length; i++) {\n                      var release = scope.osinfo.releases[i];\n                      if(release[0] === scope.releaseName) {\n                          return release[1];\n                      }\n                  }\n                }\n                return scope.releaseName;\n            };\n\n            // Sets the text inside the element.\n            var setText = function() {\n                element.text(getName());\n            };\n\n            // Update the text when the release name or osinfo changes.\n            scope.$watch('releaseName', function() {\n              setText();\n            });\n            scope.$watchCollection('osinfo.releases', function() {\n              setText();\n            });\n\n            // Load the manager and start polling.\n            ManagerHelperService.loadManager(scope, GeneralManager).then(\n                function() {\n                    GeneralManager.startPolling(scope, 'osinfo');\n                });\n\n            // Stop polling when the scope is destroyed.\n            scope.$on('$destroy', function() {\n              GeneralManager.stopPolling(scope, 'osinfo');\n            });\n        }\n    };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/release_name.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Release options directive.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the release-options.html into the template cache.\n    $templateCache.put('directive/templates/release-options.html', [\n        '<div class=\"form__group u-margin--right u-margin--top-tiny\">',\n            '<input class=\"checkbox margin-right\" id=\"diskErase\" ',\n                'type=\"checkbox\" data-ng-model=\"maasReleaseOptions.erase\" ',\n                'data-ng-disabled=\"globalOptions.erase\" ',\n                'data-ng-change=\"onEraseChange()\">',\n            '<label class=\"checkbox-label\" for=\"diskErase\">',\n                'Erase disks before releasing',\n            '</label>',\n        '</div>',\n        '<div class=\"form__group u-margin--right u-margin--top-tiny\">',\n            '<input class=\"checkbox margin-right\" id=\"secureErase\" ',\n                'type=\"checkbox\" ',\n                'data-ng-model=\"maasReleaseOptions.secureErase\" ',\n                'data-ng-disabled=\"!maasReleaseOptions.erase\">',\n            '<label class=\"checkbox-label\" for=\"secureErase\">',\n                'Use secure erase',\n            '</label>',\n        '</div>',\n        '<div class=\"form__group u-margin--top-tiny\">',\n            '<input class=\"checkbox\" id=\"quickErase\" type=\"checkbox\" ',\n                'data-ng-model=\"maasReleaseOptions.quickErase\" ',\n                'data-ng-disabled=\"!maasReleaseOptions.erase\">',\n            '<label class=\"checkbox-label\" for=\"quickErase\">',\n                'Use quick erase (not secure)',\n            '</label>',\n        '</div>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive('maasReleaseOptions', [\n    'GeneralManager', function(GeneralManager) {\n        return {\n            restrict: \"A\",\n            scope: {\n                maasReleaseOptions: '='\n            },\n            templateUrl: 'directive/templates/release-options.html',\n            link: function(scope, element, attrs) {\n                // On click of enabling erasing set the others to the\n                // global default value.\n                scope.onEraseChange = function() {\n                    if(scope.maasReleaseOptions.erase) {\n                        scope.maasReleaseOptions.secureErase = (\n                            scope.globalOptions.secure_erase);\n                        scope.maasReleaseOptions.quickErase = (\n                            scope.globalOptions.quick_erase);\n                    } else {\n                        scope.maasReleaseOptions.secureErase = false;\n                        scope.maasReleaseOptions.quickErase = false;\n                    }\n                };\n\n                // Watch the global options. Once set update the defaults\n                // of maasReleaseOptions.\n                scope.globalOptions = GeneralManager.getData(\n                    \"release_options\");\n                scope.$watch('globalOptions', function() {\n                    if(angular.isDefined(scope.globalOptions.erase)) {\n                        // Set the initial defauls for the release options.\n                        scope.maasReleaseOptions.erase = (\n                            scope.globalOptions.erase);\n                        scope.onEraseChange();\n                    }\n                }, true);\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/release_options.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n* GNU Affero General Public License version 3 (see the file LICENSE).\n*\n* Script results listing directive.\n*\n*/\n\nangular.module('MAAS').directive('maasScriptResultsList', function() {\n    return {\n        templateUrl: (\n        'static/partials/script-results-list.html?v=' + (\n            MAAS_config.files_version))\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/script_results_list.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Script runtime counter directive.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the script_runtime.html into the template cache.\n    $templateCache.put('directive/templates/script_runtime.html', [\n        '<span data-ng-if=\"(scriptStatus === 1 || scriptStatus === 7) &&',\n        \" estimatedRunTime !== 'Unknown'\" + '\">{{counter}} of ',\n        '~{{estimatedRunTime}}</span>',\n        '<span data-ng-if=\"(scriptStatus === 1 || scriptStatus === 7) &&',\n        \" estimatedRunTime == 'Unknown'\" + '\">{{counter}}</span>',\n        '<span data-ng-if=\"scriptStatus === 0 && estimatedRunTime !== ',\n        \"'Unknown'\" + '\">~{{estimatedRunTime}}</span>',\n        '<span data-ng-if=\"scriptStatus !== 0 && scriptStatus !== 1 ',\n        '&& scriptStatus !== 7\">{{runTime}}</span>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive('maasScriptRunTime', function() {\n    return {\n        restrict: \"A\",\n        require: [\"startTime\", \"runTime\", \"estimatedRunTime\", \"scriptStatus\"],\n        scope: {\n            startTime: '=',\n            runTime: '@',\n            estimatedRunTime: '@',\n            scriptStatus: '='\n        },\n        templateUrl: 'directive/templates/script_runtime.html',\n        controller: function($scope, $interval) {\n            $scope.counter = \"0:00:00\";\n\n            function incrementCounter() {\n                if(($scope.scriptStatus === 1 || $scope.scriptStatus === 7) &&\n                    $scope.startTime) {\n                    var start_date = new Date(null);\n                    start_date.setSeconds($scope.startTime);\n                    var seconds = Math.floor((Date.now() - start_date) / 1000);\n                    var minutes = Math.floor(seconds / 60);\n                    var hours = Math.floor(minutes / 60);\n                    var days = Math.floor(hours / 24);\n                    hours = hours - (days * 24);\n                    minutes = minutes - (days * 24 * 60) - (hours * 60);\n                    seconds = seconds - (days * 24 * 60 * 60) -\n                        (hours * 60 * 60) - (minutes * 60);\n                    var new_counter = \"\";\n                    // This outputs the same format used by Python. It is\n                    // import to use the same format as when scripts are not\n                    // running runtime is taken from the region using Python's\n                    // format.\n                    if(days === 1) {\n                        new_counter = days + \" day, \";\n                    }else if(days > 1) {\n                        new_counter = days + \" days, \";\n                    }\n                    new_counter += hours + \":\";\n                    if(minutes < 10) {\n                        new_counter += \"0\" + minutes + \":\";\n                    } else {\n                        new_counter += minutes + \":\";\n                    }\n                    if(seconds < 10) {\n                        new_counter += \"0\" + seconds;\n                    } else {\n                        new_counter += seconds;\n                    }\n                    $scope.counter = new_counter;\n                }\n            }\n\n            // Update the counter on init, start the interval and stop it when\n            // the directive is destroyed.\n            incrementCounter();\n            var promise = $interval(incrementCounter, 1000);\n            $scope.$on('$destroy', function() {\n              $interval.cancel(promise);\n            });\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/script_runtime.js","/* Copyright 2017-2018 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Script select directive.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the script-select.html into the template cache.\n    $templateCache.put('directive/templates/script-select.html', [\n        '<tags-input data-ng-model=\"ngModel\" placeholder=\"Select scripts\" ',\n                'key-property=\"id\" display-property=\"name\" min-length=1',\n                'on-tag-adding=\"onTagAdding($tag)\" spellcheck=\"false\"',\n                'add-from-autocomplete-only=\"true\" on-tag-removed=\"refocus()\"',\n                'on-tag-adding=\"onTagAdding($tag)\" on-tag-added=\"refocus()\">',\n            '<auto-complete source=\"getScripts($query)\" min-length=\"0\" ',\n                    'load-on-down-arrow=\"true\" load-on-focus=\"true\" ',\n                    'load-on-empty=\"true\" template=\"script-template\" ',\n                    'max-results-to-show=\"1000\">',\n            '</auto-complete>',\n        '</tags-input>',\n        '<script type=\"text/ng-template\" id=\"script-template\">',\n            '<div>',\n                '<p>',\n                    '{{data.name}} {{data.tags_string}}',\n                '</p>',\n                '<span class=\"p-form-help-text\">',\n                    '{{data.description}}',\n                '</span>',\n            '</div>',\n        '</script>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive(\n        'maasScriptSelect',\n        ['$q', 'ScriptsManager', 'ManagerHelperService',\n        function($q, ScriptsManager, ManagerHelperService) {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        scope: {\n            ngModel: '=',\n            scriptType: '='\n        },\n        templateUrl: 'directive/templates/script-select.html',\n        link: function($scope, element, attrs, ngModelCtrl) {\n\n            $scope.allScripts = ScriptsManager.getItems();\n            $scope.scripts = [];\n            $scope.getScripts = function(query) {\n                $scope.scripts.length = 0;\n                angular.forEach($scope.allScripts, function(script) {\n                    if(script.script_type === $scope.scriptType &&\n                            script.name.indexOf(query) >= 0) {\n                        script.tags_string = '';\n                        angular.forEach(script.tags, function (tag) {\n                            if(script.tags_string === '') {\n                                script.tags_string = '(' + tag;\n                            } else {\n                                script.tags_string += ', ' + tag;\n                            }\n                        });\n                        if(script.tags_string !== '') {\n                            script.tags_string += ')';\n                        }\n                        $scope.scripts.push(script);\n                    }\n                });\n                return {\n                    data: $scope.scripts\n                };\n            };\n            $scope.onTagAdding = function(tag) {\n                return tag.id !== undefined;\n            };\n\n            $scope.refocus = function() {\n                var tagsInput = element.find('tags-input');\n                var tagsInputScope = tagsInput.isolateScope();\n                tagsInputScope.eventHandlers.input.change('');\n                tagsInputScope.eventHandlers.input.focus();\n                tagsInput.find('input').focus();\n            };\n\n            if(!angular.isArray($scope.ngModel)) {\n                $scope.ngModel = [];\n            }\n            ManagerHelperService.loadManager($scope, ScriptsManager).then(\n                function() {\n                    $scope.ngModel.length = 0;\n                    angular.forEach($scope.allScripts, function(script) {\n                        if(script.script_type === $scope.scriptType &&\n                           script.for_hardware.length === 0) {\n                            if($scope.scriptType === 0) {\n                                // By default MAAS runs all custom\n                                // commissioning scripts in addition to all\n                                // builtin commissioning scripts.\n                                $scope.ngModel.push(script);\n                            } else if($scope.scriptType === 2 &&\n                                    script.tags.indexOf('commissioning') >= 0) {\n                                // By default MAAS runs testing scripts which\n                                // have been tagged 'commissioning'\n                                $scope.ngModel.push(script);\n                            }\n                        }\n                    });\n                }\n            );\n        }\n    };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/script_select.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Script status icon select directive.\n */\n\nangular.module('MAAS').run(['$templateCache', function ($templateCache) {\n    // Inject the script_status.html into the template cache.\n    $templateCache.put('directive/templates/script_status.html', [\n        '<span data-ng-class=\"icon\" data-ng-show=\"show\"></span>'\n    ].join(''));\n}]);\n\nangular.module('MAAS').directive('maasScriptStatus', function() {\n    return {\n        restrict: \"A\",\n        require: \"scriptStatus\",\n        scope: {\n            scriptStatus: '='\n        },\n        templateUrl: 'directive/templates/script_status.html',\n        controller: function($scope) {\n            function getIcon() {\n                $scope.show = true;\n                switch($scope.scriptStatus) {\n                    // SCRIPT_STATUS.PENDING\n                    case 0:\n                        $scope.icon = 'p-icon--pending';\n                        break;\n                    // SCRIPT_STATUS.RUNNING\n                    case 1:\n                    // SCRIPT_STATUS.INSTALLING\n                    case 7:\n                        $scope.icon = 'p-icon--running';\n                        break;\n                    // SCRIPT_STATUS.PASSED\n                    case 2:\n                        $scope.icon = 'p-icon--pass';\n                        break;\n                    // SCRIPT_STATUS.FAILED\n                    case 3:\n                    // SCRIPT_STATUS.ABORTED\n                    case 5:\n                    // SCRIPT_STATUS.DEGRADED\n                    case 6:\n                    // SCRIPT_STATUS.FAILED_INSTALLING\n                    case 8:\n                        $scope.icon = 'p-icon--power-error';\n                        break;\n                    // SCRIPT_STATUS.TIMEDOUT\n                    case 4:\n                        $scope.icon = 'p-icon--timed-out';\n                        break;\n                    case -1:\n                        // No scripts have been run.\n                        $scope.show = false;\n                        break;\n                    default:\n                        $scope.icon = 'p-icon--help';\n                        break;\n                }\n            }\n\n            getIcon();\n\n            $scope.$watch(\"scriptStatus\", function() {\n                getIcon();\n            });\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/script_status.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * SSH keys directive.\n*/\n\nangular.module('MAAS').directive('maasSshKeys', [\n    '$sce', 'SSHKeysManager', 'ManagerHelperService', 'JSONService',\n    function($sce, SSHKeysManager, ManagerHelperService, JSONService) {\n        return {\n            restrict: \"E\",\n            scope: {},\n            templateUrl: (\n                'static/partials/ssh-keys.html?v=' + (\n                    MAAS_config.files_version)),\n            controller: function($scope, $rootScope, $element, $document) {\n                $scope.loading = true;\n                $scope.keys = SSHKeysManager.getItems();\n                $scope.groupedKeys = [];\n                $scope.add = {\n                    source: 'lp',\n                    authId: '',\n                    key: '',\n                    error: null,\n                    saving: false\n                };\n                $scope.sourceTitles = {\n                    'lp': 'Launchpad',\n                    'gh': 'Github',\n                    'upload': 'Upload'\n                };\n                $scope.openRow = null;\n                $scope.rowMode = null;\n\n                // Expose trustAsHtml on the scope for the view to use.\n                $scope.trustAsHtml = $sce.trustAsHtml;\n\n                // Open a row.\n                $scope.open = function(obj, mode) {\n                    $scope.openRow = obj.id;\n                    $scope.rowMode = mode;\n                };\n\n                // Close the open row.\n                $scope.close = function() {\n                    $scope.openRow = null;\n                };\n\n                // Returns true if the key can be imported.\n                $scope.canImportKeys = function() {\n                    if($scope.add.saving) {\n                        return false;\n                    } else if ($scope.add.source === 'lp' ||\n                        $scope.add.source === 'gh') {\n                        return $scope.add.authId.length > 0;\n                    } else {\n                        return $scope.add.key.length > 0;\n                    }\n                };\n\n                // Called to import the key.\n                $scope.importKeys = function() {\n                    if(!$scope.canImportKeys()) {\n                        return;\n                    }\n                    $scope.add.error = null;\n                    $scope.add.saving = true;\n                    if($scope.add.source === 'lp' ||\n                        $scope.add.source === 'gh') {\n                        SSHKeysManager.importKeys({\n                            'protocol': $scope.add.source,\n                            'auth_id': $scope.add.authId\n                        }).then(function() {\n                            $scope.add.saving = false;\n                            $scope.add.source = 'lp';\n                            $scope.add.authId = '';\n                            $scope.add.key = '';\n                        }, function(error) {\n                            $scope.add.saving = false;\n                            var errorJson = JSONService.tryParse(error);\n                            if(angular.isObject(errorJson)) {\n                                if(angular.isArray(errorJson.__all__)) {\n                                    $scope.add.error = errorJson.__all__[0];\n                                } else {\n                                    $scope.add.error = error;\n                                }\n                            } else {\n                                $scope.add.error = error;\n                            }\n                        });\n                    } else {\n                        SSHKeysManager.createItem({\n                            'key': $scope.add.key\n                        }).then(function() {\n                            $scope.add.saving = false;\n                            $scope.add.source = 'lp';\n                            $scope.add.authId = '';\n                            $scope.add.key = '';\n                        }, function(error) {\n                            $scope.add.saving = false;\n                            var errorJson = JSONService.tryParse(error);\n                            if(angular.isObject(errorJson)) {\n                                if(angular.isArray(errorJson.key)) {\n                                    $scope.add.error = errorJson.key[0];\n                                } else if(angular.isArray(errorJson.__all__)) {\n                                    $scope.add.error = errorJson.__all__[0];\n                                } else {\n                                    $scope.add.error = error;\n                                }\n                            } else {\n                                $scope.add.error = error;\n                            }\n                        });\n                    }\n                };\n\n                // Called to delete the selected group of keys.\n                $scope.confirmDelete = function(obj) {\n                    angular.forEach(obj.keys, function(key) {\n                        SSHKeysManager.deleteItem(key);\n                    });\n                };\n\n                // Updates the groupedKeys that is used to render the table.\n                $scope.$watchCollection(\"keys\", function() {\n                    $scope.groupedKeys = [];\n                    var keyMap = {};\n                    angular.forEach($scope.keys, function(key) {\n                        var groupObj, keysource = key.keysource;\n                        if(angular.isObject(keysource)) {\n                            var keysourceKey = (\n                                keysource.protocol + '/' + keysource.auth_id);\n                            groupObj = keyMap[keysourceKey];\n                            if(angular.isObject(groupObj)) {\n                                groupObj.keys.push(key);\n                            } else {\n                                groupObj = {\n                                    id: keysourceKey,\n                                    source: keysource.protocol,\n                                    authId: keysource.auth_id,\n                                    keys: [key]\n                                };\n                                keyMap[keysourceKey] = groupObj;\n                                $scope.groupedKeys.push(groupObj);\n                            }\n                        } else {\n                            groupObj = {\n                                id: 'upload/' + key.id,\n                                source: 'upload',\n                                authId: '',\n                                keys: [key]\n                            };\n                            $scope.groupedKeys.push(groupObj);\n                        }\n                    });\n                });\n\n                ManagerHelperService.loadManager($scope, SSHKeysManager).then(\n                    function() {\n                        $scope.loading = false;\n                    });\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/ssh_keys.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n* GNU Affero General Public License version 3 (see the file LICENSE).\n*\n* Switches listing directive.\n*\n* Renders the switches listing.\n*/\n\n\nangular.module('MAAS').directive('maasSwitchesTable', [\n  'SwitchesManager', 'GeneralManager', 'ManagerHelperService',\n  function (SwitchesManager, GeneralManager, ManagerHelperService) {\n    return {\n      restrict: \"E\",\n      scope: {\n        search: \"=\",\n        ngDisabled: \"&\",\n        switchHasError: \"&\",\n        hideCheckboxes: \"=?\",\n        onListingChange: \"&\",\n        onCheckAll: \"&\",\n        onCheck: \"&\"\n      },\n      templateUrl: (\n        'static/partials/switches-table.html?v=' + (\n          MAAS_config.files_version)),\n      link: function(scope, element, attrs) {\n        // Statuses that should show spinner.\n        var SPINNER_STATUSES = [\n          1,   // commissioning\n          9,   // deploying\n          12,  // releasing\n          14,  // disk erasing\n          17,  // entering rescue mode\n          19,  // exiting rescue mode\n          21   // testing\n        ];\n\n        // Scope variables.\n        scope.table = {\n          column: 'fqdn',\n          predicate: 'fqdn',\n          reverse: false,\n          allViewableChecked: false,\n          switches: SwitchesManager.getItems(),\n          filteredSwitches: [],\n          osinfo: GeneralManager.getData(\"osinfo\")\n        };\n\n        // Ensures that the checkbox for select all is the correct value.\n        scope.updateAllChecked = function() {\n          // Not checked when the filtered switches are empty.\n          if(scope.table.filteredSwitches.length === 0) {\n              scope.table.allViewableChecked = false;\n              return;\n          }\n\n          // Loop through all filtered switches and see if all are checked.\n          var i;\n          for(i = 0; i < scope.table.filteredSwitches.length; i++) {\n              if(!scope.table.filteredSwitches[i].$selected) {\n                  scope.table.allViewableChecked = false;\n                  return;\n              }\n          }\n          scope.table.allViewableChecked = true;\n        };\n\n        // Selects and deselects visible switches.\n        scope.toggleCheckAll = function() {\n          if(scope.table.allViewableChecked) {\n            angular.forEach(\n              scope.table.filteredSwitches, function(switch_) {\n                SwitchesManager.unselectItem(switch_.system_id);\n              });\n          } else {\n            angular.forEach(\n              scope.table.filteredSwitches, function(switch_) {\n                SwitchesManager.selectItem(switch_.system_id);\n              });\n          }\n          scope.updateAllChecked();\n          scope.onCheckAll();\n        };\n\n        // Selects and unselects switch.\n        scope.toggleChecked = function(switch_) {\n          if(SwitchesManager.isSelected(switch_.system_id)) {\n            SwitchesManager.unselectItem(switch_.system_id);\n          } else {\n            SwitchesManager.selectItem(switch_.system_id);\n          }\n          scope.updateAllChecked();\n          scope.onCheck({$switch_: switch_});\n        };\n\n        // Sorts the table by predicate.\n        scope.sortTable = function(predicate) {\n            scope.table.predicate = predicate;\n            scope.table.reverse = !scope.table.reverse;\n        };\n\n        // Sets the viewable column or sorts.\n        scope.selectColumnOrSort = function(predicate) {\n            if(scope.table.column !== predicate) {\n                scope.table.column = predicate;\n            } else {\n                scope.sortTable(predicate);\n            }\n        };\n\n        // Return true if spinner should be shown.\n        scope.showSpinner = function(switch_) {\n          return SPINNER_STATUSES.indexOf(switch_.status_code) > -1;\n        };\n\n        // Returns the release title from osinfo.\n        scope.getReleaseTitle = function(os_release) {\n          if(angular.isArray(scope.table.osinfo.releases)) {\n            for(i = 0; i < scope.table.osinfo.releases.length; i++) {\n              var release = scope.table.osinfo.releases[i];\n              if(release[0] === os_release) {\n                return release[1];\n              }\n            }\n          }\n          return os_release;\n        };\n\n        // Returns the status text to show.\n        scope.getStatusText = function(switch_) {\n          var showRelease = ['Deploying', 'Deployed'];\n          if(showRelease.indexOf(switch_.status) === -1) {\n            return switch_.status;\n          } else {\n            var releaseTitle = scope.getReleaseTitle(\n              switch_.osystem + '/' + switch_.distro_series);\n            if(switch_.osystem === \"ubuntu\") {\n              releaseTitle = releaseTitle.split('\"')[0].trim();\n            }\n            if(switch_.status === \"Deployed\") {\n              return releaseTitle;\n            }\n            if(switch_.status === \"Deploying\") {\n              return switch_.status + ' ' + releaseTitle;\n            }\n          }\n        };\n\n        // When the list of filtered switches change update the all checkbox.\n        scope.$watchCollection(\"table.filteredSwitches\", function() {\n          scope.updateAllChecked();\n          scope.onListingChange({$switches: scope.table.filteredSwitches});\n        });\n\n        // Load the required managers and start polling for osinfo.\n        ManagerHelperService.loadManagers(\n          scope, [SwitchesManager, GeneralManager]).then(function() {\n            GeneralManager.startPolling(scope, \"osinfo\");\n          });\n\n        // Stop polling when the scope is destroyed.\n        scope.$on(\"$destroy\", function() {\n          GeneralManager.stopPolling(scope, \"osinfo\");\n        });\n      }\n    };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/switches_table.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Toggle control.\n */\n\nangular.module('MAAS').directive('toggleCtrl',[\n    '$document',\n    function($document) {\n        return {\n            restrict: 'A',\n            link: function($scope, $element, $attr){\n\n                $scope.isToggled = false;\n                $scope.toggleMenu = function() {\n                  $scope.isToggled = !$scope.isToggled;\n                };\n\n                var clickHandler = function(event) {\n                    if ($element.find(event.target).length > 0) {\n                        return;\n                    }\n                    $scope.$apply(function() {\n                        $scope.isToggled = false;\n                    });\n                };\n\n                $document.on('click', clickHandler);\n                $scope.$on('$destroy', function() {\n                    $document.off('click', clickHandler);\n                });\n            }\n        };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/toggle_control.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Type directive.\n */\n\nangular.module('MAAS').directive('ngType', function() {\n    return {\n        restrict: \"A\",\n        scope: {\n            ngType: \"=\"\n        },\n        link: function(scope, element, attrs) {\n            scope.$watch('ngType', function() {\n                valid_types = [\n                    'button',\n                    'checkbox',\n                    'color',\n                    'date ',\n                    'datetime ',\n                    'datetime-local ',\n                    'email ',\n                    'file',\n                    'hidden',\n                    'image',\n                    'month ',\n                    'number ',\n                    'password',\n                    'radio',\n                    'range ',\n                    'reset',\n                    'search',\n                    'submit',\n                    'tel',\n                    'text',\n                    'time ',\n                    'url',\n                    'week'\n                ];\n                if(valid_types.indexOf(scope.ngType) !== -1) {\n                    element[0].type = scope.ngType;\n                }\n                else {\n                    throw new Error(\"Invalid input type: \" + scope.ngType);\n                }\n\n            });\n        }\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/type.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Version reloader.\n *\n * Watches the version reported by the GeneralManager if it changes then\n * the entire page is reloaded by-passing the local browser cache.\n */\n\n\nangular.module('MAAS').directive('maasVersionReloader', [\n    '$window', 'GeneralManager', 'ManagerHelperService', 'LogService',\n    function($window, GeneralManager, ManagerHelperService, LogService) {\n        return {\n            restrict: \"A\",\n            controller: function($scope) {\n                $scope.version = GeneralManager.getData(\"version\");\n\n                // Reload the page by-passing the browser cache.\n                $scope.reloadPage = function() {\n                    // Force cache reload by passing true.\n                    $window.location.reload(true);\n                };\n\n                ManagerHelperService.loadManager($scope, GeneralManager).then(\n                    function() {\n                        GeneralManager.enableAutoReload(true);\n                        LogService.info(\n                            'Version reloader: Monitoring MAAS \"' +\n                            $scope.site + '\"; version', $scope.version.text,\n                            \"via\", $window.location.href);\n                        $scope.$watch(\"version.text\",\n                            function(newValue, oldValue) {\n                                if(newValue !== oldValue) {\n                                    LogService.info(\n                                        \"MAAS version changed from '\" +\n                                        oldValue + \"' to '\" + newValue +\n                                        \"'; forcing reload.\");\n                                    $scope.reloadPage();\n                                }\n                            });\n                    });\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/version_reloader.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Window Width.\n *\n * Watches the window width and calculates what the inner width of the window.\n * Applying the attribute window-wdith on the parent element and calling\n * data-ng-if=\"width > 768\" you can use this to hide / show elements for mobile\n * development.\n *\n */\n\n\nangular.module('MAAS').directive('windowWidth', [\n    '$window',\n    function ($window) {\n        return {\n            restrict: 'A',\n            link: function($scope, element, attrs){\n                $scope.windowWidth = $window.innerWidth;\n                function onResize(){\n                    // uncomment for only fire when $window.innerWidth change\n                    if ($scope.windowWidth !== $window.innerWidth) {\n                        $scope.windowWidth = $window.innerWidth;\n                        $scope.$apply(function () {\n                            $scope.message = \"Timeout called!\";\n                        });\n                    }\n                }\n\n                function cleanUp() {\n                    angular.element($window).off('resize', onResize);\n                }\n\n                angular.element($window).on('resize', onResize);\n                $scope.$on('$destroy', cleanUp);\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/directives/window_width.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Filter VLANs by Fabric.\n */\n\nangular.module('MAAS').filter('filterByFabric', function() {\n    return function(vlans, fabric) {\n        var filtered = [];\n        var id;\n        if(angular.isObject(fabric)) {\n            id = fabric.id;\n        } else if(angular.isNumber(fabric)) {\n            id = fabric;\n        } else {\n            return filtered;\n        }\n        angular.forEach(vlans, function(vlan) {\n            if(vlan.fabric === id) {\n                filtered.push(vlan);\n            }\n        });\n        return filtered;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/filters/by_fabric.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Filter Subnets by Space.\n */\n\nangular.module('MAAS').filter('filterBySpace', function() {\n    return function(objects, space) {\n        var filtered = [];\n        var id;\n        if(angular.isObject(space)) {\n            id = space.id;\n        } else if(angular.isNumber(space)) {\n            id = space;\n        } else {\n            return filtered;\n        }\n        angular.forEach(objects, function(object) {\n            if(object.space === id) {\n                filtered.push(object);\n            }\n        });\n        return filtered;\n    };\n});\n\nangular.module('MAAS').filter('filterByNullSpace', function() {\n    return function(objects) {\n        var filtered = [];\n        angular.forEach(objects, function(object) {\n            if(object.space === null) {\n                filtered.push(object);\n            }\n        });\n        return filtered;\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/filters/by_space.js","/* Copyright 2016-2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Filter objects with subnet foreign key references by a particular subnet.\n */\n\nangular.module('MAAS').filter('filterBySubnet', function() {\n    return function(foreign_objects, subnet, key) {\n        var filtered = [];\n        var id;\n        if(angular.isObject(subnet)) {\n            id = subnet.id;\n        } else if(angular.isNumber(subnet)) {\n            id = subnet;\n        } else {\n            return filtered;\n        }\n        if(angular.isUndefined(key)) {\n            key = 'subnet';\n        }\n        angular.forEach(foreign_objects, function(obj) {\n            if(obj[key] === id) {\n                filtered.push(obj);\n            }\n        });\n        return filtered;\n    };\n});\n\n// Filters by subnet, unless the subnet is not defined. If the subnet is not\n// defined, filters by VLAN.\nangular.module('MAAS').filter('filterBySubnetOrVlan', function() {\n    return function(foreign_objects, subnet, vlan) {\n        var filtered = [];\n        var id;\n        var key = null;\n        if(angular.isDefined(subnet) && subnet !== null) {\n            key = 'subnet';\n            if(angular.isObject(subnet)) {\n                id = subnet.id;\n            } else if(angular.isNumber(subnet)) {\n                id = subnet;\n            }\n        } else if(angular.isDefined(vlan) && vlan !== null) {\n            key = 'vlan';\n            if(angular.isObject(vlan)) {\n                id = vlan.id;\n            } else if(angular.isNumber(vlan)) {\n                id = vlan;\n            }\n        } else {\n            return filtered;\n        }\n        angular.forEach(foreign_objects, function(obj) {\n            if(obj[key] === id) {\n                filtered.push(obj);\n            }\n        });\n        return filtered;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/filters/by_subnet.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Filter Subnets by VLAN.\n */\n\nangular.module('MAAS').filter('filterByVLAN', function() {\n    return function(subnets, vlan) {\n        var filtered = [];\n        var id;\n        if(angular.isObject(vlan)) {\n            id = vlan.id;\n        } else if(angular.isNumber(vlan)) {\n            id = vlan;\n        } else {\n            return filtered;\n        }\n        angular.forEach(subnets, function(subnet) {\n            if(subnet.vlan === id) {\n                filtered.push(subnet);\n            }\n        });\n        return filtered;\n    };\n});\n\nangular.module('MAAS').filter('filterControllersByVLAN', function() {\n    return function(controllers, vlan) {\n        var filtered = [];\n        if(!angular.isObject(vlan)) {\n            return filtered;\n        }\n        angular.forEach(controllers, function(controller) {\n            // XXX mpontillo disable VLAN check until VLAN is populated\n            // on the rack controller's interfaces.\n            // if(controller.vlan_ids.indexOf(vlan.id) != -1) {\n\n            // XXX mpontillo 2016-02-22 this is a hack to prevent too many\n            // nodes from being sent through the filter; we have a bug which\n            // sends nodes in which are not controllers.\n            if(controller.node_type === 2 || controller.node_type === 4) {\n                filtered.push(controller);\n            }\n        });\n        return filtered;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/filters/by_vlan.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Nodes Filter\n */\n\nangular.module('MAAS').filter('nodesFilter', ['$filter', 'SearchService',\n    function($filter, SearchService) {\n\n        // Default filter built-in angular. Used on all extra filters that do\n        // not specify a specific type.\n        var standardFilter = $filter('filter');\n\n        // Helpers that convert the pseudo field on node to an actual\n        // value from the node.\n        var mappings = {\n            cpu: function(node) {\n                return node.cpu_count;\n            },\n            cores: function(node) {\n                return node.cpu_count;\n            },\n            ram: function(node) {\n                return node.memory;\n            },\n            mac: function(node) {\n                macs = [];\n                macs.push(node.pxe_mac);\n                macs.push.apply(macs, node.extra_macs);\n                return macs;\n            },\n            zone: function(node) {\n                return node.zone.name;\n            },\n            pod: function(node) {\n                return (node.pod === undefined) ? undefined : node.pod.name;\n            },\n            'pod-id': function(node) {\n                return (node.pod === undefined) ? undefined : node.pod.id;\n            },\n            power: function(node) {\n                return node.power_state;\n            },\n            release: function(node) {\n                if(node.status_code === 6 || node.status_code === 9) {\n                    return node.osystem + \"/\" + node.distro_series;\n                } else {\n                    return '';\n                }\n            }\n        };\n\n        // Return true when value is an integer.\n        function isInteger(value) {\n            // +1 done to silence js-lint.\n            return value % +1 === 0;\n        }\n\n        // Return true when lowercase value contains the already\n        // lowercased lowerTerm.\n        function _matches(value, lowerTerm, exact) {\n            if(angular.isNumber(value)) {\n                if(exact) {\n                    if(isInteger(value)) {\n                        return value === parseInt(lowerTerm, 10);\n                    } else {\n                        return value === parseFloat(lowerTerm);\n                    }\n                } else {\n                    if(isInteger(value)) {\n                        return value >= parseInt(lowerTerm, 10);\n                    } else {\n                        return value >= parseFloat(lowerTerm);\n                    }\n                }\n            } else if(angular.isString(value)) {\n                if(exact) {\n                    return value.toLowerCase() === lowerTerm;\n                } else {\n                    return value.toLowerCase().indexOf(lowerTerm) >= 0;\n                }\n            } else {\n                return value === lowerTerm;\n            }\n        }\n\n        // Return true if value matches lowerTerm, unless negate is true then\n        // return false if matches.\n        function matches(value, lowerTerm, exact, negate) {\n            var match = _matches(value, lowerTerm, exact);\n            if(negate) {\n                return !match;\n            }\n            return match;\n        }\n\n        return function(nodes, search) {\n            if(angular.isUndefined(nodes) ||\n                angular.isUndefined(search) ||\n                nodes.length === 0) {\n                return nodes;\n            }\n\n            var filtered = nodes;\n            var filters = SearchService.getCurrentFilters(search);\n            angular.forEach(filters, function(terms, attr) {\n                if(attr === '_') {\n                    // Use the standard filter on terms that do not specify\n                    // an attribute.\n                    angular.forEach(terms, function(term) {\n                        filtered = standardFilter(filtered, term);\n                    });\n                } else if(attr === 'in') {\n                    // \"in:\" is used to filter the nodes by those that are\n                    // currently selected.\n                    angular.forEach(terms, function(term) {\n                        var matched = [];\n                        angular.forEach(filtered, function(node) {\n                            if(node.$selected &&\n                                term.toLowerCase() === \"selected\") {\n                                matched.push(node);\n                            } else if(!node.$selected &&\n                                term.toLowerCase() === \"!selected\") {\n                                matched.push(node);\n                            }\n                        });\n                        filtered = matched;\n                    });\n                } else {\n                    // Mapping function for the attribute.\n                    var mapFunc = mappings[attr];\n\n                    // Loop through each item and only select the matching.\n                    var matched = [];\n                    angular.forEach(filtered, function(node) {\n                        var value;\n                        if(angular.isFunction(mapFunc)) {\n                            value = mapFunc(node);\n                        } else if(node.hasOwnProperty(attr)) {\n                            value = node[attr];\n                        }\n\n                        // Unable to get value for this node. So skip it.\n                        if(angular.isUndefined(value)) {\n                            return;\n                        }\n\n                        var i, j;\n                        for(i = 0; i < terms.length; i++) {\n                            var term = terms[i].toLowerCase();\n                            var exact = false, negate = false;\n\n                            // '!' at the beginning means the term is negated.\n                            while(term.indexOf('!') === 0) {\n                                negate = !negate;\n                                term = term.substring(1);\n                            }\n\n                            // '=' at the beginning means to match exactly.\n                            if(term.indexOf('=') === 0) {\n                                exact = true;\n                                term = term.substring(1);\n                            }\n\n                            // Allow '!' after the '=' as well.\n                            while(term.indexOf('!') === 0) {\n                                negate = !negate;\n                                term = term.substring(1);\n                            }\n\n                            if(angular.isArray(value)) {\n                                // If value is an array check if the\n                                // term matches any value in the\n                                // array. If negated, check whether no\n                                // value in the array matches.\n                                if(negate) {\n                                    // Push to matched only if no value in\n                                    // the array matches term.\n                                    var no_match = true;\n                                    for(j = 0; j < value.length; j++) {\n                                        if(matches(\n                                            value[j], term, exact, false)) {\n                                            no_match = false;\n                                            break; // Skip remaining tests.\n                                        }\n                                    }\n                                    if(no_match) {\n                                        matched.push(node);\n                                        return;\n                                    }\n                                } else {\n                                    for(j = 0; j < value.length; j++) {\n                                        if(matches(\n                                            value[j], term, exact, false)) {\n                                            matched.push(node);\n                                            return;\n                                        }\n                                    }\n                                }\n                            } else {\n                                // Standard value check that it matches the\n                                // term.\n                                if(matches(value, term, exact, negate)) {\n                                    matched.push(node);\n                                    return;\n                                }\n                            }\n                        }\n                    });\n                    filtered = matched;\n                }\n            });\n            return filtered;\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/filters/nodes.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Filter Subnets by VLAN.\n */\n\nangular.module('MAAS').filter('orderByDate', function() {\n    return function(items, field, field2) {\n        var sorted = items.slice();\n        sorted.sort(function(a, b) {\n            aDate = new Date(a[field]);\n            bDate = new Date(b[field]);\n\n            // Sort by ID as well if equal.\n            if(angular.isString(field2) &&\n                aDate.getTime() === bDate.getTime()) {\n                return (\n                    a[field2] > b[field2] ? -1 : a[field2] < b[field2] ? 1 : 0);\n            } else {\n              return aDate > bDate ? -1 : aDate < bDate ? 1 : 0;\n            }\n        });\n        return sorted;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/filters/order_by_date.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Filter to remove the default VLAN as an option.\n */\n\nangular.module('MAAS').filter('removeDefaultVLAN', function() {\n    return function(vlans) {\n        var filtered = [];\n        angular.forEach(vlans, function(vlan) {\n            if(vlan.vid !== 0) {\n                filtered.push(vlan);\n            }\n        });\n        return filtered;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/filters/remove_default_vlan.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Browser Service\n *\n * Detects the browser used by the client. This is very simple case, because\n * at the moment we really only care about if the browser is Firefox. This\n * could be improved for other browsers, but this should only be used as a\n * last resort to prevent something bad happening on a misbehaving browser.\n */\n\nangular.module('MAAS').service('BrowserService', ['$window',\n    function($window) {\n\n        // The first items in the array will be matched first. So if the user\n        // agent for the browser contains both you need to make the more\n        // specific one first. E.g. Chrome contains both \"Chrome\" and \"Safari\"\n        // in its user-agent string. Since \"Safari\" does not chrome comes first\n        // so it matches that browser more specifically.\n        var BROWSERS = [\n            {\n                name: \"chrome\",\n                regex: /chrome/i\n            },\n            {\n                name: \"safari\",\n                regex: /safari/i\n            },\n            {\n                name: \"firefox\",\n                regex: /firefox/i\n            },\n            {\n                name: \"ie\",\n                regex: /MSIE/\n            }\n        ];\n\n        this.browser = \"other\";\n\n        // Set the browser if a regex matches. The first to match wins.\n        var self = this;\n        angular.forEach(BROWSERS, function(matcher) {\n            if(matcher.regex.test($window.navigator.userAgent) &&\n                self.browser === \"other\") {\n                self.browser = matcher.name;\n            }\n        });\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/browser.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Converter Service\n *\n * Used by controllers to convert user inputs.\n */\n\nangular.module('MAAS').service('ConverterService', function() {\n\n        // Case is important: 1kB is 1000 bytes, whereas 1KB is 1024 bytes.\n        // See https://en.wikipedia.org/wiki/Byte#Unit_symbol\n        var UNITS = ['bytes', 'kB', 'MB', 'GB', 'TB'];\n\n        var KILOBYTE = 1000.0;\n        var MEGABYTE = 1000.0 * 1000.0;\n        var GIGABYTE = 1000.0 * 1000.0 * 1000.0;\n        var TERABYTE = 1000.0 * 1000.0 * 1000.0 * 1000.0;\n\n        // Convert the bytes to a unit.\n        this.bytesToUnits = function(bytes) {\n            // Support string being passed.\n            if(angular.isString(bytes)) {\n                bytes = parseInt(bytes, 10);\n            }\n\n            var i, unit, converted = bytes;\n            for(i = 0; i < UNITS.length; i++) {\n                unit = UNITS[i];\n                if(Math.abs(converted) < 1000.0 || unit === 'TB') {\n                    var string = converted.toFixed(1) + \" \" + unit;\n                    if(unit === 'bytes') {\n                        string = converted + \" \" + unit;\n                    }\n                    return {\n                        original: bytes,\n                        converted: converted,\n                        units: unit,\n                        string: string\n                    };\n                }\n                converted /= 1000.0;\n            }\n        };\n\n        // Convert the data based on the unit to bytes.\n        this.unitsToBytes = function(data, unit) {\n            // Support string being passed.\n            if(angular.isString(data)) {\n                data = parseFloat(data);\n            }\n            if(unit === 'bytes') {\n                return Math.floor(data);\n            } else if(unit === 'kB') {\n                return Math.floor(data * KILOBYTE);\n            } else if(unit === 'MB') {\n                return Math.floor(data * MEGABYTE);\n            } else if(unit === 'GB') {\n                return Math.floor(data * GIGABYTE);\n            } else if(unit === 'TB') {\n                return Math.floor(data * TERABYTE);\n            }\n        };\n\n        // Convert the data based on unit down to the lowest tolerance to still\n        // be the same value in that unit.\n        this.roundUnits = function(data, unit) {\n            // Support string being passed.\n            if(angular.isString(data)) {\n                data = parseFloat(data);\n            }\n            if(unit === 'bytes') {\n                return Math.floor(data);\n            } else if(unit === 'kB') {\n                return Math.floor(data * KILOBYTE) - (0.05 * KILOBYTE);\n            } else if(unit === 'MB') {\n                return Math.floor(data * MEGABYTE) - (0.05 * MEGABYTE);\n            } else if(unit === 'GB') {\n                return Math.floor(data * GIGABYTE) - (0.05 * GIGABYTE);\n            } else if(unit === 'TB') {\n                return Math.floor(data * TERABYTE) - (0.05 * TERABYTE);\n            }\n        };\n\n        // Round the bytes down to size based on the block size.\n        this.roundByBlockSize = function(bytes, block_size) {\n            return block_size * Math.floor(bytes / block_size);\n        };\n\n        // Convert string ipv4 address into octets array.\n        this.ipv4ToOctets = function(ipAddress) {\n            var parts = ipAddress.split('.');\n            var octets = [];\n            angular.forEach(parts, function(part) {\n                octets.push(parseInt(part, 10));\n            });\n            return octets;\n        };\n\n        // Convert string ipv4 address into integer.\n        this.ipv4ToInteger = function(ipAddress) {\n            var octets = this.ipv4ToOctets(ipAddress);\n            return (\n                (octets[0] * Math.pow(256,3)) +\n                (octets[1] * Math.pow(256,2)) +\n                (octets[2] * 256) + octets[3]);\n        };\n\n        // Convert ipv6 address to a full ipv6 address, removing the\n        // '::' shortcut and padding each group with zeros.\n        this.ipv6Expand = function(ipAddress) {\n            var i, expandedAddress = ipAddress;\n            if(expandedAddress.indexOf(\"::\") !== -1) {\n                // '::' is present so replace it with the required\n                // number of '0000:' based on its location in the string.\n                var split = ipAddress.split(\"::\");\n                var groups = 0;\n                for(i = 0; i < split.length; i++) {\n                    groups += split[i].split(\":\").length;\n                }\n                expandedAddress = split[0] + \":\";\n                for(i = 0; i < 8 - groups; i++) {\n                    expandedAddress += \"0000:\";\n                }\n                expandedAddress += split[1];\n            }\n            // Pad the output of each part with zeros.\n            var output = [], parts = expandedAddress.split(\":\");\n            angular.forEach(parts, function(part) {\n                output.push(\"0000\".substr(part.length) + part);\n            });\n            return output.join(\":\");\n        };\n\n        // Convert string ipv6 into groups array.\n        this.ipv6ToGroups = function(ipAddress) {\n            var groups = [];\n            var parts = this.ipv6Expand(ipAddress).split(\":\");\n            angular.forEach(parts, function(part) {\n                groups.push(parseInt(part, 16));\n            });\n            return groups;\n        };\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/converter.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Error Service\n */\n\nangular.module('MAAS').service('ErrorService', function() {\n\n        // Holds the client error.\n        this._error = null;\n\n        // Raise this error in the UI.\n        this.raiseError = function(error) {\n            // Possible that this method is called more than once.\n            // Only take the first error.\n            if(!angular.isString(this._error)) {\n                this._error = error;\n            }\n        };\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/error.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS JSON Service\n *\n * Used by controllers to parse JSON.\n */\n\nangular.module('MAAS').service('JSONService', function() {\n\n    // Return the JSON for the string or null if it cannot be parsed.\n    this.tryParse = function(jsonString) {\n        try {\n            var obj = JSON.parse(jsonString);\n            // JSON.parse(false) or JSON.parse(1234) will throw errors, but\n            // JSON.parse(null) returns 'null', and typeof null === \"object\".\n            if (obj && typeof obj === \"object\" && obj !== null) {\n                return obj;\n            }\n        }\n        catch (e) { }\n        return null;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/json.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * Log Service\n *\n * Allows logging to be enabled or disabled, and allows a particular log level\n * to be set, which will allow logs of a specified importance (or more) to be\n * seen.\n *\n * Also appends a time index (in seconds, accurate to milliseconds) to the\n * beginning of the log string.\n */\n\nangular.module('MAAS').service('LogService', [\n    '$window', function($window) {\n        var self = this;\n\n        // Global enable/disable for MAAS logging. If set to `false`, this\n        // value takes precedence over the logLevel.\n        self.logging = true;\n\n        // Specifies the log level.\n        // Level 1: error() logging\n        // Level 2: error() and warn() logging\n        // Level 3: all of the above, plus info()\n        // Level 4: all of the above, plus log()\n        // Level 5: all of the above, plus debug()\n        self.logLevel = 5;\n\n        // Returns a monotonic time (in milliseconds) since page load.\n        self.now = function() {\n            return $window.performance ? $window.performance.now() : 0;\n        };\n\n        // Standard logging functions.\n        self._debug = console.debug;\n        self._log = console.log;\n        self._info = console.info;\n        self._warn = console.warn;\n        self._error = console.error;\n\n        // Formats the specified time (in milliseconds) in seconds.\n        this.formatMilliseconds = function(milliseconds) {\n            return parseFloat(milliseconds / 1000.0).toFixed(3);\n        };\n\n        // Internal function to log using the specified destination, with the\n        // specified list of arguments.\n        this.__log = function(destination, args) {\n            if(self.logging === true) {\n                // Add time index to the beginning of the log.\n                Array.prototype.unshift.call(args,\n                    \"[\" + self.formatMilliseconds(self.now()) + \"]\");\n                destination.apply(self, args);\n            }\n        };\n\n        // Wrapper to check the log level and then call self._debug().\n        this.debug = function() {\n            if(self.logLevel >= 5) {\n                self.__log(self._debug, arguments);\n            }\n        };\n\n        // Wrapper to check the log level and then call self._log().\n        this.log = function() {\n            if(self.logLevel >= 4) {\n                self.__log(self._log, arguments);\n            }\n        };\n\n        // Wrapper to check the log level and then call self._info().\n        this.info = function() {\n            if(self.logLevel >= 3) {\n                self.__log(self._info, arguments);\n            }\n        };\n\n        // Wrapper to check the log level and then call self._warn().\n        this.warn = function() {\n            if(self.logLevel >= 2) {\n                self.__log(self._warn, arguments);\n            }\n        };\n\n        // Wrapper to check the log level and then call self._err().\n        this.error = function() {\n            if(self.logLevel >= 1) {\n                self.__log(self._error, arguments);\n            }\n        };\n    }\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/log.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Base Manager\n *\n * Manages a collection of items from the websocket in the browser. The manager\n * uses the RegionConnection to load the items, update the items, and listen\n * for notification events about the items.\n */\n\nangular.module('MAAS').service(\n    'Manager',\n    ['$q', '$rootScope', '$timeout', 'RegionConnection', function(\n            $q, $rootScope, $timeout, RegionConnection) {\n\n        // Actions that are used to update the statuses metadata.\n        var METADATA_ACTIONS = {\n            CREATE: \"create\",\n            UPDATE: \"update\",\n            DELETE: \"delete\"\n        };\n\n        // Constructor\n        function Manager() {\n            // Primary key on the items in the list. Used to match items.\n            this._pk = \"id\";\n\n            // Key used when loading batches. Typically the same as _pk\n            // but not always.\n            this._batchKey = \"id\";\n\n            // The field from which to get a human-readable name.\n            this._name_field = \"name\";\n\n            // Handler on the region to call to list, create, update, delete,\n            // and listen for notifications. Must be set by overriding manager.\n            this._handler = null;\n\n            // Holds all items in the system. This list must always be the same\n            // object.\n            this._items = [];\n\n            // The way this manager recieves its updated information. 'notify'\n            // means this manager recieved notify messages from the websocket.\n            // See PollingManager for the other possible type. This is only\n            // used by the `ManagerHelperService` to identify how updating\n            // the data should be handled.\n            this._type = 'notify';\n\n            // Holds list of scopes that currently have this manager loaded.\n            this._scopes = [];\n\n            // True when all of the items have been loaded. This is done on\n            // intial connection to the region.\n            this._loaded = false;\n\n            // True when the items list is currently being loaded or reloaded.\n            // Actions will not be processed while this is false.\n            this._isLoading = false;\n\n            // Holds list of defers that need to be called once the loading of\n            // items has finished. This is used when a caller calls loadItems\n            // when its already loading.\n            this._extraLoadDefers = [];\n\n            // Holds list of defers that need to be called once the reloading\n            // of items has finished. This is used when a caller calls\n            // reloadItems when its already reloading.\n            this._extraReloadDefers = [];\n\n            // Holds all of the notify actions that need to be processed. This\n            // is used to hold the actions while the items are being loaded.\n            // Once all of the items are loaded the queue will be processed.\n            this._actionQueue = [];\n\n            // Holds list of all of the currently selected items. This is held\n            // in a seperate list to remove the need to loop through the full\n            // listing to grab the selected items.\n            this._selectedItems = [];\n\n            // Set to true when the items list should reload upon re-connection\n            // to the region.\n            this._autoReload = false;\n\n            // Holds the item that is currenly being viewed. This object will\n            // be updated if any notify events are recieved for it. This allows\n            // the ability of not having to keep pulling the item out of the\n            // items list.\n            this._activeItem = null;\n\n            // Holds metadata information that is used to helper filtering.\n            this._metadata = {};\n\n            // List of attributes to track on the loaded items. Each attribute\n            // in this list will be placed in _metadata to track its currect\n            // values and the number of items with that value.\n            this._metadataAttributes = [];\n        }\n\n        // Return index of the item in the given array.\n        Manager.prototype._getIndexOfItem = function(array, pk_value) {\n            var i;\n            for(i = 0, len = array.length; i < len; i++) {\n                if(array[i][this._pk] === pk_value) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n\n        // Replace the item in the array at the same index.\n        Manager.prototype._replaceItemInArray = function(array, item) {\n            var idx = this._getIndexOfItem(array, item[this._pk]);\n            if(idx >= 0) {\n                // Keep the current selection on the item.\n                item.$selected = array[idx].$selected;\n                angular.copy(item, array[idx]);\n            }\n        };\n\n        // Remove the item from the array.\n        Manager.prototype._removeItemByIdFromArray = function(\n            array, pk_value) {\n            var idx = this._getIndexOfItem(array, pk_value);\n            if(idx >= 0) {\n                array.splice(idx, 1);\n            }\n        };\n\n        // Return the parameters that should be used for the batch load\n        // request. Should be used by subclass that want to add extra\n        // parameters to the batch request. By default it returns an empty\n        // object.\n        Manager.prototype._initBatchLoadParameters = function() {\n            return {};\n        };\n\n        // Batch load items from the region in groups of 50.\n        Manager.prototype._batchLoadItems = function(array, extra_func) {\n            var self = this;\n            var defer = $q.defer();\n            var method = this._handler + \".list\";\n            function callLoad() {\n                var params = self._initBatchLoadParameters();\n                params.limit = 50;\n\n                // Get the last batchKey in the list so the region knows to\n                // start at that offset.\n                if(array.length > 0) {\n                    params.start = array[array.length-1][self._batchKey];\n                }\n                RegionConnection.callMethod(\n                    method, params).then(function(items) {\n                        // Pass each item to extra_func function if given.\n                        if(angular.isFunction(extra_func)) {\n                            angular.forEach(items, function(item) {\n                                extra_func(item);\n                            });\n                        }\n\n                        array.push.apply(array, items);\n                        if(items.length === 50) {\n                            // Could be more items, request the next 50.\n                            callLoad(array);\n                        } else {\n                            defer.resolve(array);\n                        }\n                    }, defer.reject);\n            }\n            callLoad();\n            return defer.promise;\n        };\n\n        // Resolves array of defers with item.\n        Manager.prototype._resolveDefers = function(defersArray, item) {\n            angular.forEach(defersArray, function(defer) {\n                defer.resolve(item);\n            });\n        };\n\n        // Rejects array of defers with error.\n        Manager.prototype._rejectDefers = function(defersArray, error) {\n            angular.forEach(defersArray, function(defer) {\n                defer.reject(error);\n            });\n        };\n\n        // Return list of items.\n        Manager.prototype.getItems = function() {\n            return this._items;\n        };\n\n        // Clears the currect state of the manager.\n        Manager.prototype.clear = function() {\n            this._loaded = false;\n            this._items.length = 0;\n            this._actionQueue.length = 0;\n            this._selectedItems.length = 0;\n            this._activeItem = null;\n            this._metadata = {};\n            this._metadataAttributes.length = 0;\n        };\n\n        // Load all the items.\n        Manager.prototype.loadItems = function() {\n            // If the items have already been loaded then, we need to\n            // reload the items list not load the initial list.\n            if(this._loaded) {\n                return this.reloadItems();\n            }\n\n            // If its already loading then the caller just needs to be informed\n            // of when it has finished loading.\n            if(this._isLoading) {\n                var defer = $q.defer();\n                this._extraLoadDefers.push(defer);\n                return defer.promise;\n            }\n\n            var self = this;\n            this._isLoading = true;\n            return this._batchLoadItems(this._items, function(item) {\n                item.$selected = false;\n                self._updateMetadata(item, METADATA_ACTIONS.CREATE);\n                self._processItem(item);\n            }).then(function() {\n                self._loaded = true;\n                self._isLoading = false;\n                self.processActions();\n                self._resolveDefers(self._extraLoadDefers, self._items);\n                self._extraLoadDefers = [];\n                return self._items;\n            }, function(error) {\n                self._rejectDefers(self._extraLoadDefers, error);\n                self._extraLoadDefers = [];\n                return $q.reject(error);\n            });\n        };\n\n        // Reload the items list.\n        Manager.prototype.reloadItems = function() {\n            // If the items have not been loaded then, we need to\n            // load the initial list.\n            if(!this._loaded) {\n                return this.loadItems();\n            }\n\n            // If its already reloading then the caller just needs to be\n            // informed of when it has refinished loading.\n            if(this._isLoading) {\n                var defer = $q.defer();\n                this._extraReloadDefers.push(defer);\n                return defer.promise;\n            }\n\n            // Updates the items list with the reloaded items.\n            var self = this;\n            function updateItems(items) {\n                // Iterate in reverse so we can remove items inline, without\n                // having to adjust the index.\n                var i = self._items.length;\n                while(i--) {\n                    var item = self._items[i];\n                    var updatedIdx = self._getIndexOfItem(\n                        items, item[self._pk]);\n                    if(updatedIdx === -1) {\n                        self._updateMetadata(item, METADATA_ACTIONS.DELETE);\n                        self._items.splice(i, 1);\n                        self._removeItemByIdFromArray(\n                            self._selectedItems, item[self._pk]);\n                    } else {\n                        var updatedItem = items[updatedIdx];\n                        self._updateMetadata(\n                            updatedItem, METADATA_ACTIONS.UPDATE);\n                        updatedItem.$selected = item.$selected;\n                        angular.copy(items[updatedIdx], item);\n                        items.splice(updatedIdx, 1);\n                    }\n                }\n\n                // The remain items in items array are the new items.\n                angular.forEach(items, function(item) {\n                    self._items.push(item);\n                    self._processItem(item);\n                });\n            }\n\n            // The reload action loads all of the items into this list\n            // instead of the items list. This list will then be used to\n            // update the items list.\n            var currentItems = [];\n\n            // Start the reload process and once complete call updateItems.\n            self._isLoading = true;\n            return this._batchLoadItems(currentItems).then(function(items) {\n                updateItems(items);\n                self._isLoading = false;\n                self.processActions();\n\n                // Set the activeItem again so the region knows that its\n                // the active item.\n                if(angular.isObject(self._activeItem)) {\n                    self.setActiveItem(self._activeItem[self._pk]);\n                }\n\n                self._resolveDefers(self._extraReloadDefers, self._items);\n                self._extraReloadDefers = [];\n                return self._items;\n            }, function(error) {\n                self._rejectDefers(self._extraReloadDefers, error);\n                self._extraReloadDefers = [];\n                return $q.reject(error);\n            });\n        };\n\n        // Enables auto reloading of the item list on connection to region.\n        Manager.prototype.enableAutoReload = function() {\n            if(!this._autoReload) {\n                this._autoReload = true;\n                var self = this;\n                this._reloadFunc = function() {\n                    self.reloadItems();\n                };\n                RegionConnection.registerHandler(\"open\", this._reloadFunc);\n            }\n        };\n\n        // Disable auto reloading of the item list on connection to region.\n        Manager.prototype.disableAutoReload = function() {\n            if(this._autoReload) {\n                RegionConnection.unregisterHandler(\"open\", this._reloadFunc);\n                this._reloadFunc = null;\n                this._autoReload = false;\n            }\n        };\n\n        // True when the initial item list has finished loading.\n        Manager.prototype.isLoaded = function() {\n            return this._loaded;\n        };\n\n        // True when the item list is currently being loaded or reloaded.\n        Manager.prototype.isLoading = function() {\n            return this._isLoading;\n        };\n\n        // Allow for extra processing of items as they are added or updated.\n        Manager.prototype._processItem = function(item) {\n        };\n\n        // Replace item in the items and selectedItems list.\n        Manager.prototype._replaceItem = function(item) {\n            this._updateMetadata(item, METADATA_ACTIONS.UPDATE);\n            this._replaceItemInArray(this._items, item);\n        };\n\n        // Remove item in the items and selectedItems list.\n        Manager.prototype._removeItem = function(pk_value) {\n            var idx = this._getIndexOfItem(this._items, pk_value);\n            if(idx >= 0) {\n                this._updateMetadata(this._items[idx], METADATA_ACTIONS.DELETE);\n            }\n            this._removeItemByIdFromArray(this._items, pk_value);\n            this._removeItemByIdFromArray(this._selectedItems, pk_value);\n        };\n\n        // Get the item from the list. Does not make a get request to the\n        // region to load more data.\n        Manager.prototype.getItemFromList = function(pk_value) {\n            var idx = this._getIndexOfItem(this._items, pk_value);\n            if(idx >= 0) {\n                return this._items[idx];\n            } else {\n                return null;\n            }\n        };\n\n        // Get the item from the region.\n        Manager.prototype.getItem = function(pk_value) {\n            var self = this;\n            var method = this._handler + \".get\";\n            var params = {};\n            params[this._pk] = pk_value;\n            return RegionConnection.callMethod(\n                method, params).then(function(item) {\n                    self._replaceItem(item);\n                    return item;\n                });\n        };\n\n        // Send the create information to the region.\n        Manager.prototype.createItem = function(item) {\n            var self = this;\n            var method = this._handler + \".create\";\n            item = angular.copy(item);\n            delete item.$selected;\n            return RegionConnection.callMethod(\n                method, item).then(function(item) {\n                    self._replaceItem(item);\n                    return item;\n                });\n        };\n\n        // Send the update information to the region.\n        Manager.prototype.updateItem = function(item) {\n            var self = this;\n            var method = this._handler + \".update\";\n            item = angular.copy(item);\n            delete item.$selected;\n            return RegionConnection.callMethod(\n                method, item).then(function(item) {\n                    self._replaceItem(item);\n                    return item;\n                });\n        };\n\n        // Send the delete call for item to the region.\n        Manager.prototype.deleteItem = function(item) {\n            var self = this;\n            var method = this._handler + \".delete\";\n            var params = {};\n            params[this._pk] = item[this._pk];\n            return RegionConnection.callMethod(\n                method, params).then(function() {\n                    self._removeItem(item[self._pk]);\n                });\n        };\n\n        // Return the active item.\n        Manager.prototype.getActiveItem = function() {\n            return this._activeItem;\n        };\n\n        // Set the active item.\n        Manager.prototype.setActiveItem = function(pk_value) {\n            if(!this._loaded) {\n                throw new Error(\n                    \"Cannot set active item unless the manager is loaded.\");\n            }\n            var idx = this._getIndexOfItem(this._items, pk_value);\n            if(idx === -1) {\n                this._activeItem = null;\n                // Item with pk_value does not exists. Reject the returned\n                // deferred.\n                var defer = $q.defer();\n                $timeout(function() {\n                    defer.reject(\"No item with pk: \" + pk_value);\n                });\n                return defer.promise;\n            } else {\n                this._activeItem = this._items[idx];\n                // Data that is loaded from the list call is limited and\n                // doesn't contain all of the needed data for an activeItem.\n                // Call set_active on the handler for the region to know\n                // this item needs all information when updated.\n                var self = this;\n                var method = this._handler + \".set_active\";\n                var params = {};\n                params[this._pk] = pk_value;\n                return RegionConnection.callMethod(\n                    method, params).then(function(item) {\n                        self._replaceItem(item);\n                        return self._activeItem;\n                    });\n            }\n        };\n\n        // Clears the active item.\n        Manager.prototype.clearActiveItem = function() {\n            this._activeItem = null;\n        };\n\n        // True when the item list is stable and not being loaded or reloaded.\n        Manager.prototype.canProcessActions = function() {\n            return !this._isLoading;\n        };\n\n        // Handle notify from RegionConnection about an item.\n        Manager.prototype.onNotify = function(action, data) {\n            // Place the notification in the action queue.\n            this._actionQueue.push({\n                action: action,\n                data: data\n            });\n            // Processing incoming actions is enabled. Otherwise they\n            // will be queued until processActions is called.\n            if(this.canProcessActions()) {\n               $rootScope.$apply(this.processActions());\n            }\n        };\n\n        // Process all actions to keep the item information up-to-date.\n        Manager.prototype.processActions = function() {\n            while(this._actionQueue.length > 0) {\n                var action = this._actionQueue.shift();\n                if(action.action === \"create\") {\n                    // Check that the received data doesn't already exists\n                    // in the _items list. If it does then this is actually\n                    // an update action not a create action.\n                    var idx = this._getIndexOfItem(\n                        this._items, action.data[this._pk]);\n                    if(idx >= 0) {\n                        // Actually this is an update action not a create\n                        // action. So replace the item instead of adding it.\n                        this._replaceItem(action.data);\n                    } else {\n                        action.data.$selected = false;\n                        this._updateMetadata(\n                            action.data, METADATA_ACTIONS.CREATE);\n                        this._items.push(action.data);\n                    }\n                    this._processItem(action.data);\n                } else if(action.action === \"update\") {\n                    this._replaceItem(action.data);\n                    this._processItem(action.data);\n                } else if(action.action === \"delete\") {\n                    this._removeItem(action.data);\n                }\n            }\n        };\n\n        // Return list of selected items.\n        Manager.prototype.getSelectedItems = function() {\n            return this._selectedItems;\n        };\n\n        // Mark the given item as selected.\n        Manager.prototype.selectItem = function(pk_value) {\n            var idx = this._getIndexOfItem(this._items, pk_value);\n            if(idx === -1) {\n                console.log(\n                    \"WARN: selection of \" + this._handler + \"(\" + pk_value +\n                    \") failed because its missing in the items list.\");\n                return;\n            }\n\n            var item = this._items[idx];\n            item.$selected = true;\n\n            idx = this._selectedItems.indexOf(item);\n            if(idx === -1) {\n                this._selectedItems.push(item);\n            }\n        };\n\n        // Mark the given item as unselected.\n        Manager.prototype.unselectItem = function(pk_value) {\n            var idx = this._getIndexOfItem(this._items, pk_value);\n            if(idx === -1) {\n                console.log(\n                    \"WARN: de-selection of \" + this._handler + \"(\" +\n                    pk_value + \") failed because its missing in the \" +\n                    \"nodes list.\");\n                return;\n            }\n\n            var item = this._items[idx];\n            item.$selected = false;\n\n            idx = this._selectedItems.indexOf(item);\n            if(idx >= 0) {\n                this._selectedItems.splice(idx, 1);\n            }\n        };\n\n        // Determine if a item is selected.\n        Manager.prototype.isSelected = function(pk_value) {\n            var idx = this._getIndexOfItem(this._items, pk_value);\n            if(idx === -1) {\n                console.log(\n                    \"WARN: unable to determine if \" + this._handler + \"(\" +\n                    pk_value + \") is selected because its missing in the \" +\n                    \"nodes list.\");\n                return false;\n            }\n\n            return this._items[idx].$selected === true;\n        };\n\n        // Return the metadata object value from `metadatas` matching `name`.\n        Manager.prototype._getMetadataValue = function(metadatas, name) {\n            var i;\n            for(i = 0; i < metadatas.length; i++) {\n                if(metadatas[i].name === name) {\n                    return metadatas[i];\n                }\n            }\n            return null;\n        };\n\n        // Add new value to metadatas if it doesnt exists or increment the\n        // count if it already does.\n        Manager.prototype._addMetadataValue = function(metadatas, value) {\n            var metadata = this._getMetadataValue(metadatas, value);\n            if(metadata) {\n                metadata.count += 1;\n            } else {\n                metadata = {\n                    name: value,\n                    count: 1\n                };\n                metadatas.push(metadata);\n            }\n        };\n\n        // Remove value from metadatas.\n        Manager.prototype._removeMetadataValue = function(metadatas, value) {\n            var metadata = this._getMetadataValue(metadatas, value);\n            if(metadata) {\n                metadata.count -= 1;\n                if(metadata.count <= 0) {\n                    metadatas.splice(metadatas.indexOf(metadata), 1);\n                }\n            }\n        };\n\n        // Update the metadata entry in `metadatas` for the array value and\n        // based on the action.\n        Manager.prototype._updateMetadataArrayEntry = function(\n                metadatas, newValue, action, oldValue) {\n            var self = this;\n\n            if(action === METADATA_ACTIONS.CREATE) {\n                angular.forEach(newValue, function(value) {\n                    // On create ignore empty values.\n                    if(value === '') {\n                        return;\n                    }\n                    self._addMetadataValue(metadatas, value);\n                });\n            } else if(action === METADATA_ACTIONS.DELETE) {\n                angular.forEach(newValue, function(value) {\n                    self._removeMetadataValue(metadatas, value);\n                });\n            } else if(action === METADATA_ACTIONS.UPDATE &&\n                angular.isDefined(oldValue)) {\n                // Any values in added are new on the item, and any values left\n                // in oldArray have been removed.\n                var added = [];\n                var oldArray = angular.copy(oldValue);\n                angular.forEach(newValue, function(value) {\n                    var idx = oldArray.indexOf(value);\n                    if(idx === -1) {\n                        // Value not in oldArray so it has been added.\n                        added.push(value);\n                    } else {\n                        // Value already in oldArray so its already tracked.\n                        oldArray.splice(idx, 1);\n                    }\n                });\n\n                // Add the new values.\n                angular.forEach(added, function(value) {\n                    self._addMetadataValue(metadatas, value);\n                });\n\n                // Remove the old values.\n                angular.forEach(oldArray, function(value) {\n                    self._removeMetadataValue(metadatas, value);\n                });\n            }\n        };\n\n        // Update the metadata entry in `metadatas` for the newValue and based\n        // on the action. Method does not work with array values, use\n        // _updateMetadataArrayEntry for values that are arrays.\n        Manager.prototype._updateMetadataValueEntry = function(\n                metadatas, newValue, action, oldValue) {\n            if(action === METADATA_ACTIONS.CREATE) {\n                // On create ignore empty values.\n                if(newValue === '') {\n                    return;\n                }\n                this._addMetadataValue(metadatas, newValue);\n            } else if(action === METADATA_ACTIONS.DELETE) {\n                this._removeMetadataValue(metadatas, newValue);\n            } else if(action === METADATA_ACTIONS.UPDATE &&\n                angular.isDefined(oldValue)) {\n                if(oldValue !== newValue) {\n                    if(oldValue !== \"\") {\n                        // Decrement the old value\n                        this._removeMetadataValue(metadatas, oldValue);\n                    }\n\n                    // Increment the new value with the \"create\"\n                    // operation.\n                    this._updateMetadataEntry(\n                        metadatas, newValue, METADATA_ACTIONS.CREATE, oldValue);\n                }\n            }\n        };\n\n        // Update the metadata entry in `metadatas` with the newValue and based\n        // on the action. Update action will use the oldValue to remove it from\n        // the metadata.\n        Manager.prototype._updateMetadataEntry = function(\n                metadatas, newValue, action, oldValue) {\n            if(angular.isArray(newValue)) {\n                this._updateMetadataArrayEntry(\n                    metadatas, newValue, action, oldValue);\n            } else {\n                this._updateMetadataValueEntry(\n                    metadatas, newValue, action, oldValue);\n            }\n        };\n\n        // Return the metadata object.\n        Manager.prototype.getMetadata = function() {\n            return this._metadata;\n        };\n\n        // Update the metadata objects based on the given item and action.\n        Manager.prototype._updateMetadata = function(item, action) {\n            var self = this;\n            var oldItem, idx;\n            if(action === METADATA_ACTIONS.UPDATE) {\n                // Update actions require the oldItem if it exist in the\n                // current item listing.\n                idx = this._getIndexOfItem(this._items, item[this._pk]);\n                if(idx >= 0) {\n                    oldItem = this._items[idx];\n                }\n            }\n            angular.forEach(this._metadataAttributes, function(func, attr) {\n                if(angular.isUndefined(self._metadata[attr])) {\n                    self._metadata[attr] = [];\n                }\n                var newValue, oldValue;\n                if(angular.isFunction(func)) {\n                    newValue = func(item);\n                    if(angular.isObject(oldItem)) {\n                        oldValue = func(oldItem);\n                    }\n                } else {\n                    newValue = item[attr];\n                    if(angular.isObject(oldItem)) {\n                        oldValue = oldItem[attr];\n                    }\n                }\n                self._updateMetadataEntry(\n                    self._metadata[attr], newValue, action, oldValue);\n            });\n        };\n\n        // Default implementation of getName(): returns the default name for\n        // this object, if it exists.\n        Manager.prototype.getName = function(obj) {\n            if(!angular.isObject(obj)) {\n                return;\n            }\n            if(angular.isString(obj[this._name_field])) {\n                return obj[this._name_field];\n            }\n        };\n\n        return Manager;\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/manager.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Manager Helper Service\n *\n * Used by controllers to load managers. It helps the initialization of\n * managers and makes sure that all items in the manager are loaded\n * before resolving the defer.\n */\n\nangular.module('MAAS').service('ManagerHelperService', [\n    '$q', '$timeout', 'ErrorService', 'RegionConnection',\n    function($q, $timeout, ErrorService, RegionConnection) {\n\n        // Loads the manager.\n        this.loadManager = function(scope, manager) {\n            var defer = $q.defer();\n\n            // If the manager already has this scope loaded then nothing needs\n            // to be done.\n            if(manager._scopes.indexOf(scope) > -1) {\n                $timeout(function() {\n                    defer.resolve(manager);\n                });\n                return defer.promise;\n            }\n\n            // Do this entire operation with in the context of the region\n            // connection is connected.\n            RegionConnection.defaultConnect().then(function() {\n                if(manager._type === 'notify') {\n                    if(manager.isLoaded()) {\n                        $timeout(function() {\n                            manager._scopes.push(scope);\n                            defer.resolve(manager);\n                        });\n                    } else {\n                        manager.loadItems().then(function() {\n                            manager._scopes.push(scope);\n                            defer.resolve(manager);\n                        }, function(error) {\n                            ErrorService.raiseError(error);\n                        });\n                    }\n                    // Always enable auto reload. This will make sure the items\n                    // are reloaded if the connection goes down.\n                    manager.enableAutoReload();\n\n                    // Remove the scope for the loaded scopes for the manager.\n                    scope.$on(\"$destroy\", function() {\n                        var idx = manager._scopes.indexOf(scope);\n                        if(idx > -1) {\n                            manager._scopes.splice(idx, 1);\n                        }\n                    });\n                } else if(manager._type === 'poll') {\n                    if(manager.isPolling()) {\n                        $timeout(function() {\n                            manager._scopes.push(scope);\n                            defer.resolve(manager);\n                        });\n                    } else {\n                        manager.startPolling().then(function() {\n                            manager._scopes.push(scope);\n                            defer.resolve(manager);\n                        }, function(error) {\n                            ErrorService.raiseError(error);\n                        });\n                    }\n\n                    // Stop the polling when the scope is destroyed and its\n                    // not in use by any other scopes.\n                    scope.$on(\"$destroy\", function() {\n                        var idx = manager._scopes.indexOf(scope);\n                        if(idx > -1) {\n                            manager._scopes.splice(idx, 1);\n                        }\n                        if(manager._scopes.length === 0) {\n                            manager.stopPolling();\n                        }\n                    });\n                } else {\n                    throw new Error(\"Unknown manager type: \" + manager._type);\n                }\n            });\n            return defer.promise;\n        };\n\n        // Gets the list of managers.\n        this.loadManagers = function(scope, managers) {\n            var defer = $q.defer();\n            var loadedManagers = [];\n\n            // Resolves the defer if all managers are loaded.\n            var resolveAllLoaded = function() {\n                if(loadedManagers.length === managers.length) {\n                    defer.resolve(managers);\n                }\n            };\n\n            var self = this;\n            angular.forEach(managers, function(manager) {\n                self.loadManager(scope, manager).then(function(loadedManager) {\n                    loadedManagers.push(loadedManager);\n                    resolveAllLoaded();\n                });\n            });\n            return defer.promise;\n        };\n\n        // Tries to parse the specified string as JSON. If parsing fails,\n        // returns the original string. (This is useful since some manager\n        // calls return an error that could be either plain text, or JSON.)\n        this.tryParsingJSON = function(string) {\n            var error;\n            try {\n                error = JSON.parse(string);\n            } catch(e) {\n                if (e instanceof SyntaxError) {\n                    return string;\n                } else {\n                    throw e;\n                }\n            }\n            return error;\n        };\n\n        // Returns a printable version of the specified dictionary (useful\n        // for displaying an error to the user).\n        this.getPrintableString = function(dict, showNames) {\n            var result = '';\n            angular.forEach(dict, function(value, key) {\n                var error = dict[key];\n                if(showNames === true) {\n                    result += key + \": \";\n                }\n                if(angular.isString(error) || angular.isNumber(error)) {\n                    result += error + \"  \";\n                } else if(angular.isObject(error)) {\n                    angular.forEach(error, function(error) {\n                        result += error + \"  \";\n                    });\n                }\n                result = result.trim() + \"\\n\";\n            });\n            return result.trim();\n        };\n\n        // Convert the Python dict error message to displayed message.\n        // We know it's probably a form ValidationError dictionary, so just use\n        // it as such, and recover if that doesn't parse as JSON.\n        this.parseValidationError = function(error, showNames) {\n            error = this.tryParsingJSON(error);\n            if(!angular.isObject(error)) {\n                return error;\n            } else {\n                return this.getPrintableString(error, showNames);\n            }\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/managerhelper.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Space Manager\n *\n * Manages all of the spaces in the browser. The manager uses the\n * RegionConnection to load the spaces, update the spaces, and listen for\n * notification events about spaces.\n */\n\nangular.module('MAAS').factory(\n    'PollingManager',\n    ['$q', '$timeout', 'RegionConnection', 'Manager',\n    function($q, $timeout, RegionConnection, Manager) {\n\n        function PollingManager() {\n            Manager.call(this);\n\n            // The way this manager recieves its updated information. 'poll'\n            // means this manager periodicly polls for new data from the\n            // websocket.\n            this._type = 'poll';\n\n            // Set to true when polling has been enabled.\n            this._polling = false;\n\n            // The next promise for the polling interval.\n            this._nextPromise = null;\n\n            // Amount of time in milliseconds the manager should wait to poll\n            // for new data.\n            this._pollTimeout = 10000;\n\n            // Amount of time in milliseconds the manager should wait to poll\n            // for new data when an error occurs.\n            this._pollErrorTimeout = 3000;\n\n            // Amount of time in milliseconds the manager should wait to poll\n            // for new data when the retrieved data is empty.\n            this._pollEmptyTimeout = 3000;\n        }\n\n        PollingManager.prototype = new Manager();\n\n        // Returns true when currently polling.\n        PollingManager.prototype.isPolling = function() {\n            return this._polling;\n        };\n\n        // Starts the polling.\n        PollingManager.prototype.startPolling = function() {\n            if(!this._polling) {\n                this._polling = true;\n                return this._poll();\n            } else {\n                return this._nextPromise;\n            }\n        };\n\n        // Stops the polling.\n        PollingManager.prototype.stopPolling = function() {\n            this._polling = false;\n            if(angular.isObject(this._nextPromise)) {\n                $timeout.cancel(this._nextPromise);\n                this._nextPromise = null;\n            }\n        };\n\n        // Registers the next polling attempt.\n        PollingManager.prototype._pollAgain = function(timeout) {\n            var self = this;\n            this._nextPromise = $timeout(function() {\n                self._poll();\n            }, timeout);\n            return this._nextPromise;\n        };\n\n        // Polls for the data from the region.\n        PollingManager.prototype._poll = function() {\n            var self = this;\n            return this.reloadItems().then(function(items) {\n                var pollTimeout = self._pollTimeout;\n                if(items.length === 0) {\n                    pollTimeout = self._pollEmptyTimeout;\n                }\n                self._pollAgain(pollTimeout);\n                return items;\n            }, function(error) {\n                self._pollAgain(self._pollErrorTimeout);\n                return $q.reject(error);\n            });\n        };\n\n        return PollingManager;\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/pollingmanager.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Nodes Search Services\n */\n\nangular.module('MAAS').service('SearchService', function() {\n\n    // Holds an empty filter object.\n    var emptyFilter = { _: [] };\n\n    // Return a new empty filter;\n    this.getEmptyFilter = function() {\n        return angular.copy(emptyFilter);\n    };\n\n    // Splits the search string into different terms based on white space.\n    // This handles the ability for whitespace to be inside of '(', ')'.\n    //\n    // XXX blake_r 28-01-15: This could be improved with a regex, but was\n    // unable to come up with one that would allow me to validate the end\n    // ')' in the string.\n    this.getSplitSearch = function(search) {\n        var terms = search.split(' ');\n        var fixedTerms = [];\n        var spanningParentheses = false;\n        angular.forEach(terms, function(term, idx) {\n            if(spanningParentheses) {\n                // Previous term had an opening '(' but not a ')'. This\n                // term should join that previous term.\n                fixedTerms[fixedTerms.length - 1] += ' ' + term;\n\n                // If the term contains the ending ')' then its the last\n                // in the group.\n                if(term.indexOf(')') !== -1) {\n                    spanningParentheses = false;\n                }\n            } else {\n                // Term is not part of a previous '(' span.\n                fixedTerms.push(term);\n\n                var startIdx = term.indexOf('(');\n                if(startIdx !== -1) {\n                    if(term.indexOf(')', startIdx) === -1) {\n                        // Contains a starting '(' but not a ending ')'.\n                        spanningParentheses = true;\n                    }\n                }\n            }\n        });\n\n        if(spanningParentheses) {\n            // Missing ending parentheses so error with terms.\n            return null;\n        }\n        return fixedTerms;\n    };\n\n    // Return all of the currently active filters for the given search.\n    this.getCurrentFilters = function(search) {\n        var filters = this.getEmptyFilter();\n        if(search.length === 0) {\n            return filters;\n        }\n        var searchTerms = this.getSplitSearch(search);\n        if(!searchTerms) {\n            return null;\n        }\n        angular.forEach(searchTerms, function(terms) {\n            terms = terms.split(':');\n            if(terms.length === 1) {\n                // Search term is not specifing a specific field. Gets\n                // add to the '_' section of the filters.\n                if(filters._.indexOf(terms[0]) === -1) {\n                    filters._.push(terms[0]);\n                }\n            } else {\n                var field = terms.shift();\n                var values = terms.join(\":\");\n\n                // Remove the starting '(' and ending ')'.\n                values = values.replace('(', '');\n                values = values.replace(')', '');\n\n                // If empty values then do nothing.\n                if(values.length === 0) {\n                    return;\n                }\n\n                // Split the values based on comma.\n                values = values.split(',');\n\n                // Add the values to filters.\n                if(angular.isUndefined(filters[field])) {\n                    filters[field] = [];\n                }\n                angular.forEach(values, function(value) {\n                    if(filters[field].indexOf(value) === -1) {\n                        filters[field].push(value);\n                    }\n                });\n            }\n        });\n        return filters;\n    };\n\n    // Convert \"filters\" into a search string.\n    this.filtersToString = function(filters) {\n        var search = \"\";\n        angular.forEach(filters, function(terms, type) {\n            // Skip empty and skip \"_\" as it gets appended at the\n            // beginning of the search.\n            if(terms.length === 0 || type === \"_\") {\n                return;\n            }\n            search += type + \":(\" + terms.join(\",\") + \") \";\n        });\n        if(filters._.length > 0) {\n            search = filters._.join(\" \") + \" \" + search;\n        }\n        return search.trim();\n    };\n\n    // Return the index of the value in the type for the filter.\n    this._getFilterValueIndex = function(filters, type, value) {\n        var values = filters[type];\n        if(angular.isUndefined(values)) {\n            return -1;\n        }\n        var lowerValues = values.map(function(value) {\n            return value.toLowerCase();\n        });\n        return lowerValues.indexOf(value.toLowerCase());\n    };\n\n    // Return true if the type and value are in the filters.\n    this.isFilterActive = function(filters, type, value, exact) {\n        var values = filters[type];\n        if(angular.isUndefined(values)) {\n            return false;\n        }\n        if(angular.isUndefined(exact)) {\n            exact = false;\n        }\n        if(exact) {\n            value = \"=\" + value;\n        }\n        return this._getFilterValueIndex(filters, type, value) !== -1;\n    };\n\n    // Toggles a filter on or off based on type and value.\n    this.toggleFilter = function(filters, type, value, exact) {\n        if(angular.isUndefined(filters[type])) {\n            filters[type] = [];\n        }\n        if(exact) {\n            value = \"=\" + value;\n        }\n        var idx = this._getFilterValueIndex(filters, type, value);\n        if(idx === -1) {\n            filters[type].push(value);\n        } else {\n            filters[type].splice(idx, 1);\n        }\n        return filters;\n    };\n\n    // Holds all stored filters.\n    var storedFilters = {};\n\n    // Store a filter for later.\n    this.storeFilters = function(name, filters) {\n        storedFilters[name] = filters;\n    };\n\n    // Retrieve a stored fitler.\n    this.retrieveFilters = function(name) {\n        return storedFilters[name];\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/search.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Validation Service\n *\n * Used by controllers to validate user inputs.\n */\n\nangular.module('MAAS').service('ValidationService', [\n    'ConverterService', function(ConverterService) {\n\n        // Pattern that matches a domainname.\n        // XXX 2016-02-24 lamont: This also matches \"example.com.\",\n        // which is wrong.\n        var domainnamePattern =\n            /^([a-z\\d]|[a-z\\d][a-z\\d-.]*[a-z\\d])*$/i;\n\n        // Pattern that matches a hostname.\n        var hostnamePattern =\n            /^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])*$/;\n\n        // Pattern that matches a MAC.\n        var macPattern = /^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$/;\n\n        // Pattern used to match IPv4.\n        var ipv4Pattern = new RegExp([\n            '^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.',\n            '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.',\n            '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.',\n            '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'\n            ].join(''));\n\n        // Returns true if the octets in one equal two with the cidr mask in\n        // bits applied to both.\n        function cidrMatcher(one, two, size, bits) {\n            var part = 0;\n            while(bits > 0) {\n                var shift = size - bits;\n                if(shift < 0) {\n                    shift = 0;\n                }\n\n                var oneShift = one[part] >> shift;\n                var twoShift = two[part] >> shift;\n                if(oneShift !== twoShift) {\n                    return false;\n                }\n                bits -= size;\n                part += 1;\n            }\n            return true;\n        }\n\n        // Return true if the domainname is valid, false otherwise.\n        this.validateDomainName = function(domainname) {\n            // Invalid if the domain is not a string, empty, or more than\n            // 253 characters.\n            if(!angular.isString(domainname) ||\n                domainname.length === 0 || domainname.length > 253) {\n                return false;\n            }\n            return domainnamePattern.test(domainname);\n        };\n\n        // Return true if the hostname is valid, false otherwise.\n        this.validateHostname = function(hostname) {\n            // Invalid if the hostname is not a string, empty, or more than\n            // 63 characters.\n            if(!angular.isString(hostname) ||\n                hostname.length === 0 || hostname.length > 63) {\n                return false;\n            }\n            return hostnamePattern.test(hostname);\n        };\n\n        // Return true if the MAC is valid, false otherwise.\n        this.validateMAC = function(macAddress) {\n            // Invalid if the macAddress is not a string.\n            if(!angular.isString(macAddress)) {\n                return false;\n            }\n            return macPattern.test(macAddress.trim());\n        };\n\n        // Return true if the IP is valid IPv4 address, false otherwise.\n        this.validateIPv4 = function(ipAddress) {\n            // Invalid if the ipAddress is not a string or empty.\n            if(!angular.isString(ipAddress) || ipAddress.length === 0) {\n                return false;\n            }\n            return ipv4Pattern.test(ipAddress);\n        };\n\n        // Return true if the IP is valid IPv6 address, false otherwise.\n        this.validateIPv6 = function(ipAddress) {\n            // Invalid if the ipAddress is not a string, empty, or missing\n            // at least one ':'.\n            if(!angular.isString(ipAddress) ||\n                ipAddress.length === 0 ||\n                ipAddress.indexOf(':') === -1) {\n                return false;\n            }\n            var expandedAddress = ConverterService.ipv6Expand(ipAddress);\n            var octets = ConverterService.ipv6ToGroups(expandedAddress);\n            if(octets.length !== 8) {\n                return false;\n            }\n\n            // Make sure all octets are in range.\n            var i;\n            for(i = 0; i < 8; i++) {\n                if(isNaN(octets[i]) || octets[i] < 0 || octets[i] > 0xffff) {\n                    // Out of range.\n                    return false;\n                }\n            }\n\n            // Don't allow unspecified, loopback, multicast, link-local\n            // unicast, or anything out of range.\n            if(octets[0] < 1 ||\n                octets[0] === 0xff00 ||\n                octets[0] === 0xfe80) {\n                return false;\n            }\n            return true;\n        };\n\n        // Return true if the IP is valid, false otherwise.\n        this.validateIP = function(ipAddress) {\n            return (\n                this.validateIPv4(ipAddress) || this.validateIPv6(ipAddress));\n        };\n\n        // Return true if the ipAddress is in the network.\n        this.validateIPInNetwork = function(ipAddress, network) {\n            var networkSplit = network.split('/');\n            var networkAddress = networkSplit[0];\n            var cidrBits = parseInt(networkSplit[1], 10);\n\n            if(this.validateIPv4(ipAddress) &&\n                this.validateIPv4(networkAddress)) {\n                return cidrMatcher(\n                    ConverterService.ipv4ToOctets(ipAddress),\n                    ConverterService.ipv4ToOctets(networkAddress),\n                    8, cidrBits);\n            } else if(this.validateIPv6(ipAddress) &&\n                this.validateIPv6(networkAddress)) {\n                return cidrMatcher(\n                    ConverterService.ipv6ToGroups(ipAddress),\n                    ConverterService.ipv6ToGroups(networkAddress),\n                    16, cidrBits);\n            }\n            return false;\n        };\n\n        // Return true if the ipAddress is in the network and between the\n        // lowAddress and highAddress inclusive.\n        this.validateIPInRange = function(\n            ipAddress, network, lowAddress, highAddress) {\n            // If the ip address is not even in the network then its\n            // not in the range.\n            if(!this.validateIPInNetwork(ipAddress, network)) {\n                return false;\n            }\n\n            var i, ipOctets, lowOctets, highOctets;\n            if(this.validateIPv4(ipAddress) &&\n                this.validateIPv4(lowAddress) &&\n                this.validateIPv4(highAddress)) {\n\n                // Check that each octet is of the ip address is more or equal\n                // to the low address and less or equal to the high address.\n                ipOctets = ConverterService.ipv4ToOctets(ipAddress);\n                lowOctets = ConverterService.ipv4ToOctets(lowAddress);\n                highOctets = ConverterService.ipv4ToOctets(highAddress);\n                for(i = 0; i < 4; i++) {\n                    if(ipOctets[i] > highOctets[i] ||\n                        ipOctets[i] < lowOctets[i]) {\n                        return false;\n                    }\n                }\n                return true;\n            } else if(this.validateIPv6(ipAddress) &&\n                this.validateIPv6(lowAddress) &&\n                this.validateIPv6(highAddress)) {\n\n                // Check that each octet is of the ip address is more or equal\n                // to the low address and less or equal to the high address.\n                ipOctets = ConverterService.ipv6ToGroups(ipAddress);\n                lowOctets = ConverterService.ipv6ToGroups(lowAddress);\n                highOctets = ConverterService.ipv6ToGroups(highAddress);\n                for(i = 0; i < 8; i++) {\n                    if(ipOctets[i] > highOctets[i] ||\n                        ipOctets[i] < lowOctets[i]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return false;\n        };\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/services/validation.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS BootResource Manager\n *\n * Manager for the boot resources. This manager is unique from all the other\n * managers because it uses polling instead of having the region push the\n * information.\n *\n * Why is it polling?\n * The boot resource information is split between the region controller and\n * all rack controllers. The region controller does not cache any information\n * about a rack controllers images it contacts the rack as its source of truth.\n * This means that the client needs to use polling so the region controller\n * can ask each rack controller what is the status of your images.\n */\n\nangular.module('MAAS').factory(\n    'BootResourcesManager',\n    ['$q', '$timeout', 'RegionConnection', 'ErrorService',\n    function($q, $timeout, RegionConnection, ErrorService) {\n\n        // Constructor\n        function BootResourcesManager() {\n            // Set true once been loaded the first time.\n            this._loaded = false;\n\n            // Holds the data recieved from polling.\n            this._data = {};\n\n            // Set to true when polling has been enabled.\n            this._polling = false;\n\n            // The next promise for the polling interval.\n            this._nextPromise = null;\n\n            // Amount of time in milliseconds the manager should wait to poll\n            // for new data.\n            this._pollTimeout = 10000;\n\n            // Amount of time in milliseconds the manager should wait to poll\n            // for new data when an error occurs.\n            this._pollErrorTimeout = 500;\n\n            // Amount of time in milliseconds the manager should wait to poll\n            // for new data when the retrieved data is empty.\n            this._pollEmptyTimeout = 3000;\n        }\n\n        // Return the data.\n        BootResourcesManager.prototype.getData = function() {\n            return this._data;\n        };\n\n        // Return true when data has been loaded.\n        BootResourcesManager.prototype.isLoaded = function() {\n            return this._loaded;\n        };\n\n        // Returns true when currently polling.\n        BootResourcesManager.prototype.isPolling = function() {\n            return this._polling;\n        };\n\n        // Starts the polling for data.\n        BootResourcesManager.prototype.startPolling = function() {\n            if(!this._polling) {\n                this._polling = true;\n                return this._poll();\n            } else {\n                return this._nextPromise;\n            }\n        };\n\n        // Stops the polling for data.\n        BootResourcesManager.prototype.stopPolling = function() {\n            this._polling = false;\n            if(angular.isObject(this._nextPromise)) {\n                $timeout.cancel(this._nextPromise);\n                this._nextPromise = null;\n            }\n        };\n\n        // Load the data from the region.\n        BootResourcesManager.prototype._loadData = function(raiseError) {\n            raiseError = raiseError || false;\n            var self = this;\n            return RegionConnection.callMethod(\"bootresource.poll\").then(\n                function(newData) {\n                    angular.copy(angular.fromJson(newData), self._data);\n                    self._loaded = true;\n                    return self._data;\n                }, function(error) {\n                    if(raiseError) {\n                        ErrorService.raiseError(error);\n                    }\n                });\n        };\n\n        // Registers the next polling attempt.\n        BootResourcesManager.prototype._pollAgain = function(timeout) {\n            var self = this;\n            this._nextPromise = $timeout(function() {\n                self._poll();\n            }, timeout);\n            return this._nextPromise;\n        };\n\n        // Polls for the data from the region.\n        BootResourcesManager.prototype._poll = function() {\n            var self = this;\n\n            // Can only poll if connected.\n            if(!RegionConnection.isConnected()) {\n                return this._pollAgain(this._pollErrorTimeout);\n            }\n\n            return this._loadData(false).then(function(newData) {\n                var pollTimeout = self._pollTimeout;\n                if(!angular.isObject(newData) ||\n                    newData.connection_error ||\n                    !angular.isArray(newData.resources) ||\n                    newData.resources.length === 0) {\n                    pollTimeout = self._pollEmptyTimeout;\n                }\n                self._pollAgain(pollTimeout);\n                return newData;\n            }, function(error) {\n                // Don't raise the error, just log it and try again.\n                console.log(error);\n                self._pollAgain(self._pollErrorTimeout);\n            });\n        };\n\n        // Loads the resources. This implemented so the ManagerHelperService\n        // can work on this manager just like all the rest.\n        BootResourcesManager.prototype.loadItems = function() {\n            var defer = $q.defer();\n            this._loadData(true).then(function() {\n                defer.resolve();\n            });\n            return defer.promise;\n        };\n\n        // Does nothing. This implemented so the ManagerHelperService\n        // can work on this manager just like all the rest.\n        BootResourcesManager.prototype.enableAutoReload = function() { };\n\n        // Stop the running image import process.\n        BootResourcesManager.prototype.stopImport = function(params) {\n            var self = this;\n            return RegionConnection.callMethod(\n                \"bootresource.stop_import\", params).then(\n                    function(newData) {\n                        angular.copy(angular.fromJson(newData), self._data);\n                        self._loaded = true;\n                        return self._data;\n                    });\n        };\n\n        // Save the ubuntu options and start the import process.\n        BootResourcesManager.prototype.saveUbuntu = function(params) {\n            var self = this;\n            return RegionConnection.callMethod(\n                \"bootresource.save_ubuntu\", params).then(\n                    function(newData) {\n                        angular.copy(angular.fromJson(newData), self._data);\n                        self._loaded = true;\n                        return self._data;\n                    });\n        };\n\n        // Save the Ubuntu Core images and start the import process.\n        BootResourcesManager.prototype.saveUbuntuCore = function(params) {\n            var self = this;\n            return RegionConnection.callMethod(\n                \"bootresource.save_ubuntu_core\", params).then(\n                    function(newData) {\n                        angular.copy(angular.fromJson(newData), self._data);\n                        self._loaded = true;\n                        return self._data;\n                    });\n        };\n\n        // Save the other images and start the import process.\n        BootResourcesManager.prototype.saveOther = function(params) {\n            var self = this;\n            return RegionConnection.callMethod(\n                \"bootresource.save_other\", params).then(\n                    function(newData) {\n                        angular.copy(angular.fromJson(newData), self._data);\n                        self._loaded = true;\n                        return self._data;\n                    });\n        };\n\n        // Fetch the releases and arches from the provided source.\n        BootResourcesManager.prototype.fetch = function(source) {\n            return RegionConnection.callMethod(\"bootresource.fetch\", source);\n        };\n\n        // Delete an image.\n        BootResourcesManager.prototype.deleteImage = function(params) {\n            var self = this;\n            return RegionConnection.callMethod(\n                \"bootresource.delete_image\", params).then(\n                    function(newData) {\n                        angular.copy(angular.fromJson(newData), self._data);\n                        self._loaded = true;\n                        return self._data;\n                    });\n        };\n\n        return new BootResourcesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/bootresources.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Configs Manager\n *\n * Manages all of the config values in the browser. This manager is used for\n * the first-user journey and the settings page.\n */\n\n angular.module('MAAS').factory(\n     'ConfigsManager',\n     ['$q', '$rootScope', 'RegionConnection', 'Manager', function(\n             $q, $rootScope, RegionConnection, Manager) {\n\n         function ConfigsManager() {\n             Manager.call(this);\n\n             this._pk = \"name\";\n             this._handler = \"config\";\n\n             // Listen for notify events for the config object.\n             var self = this;\n             RegionConnection.registerNotifier(\"config\",\n                 function(action, data) {\n                     self.onNotify(action, data);\n                 });\n         }\n\n         ConfigsManager.prototype = new Manager();\n\n         return new ConfigsManager();\n     }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/configs.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Controllers Manager\n *\n * Manages all of the controllers in the browser. This manager is used for the\n * controller listing and view pages. The manager is a subclass of\n * NodesManager.\n */\n\nangular.module('MAAS').factory(\n    'ControllersManager',\n    ['$q', '$rootScope', 'RegionConnection', 'NodesManager', 'ServicesManager',\n            function($q, $rootScope, RegionConnection, NodesManager,\n            ServicesManager) {\n\n        function ControllersManager() {\n            NodesManager.call(this);\n\n            this._pk = \"system_id\";\n            this._handler = \"controller\";\n\n            // Listen for notify events for the controller object.\n            var self = this;\n            RegionConnection.registerNotifier(\"controller\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n        ControllersManager.prototype = new NodesManager();\n\n        ControllersManager.prototype.getServices = function(controller) {\n            var services = [];\n            angular.forEach(controller.service_ids, function(service_id) {\n                var service = ServicesManager.getItemFromList(service_id);\n                if(angular.isObject(service)) {\n                    services.push(service);\n                }\n            });\n            return services;\n        };\n\n        // Check the boot image import status.\n        ControllersManager.prototype.checkImageStates = function(controllers) {\n            return RegionConnection.callMethod(\n                this._handler + \".check_images\", controllers);\n        };\n\n        return new ControllersManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/controllers.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Devices Manager\n *\n * Manages all of the devices in the browser. This manager is used for the\n * device listing and the device view page. The manager uses the\n * RegionConnection to load the devices, update the devices, and listen for\n * notification events about devices.\n */\n\nangular.module('MAAS').factory(\n    'DevicesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'NodesManager', function(\n            $q, $rootScope, RegionConnection, NodesManager) {\n\n        function DevicesManager() {\n            NodesManager.call(this);\n\n            this._pk = \"system_id\";\n            this._handler = \"device\";\n            this._metadataAttributes = {\n                \"owner\": null,\n                \"subnets\": null,\n                \"tags\": null,\n                \"zone\": function(device) {\n                    return device.zone.name;\n                }\n            };\n\n            // Listen for notify events for the device object.\n            var self = this;\n            RegionConnection.registerNotifier(\"device\", function(action, data) {\n                self.onNotify(action, data);\n            });\n        }\n\n        DevicesManager.prototype = new NodesManager();\n\n        // Create a device.\n        DevicesManager.prototype.create = function(node) {\n            // We don't add the item to the list because a NOTIFY event will\n            // add the device to the list. Adding it here will cause angular to\n            // complain because the same object exist in the list.\n            return RegionConnection.callMethod(\"device.create\", node);\n        };\n\n        // Create an interface on device.\n        DevicesManager.prototype.createInterface = function(params) {\n            var self = this;\n            return RegionConnection.callMethod(\n                \"device.create_interface\", params).then(function(device) {\n                    self._replaceItem(device);\n                    return device;\n                });\n        };\n\n        // Perform the action on the device.\n        DevicesManager.prototype.performAction = function(\n            device, action, extra) {\n\n            if(!angular.isObject(extra)) {\n                extra = {};\n            }\n            return RegionConnection.callMethod(\"device.action\", {\n                \"system_id\": device.system_id,\n                \"action\": action,\n                \"extra\": extra\n                });\n        };\n\n        return new DevicesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/devices.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS DHCPSnippet Manager\n *\n * Manages all of the DHCPSnippets in the browser. The manager uses the\n * RegionConnection to load the DHCPSnippets, update the DHCPSnippets, and\n * listen for notification events about DHCPSnippets.\n */\n\nangular.module('MAAS').factory(\n    'DHCPSnippetsManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager',\n    function($q, $rootScope, RegionConnection, Manager) {\n\n        function DHCPSnippetsManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"dhcpsnippet\";\n\n            // Listen for notify events for the DHCPSnippet object.\n            var self = this;\n            RegionConnection.registerNotifier(\"dhcpsnippet\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        DHCPSnippetsManager.prototype = new Manager();\n\n        // Create the snippet.\n        DHCPSnippetsManager.prototype.create = function(snippet) {\n            return RegionConnection.callMethod(\n                this._handler + \".create\", snippet, true);\n        };\n\n        return new DHCPSnippetsManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/dhcpsnippets.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Discovery Manager\n *\n * A Discovery is a MAC, IP binding with an optional hostname that MAAS\n * believes it has discovered. It is associated with a particular fabric and\n * VLAN, and is aware of which rack or region interface most recently\n * discovered it.\n *\n * This class manages all of the discoveries in the browser. It uses the\n * RegionConnection to load the discoveries and listen for notification events\n * about discoveries.\n */\n\nangular.module('MAAS').factory(\n    'DiscoveriesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'PollingManager',\n    function($q, $rootScope, RegionConnection, PollingManager) {\n\n        function DiscoveriesManager() {\n            PollingManager.call(this);\n\n            this._pk = \"first_seen\";\n            this._batchKey = \"first_seen\";\n            this._handler = \"discovery\";\n\n            // Poll every 10 seconds when its empty as its okay for\n            // this to be empty.\n            this._pollEmptyTimeout = 5000;\n        }\n\n        DiscoveriesManager.prototype = new PollingManager();\n\n        return new DiscoveriesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/discoveries.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Domain Manager\n *\n * Manages all of the domains in the browser. The manager uses the\n * RegionConnection to load the domains, update the domains, and listen for\n * notification events about domains.\n */\n\nangular.module('MAAS').factory(\n    'DomainsManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager', function(\n            $q, $rootScope, RegionConnection, Manager) {\n\n        function DomainsManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"domain\";\n\n            // Listen for notify events for the domain object.\n            var self = this;\n            RegionConnection.registerNotifier(\"domain\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        DomainsManager.prototype = new Manager();\n\n        // Create a domain.\n        DomainsManager.prototype.create = function(domain) {\n            // We don't add the item to the list because a NOTIFY event will\n            // add the domain to the list. Adding it here will cause angular to\n            // complain because the same object exist in the list.\n            return RegionConnection.callMethod(\"domain.create\", domain);\n        };\n\n        // Delete the domain.\n        DomainsManager.prototype.deleteDomain = function(domain) {\n            return RegionConnection.callMethod(\"domain.delete\", domain);\n        };\n\n        DomainsManager.prototype.getDefaultDomain = function() {\n            if(this._items.length === 0) {\n                return null;\n            } else {\n                var i;\n                for(i=0;i<this._items.length;i++) {\n                    if(this._items[i].id === 0) {\n                        return this._items[i];\n                    }\n                }\n            }\n            return this._items[0];\n        };\n\n        DomainsManager.prototype.getDomainByName = function(name) {\n            if(this._items.length > 0) {\n                var i;\n                for(i=0;i<this._items.length;i++) {\n                    if(this._items[i].name === name) {\n                        return this._items[i];\n                    }\n                }\n            }\n            return null;\n        };\n\n        return new DomainsManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/domains.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Event Manager Factory\n *\n * Manages all of the events for a node in the browser. The manager uses the\n * RegionConnection to load the events and listen for event notifications.\n */\n\nangular.module('MAAS').factory(\n    'EventsManagerFactory',\n    ['RegionConnection', 'Manager', 'ErrorService',\n    function(RegionConnection, Manager, ErrorService) {\n\n        function EventsManager(nodeId, factory) {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"event\";\n            this._nodeId = nodeId;\n            this._factory = factory;\n            this._maxDays = 1;\n        }\n\n        EventsManager.prototype = new Manager();\n\n        // Return the initial batch parameters with the id of the node\n        // and the maximum number of days to load.\n        EventsManager.prototype._initBatchLoadParameters = function() {\n            return {\n                \"node_id\": this._nodeId,\n                \"max_days\": this._maxDays\n            };\n        };\n\n        // Destroys its self. Removes self from the EventsManagerFactory.\n        EventsManager.prototype.destroy = function(){\n            this._factory.destroyManager(this);\n\n            // If this manager has ever loaded then the region is sending\n            // events about this node. Tell the RegionConnection not to\n            // stop sending notification for events from this node.\n            if(this.isLoaded()) {\n                RegionConnection.callMethod(\"event.clear\", {\n                    node_id: this._nodeId\n                });\n            }\n        };\n\n        // Get the maximum number of days the manager will load.\n        EventsManager.prototype.getMaximumDays = function() {\n            return this._maxDays;\n        };\n\n        // Changes the maximum number of days to load and loads the items.\n        EventsManager.prototype.loadMaximumDays = function(days) {\n            var self = this;\n            var setMaximumDays = function() {\n                self._maxDays = days;\n                self.loadItems();\n            };\n\n            if(this.isLoading()) {\n                // Call loadItems to get an extra defer to know when\n                // the loading is done.\n                this.loadItems().then(function() {\n                    setMaximumDays();\n                });\n            } else {\n                setMaximumDays();\n            }\n        };\n\n        // Factory that holds all created EventsManagers.\n        function EventsManagerFactory() {\n            // Holds a list of all EventsManager that have been created.\n            this._managers = [];\n\n            // Listen for notify events for the event object.\n            var self = this;\n            RegionConnection.registerNotifier(\"event\", function(action, data) {\n                self.onNotify(action, data);\n            });\n        }\n\n        // Gets the EventManager for the nodes with node_id.\n        EventsManagerFactory.prototype._getManager = function(nodeId) {\n            var i;\n            for(i = 0; i < this._managers.length; i++) {\n                if(this._managers[i]._nodeId === nodeId) {\n                    return this._managers[i];\n                }\n            }\n            return null;\n        };\n\n        // Gets the EventManager for the nodes node_id. Creates a new manager\n        // if one does not exist.\n        EventsManagerFactory.prototype.getManager = function(nodeId) {\n            var manager = this._getManager(nodeId);\n            if(!angular.isObject(manager)) {\n                // Not created so create it.\n                manager = new EventsManager(nodeId, this);\n                this._managers.push(manager);\n                return manager;\n            }\n            return manager;\n        };\n\n        // Destroy the EventManager.\n        EventsManagerFactory.prototype.destroyManager = function(manager) {\n            var idx = this._managers.indexOf(manager);\n            if(idx >= 0) {\n                this._managers.splice(idx, 1);\n            }\n        };\n\n        // Called when the RegionConnection gets a notification for an event.\n        EventsManagerFactory.prototype.onNotify = function(action, data) {\n            if(action === \"delete\") {\n                // Send all delete actions to all managers. Only one will\n                // remove the event with the given id.\n                angular.forEach(this._managers, function(manager) {\n                    manager.onNotify(action, data);\n                });\n            } else if (action === \"create\" || action === \"update\") {\n                // Get the manager based on the node_id in data, and send\n                // it the notification.\n                var manager = this._getManager(data.node_id);\n                if(angular.isObject(manager)) {\n                    manager.onNotify(action, data);\n                }\n            }\n        };\n\n        return new EventsManagerFactory();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/events.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Fabric Manager\n *\n * Manages all of the fabrics in the browser. The manager uses the\n * RegionConnection to load the fabrics, update the fabrics, and listen for\n * notification events about fabrics.\n */\n\nangular.module('MAAS').factory(\n    'FabricsManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager', 'VLANsManager',\n    function(\n    $q, $rootScope, RegionConnection, Manager, VLANsManager) {\n\n        function FabricsManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"fabric\";\n\n            // Listen for notify events for the fabric object.\n            var self = this;\n            RegionConnection.registerNotifier(\"fabric\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        FabricsManager.prototype = new Manager();\n\n        // Given a Fabric object, returns its display name.\n        FabricsManager.prototype.getName = function(fabric) {\n            if(!angular.isObject(fabric)) {\n                return;\n            }\n            if(angular.isString(fabric.name)) {\n                return fabric.name;\n            } else {\n                return this._handler + \"-\" + fabric[this._pk];\n            }\n        };\n\n        // Delete the Fabric.\n        FabricsManager.prototype.deleteFabric = function(fabric) {\n            return RegionConnection.callMethod(\n                \"fabric.delete\", { \"id\": fabric.id }, true);\n        };\n\n        // Create a Fabric.\n        FabricsManager.prototype.create = function(fabric) {\n            // We don't add the item to the list because a NOTIFY event will\n            // add the domain to the list. Adding it here will cause angular to\n            // complain because the same object exist in the list.\n            return RegionConnection.callMethod(\"fabric.create\", fabric);\n        };\n\n\n        return new FabricsManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/fabrics.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS General Manager\n *\n * Manager for general information from the region. The general handler on the\n * region side does not push information to the client. This manager uses\n * polling to grab this data periodically from the region.\n *\n * This manage provides different pieces of data and is structure differently\n * than extending the Manager service. It still provides the Manager service\n * interface allowing the ManagerHelperService to load this manager.\n */\n\nangular.module('MAAS').factory(\n    'GeneralManager',\n    ['$q', '$timeout', 'RegionConnection', 'ErrorService',\n    function($q, $timeout, RegionConnection, ErrorService) {\n\n        // Constructor\n        function GeneralManager() {\n            // Holds the available endpoints and its data.\n            this._data = {\n                machine_actions: {\n                    method: \"general.machine_actions\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                device_actions: {\n                    method: \"general.device_actions\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                region_controller_actions: {\n                    method: \"general.region_controller_actions\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                rack_controller_actions: {\n                    method: \"general.rack_controller_actions\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                region_and_rack_controller_actions: {\n                    method: \"general.region_and_rack_controller_actions\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                architectures: {\n                    method: \"general.architectures\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                known_architectures: {\n                    method: \"general.known_architectures\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                pockets_to_disable: {\n                    method: \"general.pockets_to_disable\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                components_to_disable: {\n                    method: \"general.components_to_disable\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                hwe_kernels: {\n                    method: \"general.hwe_kernels\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                min_hwe_kernels: {\n                    method: \"general.min_hwe_kernels\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null\n                },\n                default_min_hwe_kernel: {\n                    method: \"general.default_min_hwe_kernel\",\n                    data: { text: '' },\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null,\n                    replaceData: function(oldData, newData) {\n                        oldData.text = newData;\n                    }\n                },\n                osinfo: {\n                    method: \"general.osinfo\",\n                    data: {},\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null,\n                    isEmpty: function(data) {\n                        var osystems = data.osystems;\n                        return (angular.isUndefined(osystems) ||\n                            osystems.length === 0);\n                    },\n                    replaceData: function(oldData, newData) {\n                        angular.copy(newData, oldData);\n                    }\n                },\n                bond_options: {\n                    method: \"general.bond_options\",\n                    data: {},\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null,\n                    replaceData: function(oldData, newData) {\n                        angular.copy(newData, oldData);\n                    }\n                },\n                version: {\n                    method: \"general.version\",\n                    data: { text: null },\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null,\n                    replaceData: function(oldData, newData) {\n                        oldData.text = newData;\n                    }\n                },\n                power_types: {\n                    method: \"general.power_types\",\n                    data: [],\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null,\n                    replaceData: function(oldData, newData) {\n                        // Add new power types.\n                        var i, j, newPowerType, oldPowerType;\n                        for(i = 0; i < newData.length; i++) {\n                            newPowerType = newData[i];\n                            var newItem = true;\n                            for(j = 0; j < oldData.length; j++) {\n                                oldPowerType = oldData[j];\n                                if(newPowerType.name === oldPowerType.name) {\n                                    newItem = false;\n                                    break;\n                                }\n                            }\n\n                            // Item was previously not in the list so it is\n                            // inserted into the array.\n                            if(newItem) {\n                                oldData.push(newPowerType);\n                            }\n                        }\n\n                        // Remove any power types that are not included in\n                        // the newData.\n                        for(i = oldData.length - 1; i >= 0; i--) {\n                            oldPowerType = oldData[i];\n                            var found = false;\n                            for(j = 0; j < newData.length; j++) {\n                                newPowerType = newData[j];\n                                if(newPowerType.name === oldPowerType.name) {\n                                    found = true;\n                                    break;\n                                }\n                            }\n\n                            // Item was previously not in the list so it is\n                            // inserted into the array.\n                            if(!found) {\n                                oldData.splice(i, 1);\n                            }\n                        }\n                    }\n                },\n                release_options: {\n                    method: \"general.release_options\",\n                    data: {},\n                    loaded: false,\n                    polling: [],\n                    nextPromise: null,\n                    replaceData: function(oldData, newData) {\n                        angular.copy(newData, oldData);\n                    }\n                }\n            };\n\n            // Amount of time in milliseconds the manager should wait to poll\n            // for new data.\n            this._pollTimeout = 10000;\n\n            // Amount of time in milliseconds the manager should wait to poll\n            // for new data when an error occurs.\n            this._pollErrorTimeout = 3000;\n\n            // Amount of time in milliseconds the manager should wait to poll\n            // for new data when the retrieved data is empty.\n            this._pollEmptyTimeout = 3000;\n\n            // Set to true when the items list should reload upon re-connection\n            // to the region.\n            this._autoReload = false;\n\n            // Use the same notify type as a default manager.\n            this._type = 'notify';\n\n            // The scopes that have loaded this manager.\n            this._scopes = [];\n        }\n\n        GeneralManager.prototype._getInternalData = function(name) {\n            var data = this._data[name];\n            if(angular.isUndefined(data)) {\n                throw new Error(\"Unknown data: \" + name);\n            }\n            return data;\n        };\n\n        // Return loaded data.\n        GeneralManager.prototype.getData = function(name) {\n            return this._getInternalData(name).data;\n        };\n\n        // Return true when all data has been loaded.\n        GeneralManager.prototype.isLoaded = function() {\n            var loaded = true;\n            angular.forEach(this._data, function(data) {\n                if(!data.loaded) {\n                    loaded = false;\n                }\n            });\n            return loaded;\n        };\n\n        // Return true when data has been loaded.\n        GeneralManager.prototype.isDataLoaded = function(name) {\n            return this._getInternalData(name).loaded;\n        };\n\n        // Returns true when the manager is currently polling.\n        GeneralManager.prototype.isPolling = function() {\n            var polling = false;\n            angular.forEach(this._data, function(data) {\n                if(data.polling.length > 0) {\n                    polling = true;\n                }\n            });\n            return polling;\n        };\n\n        // Returns true when the manager is currently polling for that data.\n        GeneralManager.prototype.isDataPolling = function(name) {\n            return this._getInternalData(name).polling;\n        };\n\n        // Starts the manager polling for data.\n        GeneralManager.prototype.startPolling = function(scope, name) {\n            var data = this._getInternalData(name);\n            var idx = data.polling.indexOf(scope);\n            if(idx === -1) {\n                data.polling.push(scope);\n                if(data.polling.length === 1) {\n                    // Polling needs to be started. This is the first scope\n                    // that is requesting for polling to be performed.\n                    this._poll(data);\n                }\n            }\n        };\n\n        // Stops the manager polling for data.\n        GeneralManager.prototype.stopPolling = function(scope, name) {\n            var data = this._getInternalData(name);\n            var idx = data.polling.indexOf(scope);\n            if(idx >= 0) {\n                data.polling.splice(idx, 1);\n            }\n            if(data.polling.length === 0 &&\n                angular.isObject(data.nextPromise)) {\n                $timeout.cancel(data.nextPromise);\n                data.nextPromise = null;\n            }\n        };\n\n        // Load the data from the region.\n        GeneralManager.prototype._loadData = function(data, raiseError) {\n            var replaceData = data.replaceData;\n            raiseError = raiseError || false;\n\n            // Set default replaceData function if data doesn't provide its\n            // own function.\n            if(angular.isUndefined(replaceData)) {\n                replaceData = function(oldData, newData) {\n                    oldData.length = 0;\n                    oldData.push.apply(oldData, newData);\n                };\n            }\n\n            return RegionConnection.callMethod(data.method).then(\n                function(newData) {\n                    replaceData(data.data, newData);\n                    data.loaded = true;\n                    return data.data;\n                }, function(error) {\n                    if(raiseError) {\n                        ErrorService.raiseError(error);\n                    }\n                    return error;\n                });\n        };\n\n        GeneralManager.prototype._pollAgain = function(data, timeout) {\n            var self = this;\n            data.nextPromise = $timeout(function() {\n                self._poll(data);\n            }, timeout);\n        };\n\n        // Polls for the data from the region.\n        GeneralManager.prototype._poll = function(data) {\n            var self = this;\n            var isEmpty = data.isEmpty;\n\n            // Set default isEmpty function if data doesn't provide its\n            // own function.\n            if(angular.isUndefined(isEmpty)) {\n                isEmpty = function(data) {\n                    return data.length === 0;\n                };\n            }\n\n            // Can only poll if connected.\n            if(!RegionConnection.isConnected()) {\n                this._pollAgain(data, this._pollErrorTimeout);\n                return;\n            }\n\n            return this._loadData(data, false).then(function(newData) {\n                var pollTimeout = self._pollTimeout;\n                if(isEmpty(data.data)) {\n                    pollTimeout = self._pollEmptyTimeout;\n                }\n                self._pollAgain(data, pollTimeout);\n                return newData;\n            }, function(error) {\n                // Don't raise the error, just log it and try again.\n                console.log(error);\n                self._pollAgain(data, self._pollErrorTimeout);\n            });\n        };\n\n        // Loads all the items. This implemented so the ManagerHelperService\n        // can work on this manager just like all the rest.\n        GeneralManager.prototype.loadItems = function() {\n            var self = this;\n            var defer = $q.defer();\n            var waitingCount = Object.keys(this._data).length;\n            var done = function() {\n                waitingCount -= 1;\n                if(waitingCount === 0) {\n                    defer.resolve();\n                }\n            };\n\n            angular.forEach(this._data, function(data) {\n                self._loadData(data, true).then(function() {\n                    done();\n                });\n            });\n\n            return defer.promise;\n        };\n\n        // Enables auto reloading of the item list on connection to region.\n        GeneralManager.prototype.enableAutoReload = function() {\n            if(!this._autoReload) {\n                this._autoReload = true;\n                var self = this;\n                this._reloadFunc = function() {\n                    self.loadItems();\n                };\n                RegionConnection.registerHandler(\"open\", this._reloadFunc);\n            }\n        };\n\n        // Disable auto reloading of the item list on connection to region.\n        GeneralManager.prototype.disableAutoReload = function() {\n            if(this._autoReload) {\n                RegionConnection.unregisterHandler(\"open\", this._reloadFunc);\n                this._reloadFunc = null;\n                this._autoReload = false;\n            }\n        };\n\n        return new GeneralManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/general.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS IPRange Manager\n *\n * Manages all of the IPRanges in the browser. The manager uses the\n * RegionConnection to load the IPRanges, update the IPRanges, and listen for\n * notification events about IPRanges.\n */\n\nangular.module('MAAS').factory(\n    'IPRangesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager',\n    function($q, $rootScope, RegionConnection, Manager) {\n\n        function IPRangesManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"iprange\";\n\n            // Listen for notify events for the iprange object.\n            var self = this;\n            RegionConnection.registerNotifier(\"iprange\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        IPRangesManager.prototype = new Manager();\n\n        return new IPRangesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/ipranges.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Machines Manager\n *\n * Manages all of the machines in the browser. This manager is used for the\n * machine listing and view pages. The manager is a subclass of NodesManager.\n */\n\nangular.module('MAAS').factory(\n    'MachinesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'NodesManager', function(\n            $q, $rootScope, RegionConnection, NodesManager) {\n\n        function MachinesManager() {\n            NodesManager.call(this);\n\n            this._pk = \"system_id\";\n            this._handler = \"machine\";\n\n            this._metadataAttributes = {\n                \"architecture\": null,\n                \"status\": null,\n                \"owner\": null,\n                \"tags\": null,\n                \"pod\": function(machine) {\n                    return (machine.pod === undefined) ? '' :machine.pod.name;\n                },\n                \"zone\": function(machine) {\n                    return machine.zone.name;\n                },\n                \"subnets\": null,\n                \"fabrics\": null,\n                \"spaces\": null,\n                \"storage_tags\": null,\n                \"release\": function(machine) {\n                    if(machine.status_code === 6 || machine.status_code === 9) {\n                        return machine.osystem + \"/\" + machine.distro_series;\n                    } else {\n                        return '';\n                    }\n                }\n            };\n\n            // Listen for notify events for the machine object.\n            var self = this;\n            RegionConnection.registerNotifier(\"machine\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n\n        }\n        MachinesManager.prototype = new NodesManager();\n\n        MachinesManager.prototype.mountSpecialFilesystem =\n            function(machine, fstype, mount_point, mount_options) {\n                var method = this._handler + \".mount_special\";\n                var params = {\n                    system_id: machine.system_id,\n                    fstype: fstype,\n                    mount_point: mount_point,\n                    mount_options: mount_options\n                };\n                return RegionConnection.callMethod(method, params);\n            };\n\n        MachinesManager.prototype.unmountSpecialFilesystem =\n            function(machine, mount_point) {\n                var method = this._handler + \".unmount_special\";\n                var params = {\n                    system_id: machine.system_id,\n                    mount_point: mount_point\n                };\n                return RegionConnection.callMethod(method, params);\n            };\n\n        return new MachinesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/machines.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS NodeResultsManager Manager\n *\n * Manages all of the NodeResults in the browser. The manager uses the\n * RegionConnection to load the NodeResults, and listen for\n * notification events about NodeResults.\n */\n\nangular.module('MAAS').factory(\n    'NodeResultsManagerFactory', ['RegionConnection', 'Manager',\n    function(RegionConnection, Manager) {\n\n        function NodeResultsManager(node, factory) {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"noderesult\";\n            this._node = node;\n            this._factory = factory;\n\n            // Store as an array to preserve order.\n            this.commissioning_results = [\n                {\n                    title: null,\n                    hardware_type: 0,\n                    results: {}\n                },\n                {\n                    title: \"CPU\",\n                    hardware_type: 1,\n                    results: {}\n                },\n                {\n                    title: \"Memory\",\n                    hardware_type: 2,\n                    results: {}\n                },\n                {\n                    title: \"Storage\",\n                    hardware_type: 3,\n                    results: {}\n                }\n            ];\n            this.testing_results = [\n                {\n                    title: \"CPU\",\n                    hardware_type: 1,\n                    results: {}\n                },\n                {\n                    title: \"Memory\",\n                    hardware_type: 2,\n                    results: {}\n                },\n                {\n                    title: \"Storage\",\n                    hardware_type: 3,\n                    results: {}\n                },\n                {\n                    title: \"Other Results\",\n                    hardware_type: 0,\n                    results: {}\n                }\n            ];\n            this.installation_results = [];\n\n            // Listen for notify events for the ScriptResult object.\n            // This is noderesult instead of scriptresult because the\n            // class name is NodeResultHandler.\n            var self = this;\n            RegionConnection.registerNotifier(\"noderesult\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        NodeResultsManager.prototype = new Manager();\n\n        NodeResultsManager.prototype._getStorageSubtext = function(disk) {\n            var deviceinfo = '';\n            if(disk.model !== '') {\n                deviceinfo += \"Model: \" + disk.model;\n            }\n            if(disk.serial !== '') {\n                if(deviceinfo !== '') {\n                    deviceinfo += ', ';\n                }\n                deviceinfo += \"Serial: \" + disk.serial;\n            }\n            if(deviceinfo !== '') {\n                return '/dev/' + disk.name + ' (' + deviceinfo + ')';\n            }else{\n                return '/dev/' + disk.name;\n            }\n        };\n\n        NodeResultsManager.prototype._updateObject = function(\n            existing, updated) {\n            angular.forEach(updated, function(value, key) {\n                if(existing[key] !== value && key !== 'showing_results' &&\n                   key !== 'showing_history' && key !== 'showing_menu' &&\n                   key !== '$selected') {\n                    existing[key] = value;\n                }\n            });\n        };\n\n        NodeResultsManager.prototype._addOrReplace = function(results, result) {\n            var i;\n            for(i = 0; i < results.length; i++) {\n                if(results[i].name === result.name) {\n                    // Object already exists, update fields.\n                    result.$selected = results[i].$selected;\n                    result.showing_results = results[i].showing_results;\n                    result.showing_history = results[i].showing_history;\n                    result.showing_menu = results[i].showing_menu;\n                    angular.copy(result, results[i]);\n                    return;\n                }\n            }\n            // No result with the same name exists, add it to the sorted list.\n            for(i = 0; i < results.length; i++) {\n                if(results[i].name > result.name) {\n                    results.splice(i, 0, result);\n                    return;\n                }\n            }\n            results.push(result);\n        };\n\n        NodeResultsManager.prototype._processItem = function(result) {\n            var results;\n            result.showing_results = false;\n            result.showing_history = false;\n            result.showing_menu = false;\n            result.result_section = \"scripts\";\n\n            if(result.result_type === 0) {\n                results = this.commissioning_results;\n            } else if(result.result_type === 1) {\n                // Installation results are not split into hardware types or\n                // have subtext labels.\n                this._addOrReplace(this.installation_results, result);\n                return;\n            } else {\n                // Store all remaining result types as test results in case\n                // another result type is ever added.\n                results = this.testing_results;\n                result.result_section = \"tests\";\n            }\n            var i;\n            // Fallback to storing results in other results incase a new type\n            // is added\n            var hardware_type_results = results[3];\n            for(i = 0; i < results.length; i++) {\n                if(results[i].hardware_type === result.hardware_type) {\n                    hardware_type_results = results[i].results;\n                    break;\n                }\n            }\n\n            if(result.hardware_type === 3 &&\n               result.physical_blockdevice !== null) {\n                // Storage results are split into individual components.\n                var disk, subtext;\n                // If the storage result is associated with a specific\n                // component generate subtext for that component.\n                for(i = 0; i < this._node.disks.length; i++) {\n                    disk = this._node.disks[i];\n                    if(disk.id === result.physical_blockdevice) {\n                        subtext = this._getStorageSubtext(disk);\n                        if(!angular.isArray(\n                            hardware_type_results[subtext])) {\n                                hardware_type_results[subtext] = [];\n                        }\n                        this._addOrReplace(\n                            hardware_type_results[subtext], result);\n                        break;\n                    }\n                }\n            } else {\n                // Other hardware types are not split into individual\n                // components.\n                if(!angular.isArray(hardware_type_results[null])) {\n                    hardware_type_results[null] = [];\n                }\n                this._addOrReplace(hardware_type_results[null], result);\n            }\n        };\n\n        NodeResultsManager.prototype._removeItem = function(result) {\n            var idx = this._getIndexOfItem(this._items, result.id);\n            if(idx >= 0) {\n                this._updateMetadata(this._items[idx], \"delete\");\n            }\n            this._removeItemByIdFromArray(this._items, result.id);\n            this._removeItemByIdFromArray(this._selectedItems, result.id);\n\n            var self = this;\n            angular.forEach(this.commissioning_results, function(hw_type) {\n                angular.forEach(hw_type.results, function(results, subtext) {\n                    self._removeItemByIdFromArray(results, result.id);\n                    if(results.length === 0)\n                    {\n                        delete hw_type.results[subtext];\n                    }\n                });\n            });\n            angular.forEach(this.testing_results, function(hw_type) {\n                angular.forEach(hw_type.results, function(results, subtext) {\n                    self._removeItemByIdFromArray(results, result.id);\n                    if(results.length === 0)\n                    {\n                        delete hw_type.results[subtext];\n                    }\n                });\n            });\n            this._removeItemByIdFromArray(this.installation_results, result.id);\n        };\n\n        // Return the list of ScriptResults for the given node when retrieving\n        // the initial list.\n        NodeResultsManager.prototype._initBatchLoadParameters = function() {\n            var ret = {\n                \"system_id\": this._node.system_id\n            };\n            // Limit the results returned to what can be viewed.\n            if(this._area === \"summary\") {\n                ret.has_surfaced = true;\n                ret.result_type = 2;\n            }else if(this._area === \"testing\") {\n                ret.result_type = 2;\n            }else if(this._area === \"commissioning\") {\n                ret.result_type = 0;\n            }else if(this._area === \"logs\") {\n                ret.result_type = 1;\n            }\n            return ret;\n        };\n\n        // Destroys itself. Removes self from the NodeResultsManagerFactory.\n        NodeResultsManager.prototype.destroy = function() {\n            this._factory.destroyManager(this);\n\n            // If this manager has ever loaded then the region is sending\n            // results from this node. Tell the RegionConnection to stop.\n            if(this.isLoaded()) {\n                var method = this._handler + \".clear\";\n                RegionConnection.callMethod(method, {\n                    system_id: this._node.system_id\n                });\n            }\n        };\n\n        // Get result data.\n        NodeResultsManager.prototype.get_result_data = function(\n            script_id, data_type) {\n            var method = this._handler + \".get_result_data\";\n            var params = {\n                id: script_id,\n                data_type: data_type\n            };\n            return RegionConnection.callMethod(method, params);\n        };\n\n        // Factory that holds all created NodeResultsManagers.\n        function NodeResultsManagerFactory() {\n            // Holds a list of all NodeResultsManagers that have been created.\n            this._managers = [];\n        }\n\n        // Gets the NodeResultsManager for the nodes with node_system_id.\n        NodeResultsManagerFactory.prototype._getManager = function(node) {\n            var i;\n            for(i = 0; i < this._managers.length; i++) {\n                if(this._managers[i]._node.system_id === node.system_id) {\n                    return this._managers[i];\n                }\n            }\n            return null;\n        };\n\n        // Gets the NodeResultsManager for the nodes system_id. Creates a new\n        // manager if one does not exist.\n        NodeResultsManagerFactory.prototype.getManager = function(\n            node, area) {\n            var manager = this._getManager(node);\n            if(!angular.isObject(manager)) {\n                // Not created so create it.\n                manager = new NodeResultsManager(node, this);\n                this._managers.push(manager);\n            }\n            manager._area = area;\n            if(area === \"commissioning\") {\n                manager.results = manager.commissioning_results;\n            }else if(area === \"logs\") {\n                manager.results = manager.installation_results;\n            }else{\n                manager.results = manager.testing_results;\n            }\n            return manager;\n        };\n\n        // Destroy the NodeResultsManager.\n        NodeResultsManagerFactory.prototype.destroyManager = function(manager) {\n            var idx = this._managers.indexOf(manager);\n            if(idx >= 0) {\n                this._managers.splice(idx, 1);\n            }\n        };\n\n        return new NodeResultsManagerFactory();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/node_results.js","/* Copyright 2015-2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Nodes Manager\n *\n * Manages all of the nodes in the browser. This manager is used for the\n * machine and controller listing and view pages (as machines and controllers\n * are both Nodes).  The manager uses the RegionConnection to load the nodes,\n * update the nodes, and listen for notification events about nodes.\n */\n\nangular.module('MAAS').service(\n    'NodesManager',\n    ['$q', '$rootScope', '$timeout', 'RegionConnection', 'Manager', function(\n            $q, $rootScope, $timeout, RegionConnection, Manager) {\n\n        function NodesManager() {\n            Manager.call(this);\n        }\n\n        NodesManager.prototype = new Manager();\n\n        // Create a node.\n        NodesManager.prototype.create = function(node) {\n            // We don't add the item to the list because a NOTIFY event will\n            // add the node to the list. Adding it here will cause angular\n            // to complain because the same object exist in the list.\n            return RegionConnection.callMethod(\n                this._handler + \".create\", node);\n        };\n\n        // Perform the action on the node.\n        NodesManager.prototype.performAction = function(\n            node, action, extra) {\n            if(!angular.isObject(extra)) {\n                extra = {};\n            }\n            return RegionConnection.callMethod(this._handler + \".action\", {\n                \"system_id\": node.system_id,\n                \"action\": action,\n                \"extra\": extra\n                });\n        };\n\n        // Check the power state for the node.\n        NodesManager.prototype.checkPowerState = function(node) {\n            return RegionConnection.callMethod(this._handler + \".check_power\", {\n                \"system_id\": node.system_id\n                }).then(function(state) {\n                    node.power_state = state;\n                    return state;\n                }, function(error) {\n                    node.power_state = \"error\";\n\n                    // Already been logged server side, but log it client\n                    // side so if they really care they can see why.\n                    console.log(error);\n\n                    // Return the state as error to the remaining callbacks.\n                    return \"error\";\n                });\n        };\n\n        // Create the physical interface on the node.\n        NodesManager.prototype.createPhysicalInterface = function(\n            node, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".create_physical\", params);\n            };\n\n        // Create the VLAN interface on the node.\n        NodesManager.prototype.createVLANInterface = function(\n            node, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".create_vlan\", params);\n            };\n\n        // Create the bond interface on the node.\n        NodesManager.prototype.createBondInterface = function(\n            node, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".create_bond\", params);\n            };\n\n        // Create the bridge interface on the node.\n        NodesManager.prototype.createBridgeInterface = function(\n            node, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".create_bridge\", params);\n            };\n\n        // Update the interface for the node.\n        NodesManager.prototype.updateInterface = function(\n            node, interface_id, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                params.interface_id = interface_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".update_interface\", params);\n            };\n\n        // Update an interface from a maas-obj-form.\n        NodesManager.prototype.updateInterfaceForm = function(\n            params) {\n                return RegionConnection.callMethod(\n                    this._handler + \".update_interface\", params);\n            };\n\n        // Delete the interface for the node.\n        NodesManager.prototype.deleteInterface = function(\n            node, interface_id) {\n                var params = {\n                    system_id: node.system_id,\n                    interface_id: interface_id\n                };\n                return RegionConnection.callMethod(\n                    this._handler + \".delete_interface\", params);\n            };\n\n        // Create or update the link to the subnet for the interface.\n        NodesManager.prototype.linkSubnet = function(\n            node, interface_id, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                params.interface_id = interface_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".link_subnet\", params);\n            };\n\n        // Remove the link to the subnet for the interface.\n        NodesManager.prototype.unlinkSubnet = function(\n            node, interface_id, link_id) {\n                var params = {\n                    system_id: node.system_id,\n                    interface_id: interface_id,\n                    link_id: link_id\n                };\n                return RegionConnection.callMethod(\n                    this._handler + \".unlink_subnet\", params);\n            };\n\n        // Send the update information to the region.\n        NodesManager.prototype.updateFilesystem = function(\n            node, block_id, partition_id, fstype, mount_point, mount_options,\n            tags) {\n                var self = this;\n                var method = this._handler + \".update_filesystem\";\n                var params = {\n                    system_id: node.system_id,\n                    block_id: block_id,\n                    partition_id: partition_id,\n                    fstype: fstype,\n                    mount_point: mount_point,\n                    mount_options: mount_options,\n                    tags: tags\n                };\n                return RegionConnection.callMethod(method, params);\n            };\n\n        // Delete the disk.\n        NodesManager.prototype.deleteDisk = function(\n            node, block_id) {\n                var self = this;\n                var method = this._handler + \".delete_disk\";\n                var params = {\n                    system_id: node.system_id,\n                    block_id: block_id\n                };\n                return RegionConnection.callMethod(method, params);\n            };\n\n        // Delete the partition.\n        NodesManager.prototype.deletePartition = function(\n            node, partition_id) {\n                var self = this;\n                var method = this._handler + \".delete_partition\";\n                var params = {\n                    system_id: node.system_id,\n                    partition_id: partition_id\n                };\n                return RegionConnection.callMethod(method, params);\n            };\n\n        // Delete the disk or partition.\n        NodesManager.prototype.deleteVolumeGroup = function(\n            node, volume_group_id) {\n                var self = this;\n                var method = this._handler + \".delete_volume_group\";\n                var params = {\n                    system_id: node.system_id,\n                    volume_group_id: volume_group_id\n                };\n                return RegionConnection.callMethod(method, params);\n            };\n\n        // Delete a cache set.\n        NodesManager.prototype.deleteCacheSet = function(\n            node, cache_set_id) {\n                var self = this;\n                var method = this._handler + \".delete_cache_set\";\n                var params = {\n                    system_id: node.system_id,\n                    cache_set_id: cache_set_id\n                };\n                return RegionConnection.callMethod(method, params);\n            };\n\n        // Delete a filesystem.\n        NodesManager.prototype.deleteFilesystem = function(\n            node, blockdevice_id, partition_id, filesystem_id) {\n                var self = this;\n                var method = this._handler + \".delete_filesystem\";\n                var params = {\n                    system_id: node.system_id,\n                    blockdevice_id: blockdevice_id,\n                    partition_id: partition_id,\n                    filesystem_id: filesystem_id\n                };\n                return RegionConnection.callMethod(method, params);\n            };\n\n        // Create a new partition.\n        NodesManager.prototype.createPartition = function(\n            node, block_id, size, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                var self = this;\n                var method = this._handler + \".create_partition\";\n                params.system_id = node.system_id;\n                params.block_id = block_id;\n                params.partition_size = size;\n                return RegionConnection.callMethod(method, params);\n            };\n\n        // Create a new cache set.\n        NodesManager.prototype.createCacheSet = function(\n            node, block_id, partition_id) {\n                var self = this;\n                var method = this._handler + \".create_cache_set\";\n                var params = {\n                    system_id: node.system_id,\n                    block_id: block_id,\n                    partition_id: partition_id\n                };\n                return RegionConnection.callMethod(method, params);\n            };\n\n        // Create a new bcache device.\n        NodesManager.prototype.createBcache = function(\n            node, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".create_bcache\", params);\n            };\n\n        // Create a new RAID device.\n        NodesManager.prototype.createRAID = function(\n            node, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".create_raid\", params);\n            };\n\n        // Create a new volume group.\n        NodesManager.prototype.createVolumeGroup = function(\n            node, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".create_volume_group\", params);\n            };\n\n        // Create a new logical volume.\n        NodesManager.prototype.createLogicalVolume = function(\n            node, volume_group_id, name, size, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                var self = this;\n                var method = this._handler + \".create_logical_volume\";\n                params.system_id = node.system_id;\n                params.volume_group_id = volume_group_id;\n                params.name = name;\n                params.size = size;\n                return RegionConnection.callMethod(method, params);\n            };\n\n        // Update a disk.\n        NodesManager.prototype.updateDisk = function(\n            node, block_id, params) {\n                if(!angular.isObject(params)) {\n                    params = {};\n                }\n                params.system_id = node.system_id;\n                params.block_id = block_id;\n                return RegionConnection.callMethod(\n                    this._handler + \".update_disk\", params);\n            };\n\n        // Set disk as the boot disk.\n        NodesManager.prototype.setBootDisk = function(\n            node, block_id) {\n                var params = {\n                    system_id: node.system_id,\n                    block_id: block_id\n                };\n                return RegionConnection.callMethod(\n                    this._handler + \".set_boot_disk\", params);\n            };\n\n        NodesManager.prototype.getSummaryXML = function(node) {\n            return RegionConnection.callMethod(\n                this._handler + \".get_summary_xml\",\n                {\"system_id\": node.system_id});\n        };\n\n        NodesManager.prototype.getSummaryYAML = function(node) {\n            return RegionConnection.callMethod(\n                this._handler + \".get_summary_yaml\",\n                {\"system_id\": node.system_id});\n        };\n\n        return NodesManager;\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/nodes.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Notifications Manager.\n *\n * Manages notifications in the browser. Uses RegionConnection to load\n * notifications, await new, updated, and deleted notifications, and to\n * dismiss them.\n */\n\nangular.module('MAAS').factory(\n    'NotificationsManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager',\n     function($q, $rootScope, RegionConnection, Manager) {\n\n        function NotificationsManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"notification\";\n\n            // Listen for notify events for the notification object.\n            RegionConnection.registerNotifier(\n                \"notification\", angular.bind(this, this.onNotify));\n        }\n\n        NotificationsManager.prototype = new Manager();\n        NotificationsManager.prototype.dismiss = function(notification) {\n            return RegionConnection.callMethod(\n                \"notification.dismiss\", {id: notification.id});\n        };\n\n        return new NotificationsManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/notifications.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS PackageRepositories Manager\n *\n * Manages all of the PackageRepositories in the browser. The manager uses the\n * RegionConnection to load the PackageRepositories, update them, and listen\n * for notification events about them.\n */\n\nangular.module('MAAS').factory(\n    'PackageRepositoriesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager',\n    function($q, $rootScope, RegionConnection, Manager) {\n\n        function PackageRepositoriesManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"packagerepository\";\n\n            // Listen for notify events for the PackageRepository object.\n            var self = this;\n            RegionConnection.registerNotifier(\"packagerepository\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        PackageRepositoriesManager.prototype = new Manager();\n\n        // Create the repository.\n        PackageRepositoriesManager.prototype.create = function(repository) {\n            return RegionConnection.callMethod(\n                this._handler + \".create\", repository, true);\n        };\n\n        return new PackageRepositoriesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/packagerepositories.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Pods Manager\n *\n * Manages all of the pods in the browser. The manager uses the\n * RegionConnection to load the pods, update the pods, and listen for\n * notification events about pods.\n */\n\nangular.module('MAAS').service(\n    'PodsManager',\n    ['$q', '$rootScope', '$timeout', 'RegionConnection', 'Manager', function(\n            $q, $rootScope, $timeout, RegionConnection, Manager) {\n\n        function PodsManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"pod\";\n\n            // Listen for notify events for the pod object.\n            var self = this;\n            RegionConnection.registerNotifier(\"pod\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        PodsManager.prototype = new Manager();\n\n        // Refresh the pod information\n        PodsManager.prototype.refresh = function(pod) {\n            var self = this;\n            return RegionConnection.callMethod(\"pod.refresh\", pod).then(\n                function(pod) {\n                    self._replaceItem(pod);\n                    return pod;\n                });\n        };\n\n        // Compose a machine in the pod.\n        PodsManager.prototype.compose = function(params) {\n            var self = this;\n            return RegionConnection.callMethod(\"pod.compose\", params).then(\n                function(pod) {\n                    self._replaceItem(pod);\n                    return pod;\n                });\n        };\n\n        return new PodsManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/pods.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Region Connection\n *\n * Provides the websocket connection between the client and the MAAS regiond\n * service.\n */\n\nangular.module('MAAS').factory(\n    'RegionConnection',\n    ['$q', '$rootScope', '$timeout', '$window', '$cookies', function(\n        $q, $rootScope, $timeout, $window, $cookies) {\n\n        // Message types\n        var MSG_TYPE = {\n            REQUEST: 0,\n            RESPONSE: 1,\n            NOTIFY: 2\n        };\n\n        // Response types\n        var RESPONSE_TYPE = {\n            SUCCESS: 0,\n            ERROR: 1\n        };\n\n        // Constructor\n        function RegionConnection() {\n            this.callbacks = {};\n            this.requests = {};\n            this.requestId = 0;\n            this.url = null;\n            this.websocket = null;\n            this.connected = false;\n            this.autoReconnect = true;\n            this.retryTimeout = 5000;\n            this.error = null;\n\n            // Defer used for defaultConnect. If defaultConnect is called\n            // quickly only the first one will start the connection. The\n            // remaining will recieve this defer.\n            this.defaultConnectDefer = null;\n\n            // List of functions to call when a WebSocket event occurs. Each\n            // function will get the WebSocket event passed to it.\n            this.handlers = {\n                open: [],\n                error: [],\n                close: []\n            };\n\n            // Object containing a fields with list of functions. When\n            // a NOTIFY message is received it will match the name to a field\n            // in this object. If the field exists in the object the list\n            // of functions will be called with the action and obj_id.\n            this.notifiers = {};\n        }\n\n        // Return a new request id.\n        RegionConnection.prototype.newRequestId = function() {\n            this.requestId += 1;\n            return this.requestId;\n        };\n\n        // Register event handler.\n        RegionConnection.prototype.registerHandler = function (name, func) {\n            if(!angular.isDefined(this.handlers[name])) {\n                throw new Error(\"Invalid handler: \" + name);\n            }\n            if(!angular.isFunction(func)) {\n                throw new Error(\"Requires a function to register a handler.\");\n            }\n            this.handlers[name].push(func);\n        };\n\n        // Unregister event handler.\n        RegionConnection.prototype.unregisterHandler = function (name, func) {\n            if(!angular.isDefined(this.handlers[name])) {\n                throw new Error(\"Invalid handler: \" + name);\n            }\n            var idx = this.handlers[name].indexOf(func);\n            if(idx >= 0) {\n                this.handlers[name].splice(idx, 1);\n            }\n        };\n\n        // Register notification handler.\n        RegionConnection.prototype.registerNotifier = function(name, func) {\n            if(!angular.isFunction(func)) {\n                throw new Error(\"Requires a function to register a notifier.\");\n            }\n            if(angular.isUndefined(this.notifiers[name])) {\n                this.notifiers[name] = [];\n            }\n            this.notifiers[name].push(func);\n        };\n\n        // Unregister notification handler.\n        RegionConnection.prototype.unregisterNotifier = function(name, func) {\n            if(angular.isUndefined(this.notifiers[name])) {\n                return;\n            }\n            var idx = this.notifiers[name].indexOf(func);\n            if(idx >= 0) {\n                this.notifiers[name].splice(idx, 1);\n            }\n        };\n\n        // Return True if currently connected to region.\n        RegionConnection.prototype.isConnected = function() {\n            return this.connected;\n        };\n\n        // Builds the websocket connection.\n        RegionConnection.prototype.buildSocket = function(url) {\n            return new WebSocket(url);\n        };\n\n        // Opens the websocket connection.\n        RegionConnection.prototype.connect = function() {\n            this.url = this._buildUrl();\n            this.autoReconnect = true;\n            this.websocket = this.buildSocket(this.url);\n\n            var self = this;\n            this.websocket.onopen = function(evt) {\n                self.connected = true;\n                angular.forEach(self.handlers.open, function(func) {\n                    func(evt);\n                });\n            };\n            this.websocket.onerror = function(evt) {\n                angular.forEach(self.handlers.error, function(func) {\n                    func(evt);\n                });\n            };\n            this.websocket.onclose = function(evt) {\n                self.connected = false;\n                self.error = \"Unable to connect to: \" + self.url.split(\"?\")[0];\n                angular.forEach(self.handlers.close, function(func) {\n                    func(evt);\n                });\n                if(self.autoReconnect) {\n                    $timeout(function() {\n                        self.connect();\n                    }, self.retryTimeout);\n                }\n            };\n            this.websocket.onmessage = function(evt) {\n                self.onMessage(angular.fromJson(evt.data));\n            };\n        };\n\n        // Closes the websocket connection.\n        RegionConnection.prototype.close = function() {\n            this.autoReconnect = false;\n            this.websocket.close();\n            this.websocket = null;\n        };\n\n        // Return the protocol used for the websocket connection.\n        RegionConnection.prototype._getProtocol = function() {\n            return $window.location.protocol;\n        };\n\n        // Return connection url to websocket from current location and\n        // html options.\n        RegionConnection.prototype._buildUrl = function() {\n            var host = $window.location.hostname;\n            var port = $window.location.port;\n            var path = $window.location.pathname;\n            var proto = 'ws';\n            if (this._getProtocol() === 'https:') {\n                proto = 'wss';\n            }\n\n            // Path and port can be overridden by href and data-websocket-port\n            // in the base element respectively.\n            var base = angular.element(\"base\");\n            if(angular.isDefined(base)) {\n                var newPath = base.attr(\"href\");\n                if(angular.isDefined(newPath)) {\n                    path = newPath;\n                }\n                var newPort = base.data(\"websocket-port\");\n                if(angular.isDefined(newPort)) {\n                    port = newPort;\n                }\n            }\n\n            // Append final '/' if missing from end of path.\n            if(path[path.length - 1] !== '/') {\n                path += '/';\n            }\n\n            // Build the URL. Include the :port only if it has a value.\n            url = proto + \"://\" + host;\n            if(angular.isString(port) && port.length > 0){\n                url += \":\" + port;\n            }\n            url += path + \"ws\";\n\n            // Include the csrftoken in the URL if it's defined.\n            var csrftoken;\n            if(angular.isFunction($cookies.get)) {\n                csrftoken = $cookies.get('csrftoken');\n            } else {\n                csrftoken = $cookies.csrftoken;\n            }\n            if(angular.isDefined(csrftoken)) {\n                url += '?csrftoken=' + encodeURIComponent(csrftoken);\n            }\n\n            return url;\n        };\n\n        // Opens the default websocket connection.\n        RegionConnection.prototype.defaultConnect = function() {\n            // Already been called but the connection has not been completed.\n            if(angular.isObject(this.defaultConnectDefer)) {\n                return this.defaultConnectDefer.promise;\n            }\n\n            // Already connected.\n            var defer;\n            if(this.isConnected()) {\n                // Create a new defer as the defaultConnectDefer would\n                // have already been resolved.\n                defer = $q.defer();\n\n                // Cannot resolve the defer inline as it hasn't been given\n                // back to the caller. It will be called in the next loop.\n                $timeout(defer.resolve);\n                return defer.promise;\n            }\n\n            // Start the connection.\n            var self = this, opened, errored;\n            defer = this.defaultConnectDefer = $q.defer();\n            opened = function(evt) {\n                this.defaultConnectDefer = null;\n                self.unregisterHandler(\"open\", opened);\n                self.unregisterHandler(\"error\", errored);\n                $rootScope.$apply(defer.resolve(evt));\n            };\n            errored = function(evt) {\n                this.defaultConnectDefer = null;\n                self.unregisterHandler(\"open\", opened);\n                self.unregisterHandler(\"error\", errored);\n                $rootScope.$apply(defer.reject(evt));\n            };\n            this.registerHandler(\"open\", opened);\n            this.registerHandler(\"error\", errored);\n            this.connect();\n            return defer.promise;\n        };\n\n        // Called when a message is received.\n        RegionConnection.prototype.onMessage = function(msg) {\n            // Response\n            if(msg.type === MSG_TYPE.RESPONSE) {\n                this.onResponse(msg);\n            // Notify\n            } else if(msg.type === MSG_TYPE.NOTIFY) {\n                this.onNotify(msg);\n            }\n        };\n\n        // Called when a response message is recieved.\n        RegionConnection.prototype.onResponse = function(msg) {\n            // Grab the registered defer from the callbacks list.\n            var defer = this.callbacks[msg.request_id];\n            var remembered_request = this.requests[msg.request_id];\n            if(angular.isDefined(defer)) {\n                if(msg.rtype === RESPONSE_TYPE.SUCCESS) {\n                    // Resolve the defer inside of the digest cycle, so any\n                    // update to an object or collection will trigger a\n                    // watcher.\n                    $rootScope.$apply(defer.resolve(msg.result));\n                } else if(msg.rtype === RESPONSE_TYPE.ERROR) {\n                    // Reject the defer since an error occurred.\n                    if(angular.isObject(remembered_request)) {\n                        $rootScope.$apply(defer.reject({\n                            \"error\": msg.error,\n                            \"request\": remembered_request\n                        }));\n                    } else {\n                        $rootScope.$apply(defer.reject(msg.error));\n                    }\n                }\n                // Remove the defer from the callback list.\n                delete this.callbacks[msg.request_id];\n                delete this.requests[msg.request_id];\n            }\n        };\n\n        // Called when a notify response is recieved.\n        RegionConnection.prototype.onNotify = function(msg) {\n            var handlers = this.notifiers[msg.name];\n            if(angular.isArray(handlers)) {\n                angular.forEach(handlers, function(handler) {\n                    handler(msg.action, msg.data);\n                });\n            }\n        };\n\n        // Call method on the region.\n        RegionConnection.prototype.callMethod = function(\n                method, params, remember) {\n            var defer = $q.defer();\n            var request_id = this.newRequestId();\n            var request = {\n                type: MSG_TYPE.REQUEST,\n                request_id: request_id,\n                method: method,\n                params: params\n            };\n            this.callbacks[request_id] = defer;\n            // If requested, remember what the details of the request were,\n            // so that the controller can refresh its memory.\n            if (remember) {\n                this.requests[request_id] = request;\n            }\n            this.websocket.send(angular.toJson(request));\n            return defer.promise;\n        };\n\n        return new RegionConnection();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/region.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS ScriptsManager Manager\n *\n * Manages all of the Scripts in the browser. The manager uses the\n * RegionConnection to load the Scripts, and listen for notification\n * events about Scripts.\n */\n\nangular.module('MAAS').factory(\n    'ScriptsManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager',\n    function($q, $rootScope, RegionConnection, Manager) {\n\n        function ScriptsManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"script\";\n\n            // Listen for notify events for the Script object.\n            var self = this;\n            RegionConnection.registerNotifier(\"script\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        ScriptsManager.prototype = new Manager();\n\n        return new ScriptsManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/scripts.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Service Manager\n *\n * Manages all of the services for a node in the browser. The manager uses the\n * RegionConnection to load the services and listen for service notifications.\n */\n\nangular.module('MAAS').factory(\n    'ServicesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager', function(\n            $q, $rootScope, RegionConnection, Manager) {\n\n        function ServicesManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"service\";\n\n            // Listen for notify events for the service object.\n            var self = this;\n            RegionConnection.registerNotifier(\"service\",\n                function(action, data) {\n                    self.onNotify(action, data);\n            });\n        }\n\n        ServicesManager.prototype = new Manager();\n\n        return new ServicesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/services.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Space Manager\n *\n * Manages all of the spaces in the browser. The manager uses the\n * RegionConnection to load the spaces, update the spaces, and listen for\n * notification events about spaces.\n */\n\nangular.module('MAAS').factory(\n    'SpacesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager', 'SubnetsManager',\n    function($q, $rootScope, RegionConnection, Manager, SubnetsManager) {\n\n        function SpacesManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"space\";\n\n            // Listen for notify events for the space object.\n            var self = this;\n            RegionConnection.registerNotifier(\"space\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        SpacesManager.prototype = new Manager();\n\n        // Create a space.\n        SpacesManager.prototype.create = function(space) {\n            // We don't add the item to the list because a NOTIFY event will\n            // add the domain to the list. Adding it here will cause angular to\n            // complain because the same object exist in the list.\n            return RegionConnection.callMethod(\"space.create\", space);\n        };\n\n\n        // Delete the space.\n        SpacesManager.prototype.deleteSpace = function(space) {\n            return RegionConnection.callMethod(\"space.delete\", space);\n        };\n\n        return new SpacesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/spaces.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS SSHKey Manager\n *\n * Manages all of the SSHKeys in the browser. The manager uses the\n * RegionConnection to load the SSHKeys, update the SSHKeys, and\n * listen for notification events about SSHKeys.\n */\n\nangular.module('MAAS').factory(\n    'SSHKeysManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager',\n    function($q, $rootScope, RegionConnection, Manager) {\n\n        function SSHKeysManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"sshkey\";\n\n            // Listen for notify events for the sshkey object.\n            var self = this;\n            RegionConnection.registerNotifier(\"sshkey\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        SSHKeysManager.prototype = new Manager();\n\n        // Imports SSH keys from a launchpad and github.\n        SSHKeysManager.prototype.importKeys = function(params) {\n            // We don't add the results to the list because a NOTIFY event will\n            // add the ssh key to the list. Adding it here will cause angular\n            // to complain because the same object exist in the list.\n            return RegionConnection.callMethod(\"sshkey.import_keys\", params);\n        };\n\n        return new SSHKeysManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/sshkeys.js","/* Copyright 2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS StaticRoute Manager\n *\n * Manages all of the StaticRoutes in the browser. The manager uses the\n * RegionConnection to load the StaticRoutes, update the StaticRoutes, and\n * listen for notification events about StaticRoutes.\n */\n\nangular.module('MAAS').factory(\n    'StaticRoutesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager',\n    function($q, $rootScope, RegionConnection, Manager) {\n\n        function StaticRoutesManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"staticroute\";\n\n            // Listen for notify events for the staticroute object.\n            var self = this;\n            RegionConnection.registerNotifier(\"staticroute\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        StaticRoutesManager.prototype = new Manager();\n\n        return new StaticRoutesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/staticroutes.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Subnet Manager\n *\n * Manages all of the subnets in the browser. The manager uses the\n * RegionConnection to load the subnets, update the subnets, and listen for\n * notification events about subnets.\n */\n\nangular.module('MAAS').factory(\n    'SubnetsManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager', function(\n            $q, $rootScope, RegionConnection, Manager) {\n\n        function SubnetsManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"subnet\";\n\n            // Listen for notify events for the subnet object.\n            var self = this;\n            RegionConnection.registerNotifier(\"subnet\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        SubnetsManager.prototype = new Manager();\n\n        // Return the name of the subnet. Will include the name of the subnet\n        // in '(', ')' if it exists and not the same as the cidr.\n        SubnetsManager.prototype.getName = function(subnet) {\n            if(!angular.isObject(subnet)) {\n                return \"\";\n            }\n\n            var name = subnet.cidr;\n            if(angular.isString(subnet.name) &&\n                subnet.name !== \"\" &&\n                subnet.name !== subnet.cidr) {\n                name += \" (\" + subnet.name + \")\";\n            }\n            return name;\n        };\n\n        SubnetsManager.prototype.getLargestRange = function(subnet) {\n            var largest_range = {num_addresses: 0, start: \"\", end: \"\"};\n            angular.forEach(subnet.statistics.ranges, function(iprange) {\n                if(angular.equals(iprange.purpose, [\"unused\"]) &&\n                        iprange.num_addresses > largest_range.num_addresses) {\n                    largest_range = iprange;\n                }\n            });\n            return largest_range;\n        };\n\n        SubnetsManager.prototype.hasDynamicRange = function(subnet) {\n            var i;\n            for(i = 0; i < subnet.statistics.ranges.length ; i++) {\n                var iprange = subnet.statistics.ranges[i];\n                if(iprange.purpose.indexOf(\"dynamic\") !== -1) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        // Create a subnet.\n        SubnetsManager.prototype.create = function(subnet) {\n            // We don't add the item to the list because a NOTIFY event will\n            // add the domain to the list. Adding it here will cause angular to\n            // complain because the same object exist in the list.\n            return RegionConnection.callMethod(\"subnet.create\", subnet);\n        };\n\n        // Delete the subnet.\n        SubnetsManager.prototype.deleteSubnet = function(subnet) {\n            return RegionConnection.callMethod(\"subnet.delete\", {\n                \"id\": subnet.id\n            });\n        };\n\n        // Perform a neighbour discovery scan on the subnet.\n        SubnetsManager.prototype.scanSubnet = function(subnet) {\n            return RegionConnection.callMethod(\"subnet.scan\", {\n                \"id\": subnet.id\n            });\n        };\n\n        return new SubnetsManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/subnets.js","/* Copyright 2017 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Switches Manager\n *\n * Manages all of the switches in the browser. This manager is used for the\n * switches listing and the switches view page. The manager uses the\n * RegionConnection to load the switches, update the switches, and listen for\n * notification events about switches.\n */\n\nangular.module('MAAS').factory(\n    'SwitchesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'NodesManager', function(\n            $q, $rootScope, RegionConnection, NodesManager) {\n\n        function SwitchesManager() {\n            NodesManager.call(this);\n\n            this._pk = \"system_id\";\n            this._handler = \"switch\";\n            this._metadataAttributes = {\n                \"owner\": null,\n                \"subnets\": null,\n                \"tags\": null,\n                \"zone\": function(device) {\n                    return device.zone.name;\n                }\n            };\n\n            // Listen for notify events for the switch object.\n            var self = this;\n            RegionConnection.registerNotifier(\"switch\", function(action, data) {\n                self.onNotify(action, data);\n            });\n        }\n\n        SwitchesManager.prototype = new NodesManager();\n\n        // Create a switch.\n        SwitchesManager.prototype.create = function(node) {\n            // We don't add the item to the list because a NOTIFY event will\n            // add the device to the list. Adding it here will cause angular to\n            // complain because the same object exist in the list.\n            return RegionConnection.callMethod(\"switch.create\", node);\n        };\n\n        // Perform the action on the switch.\n        SwitchesManager.prototype.performAction = function(\n            device, action, extra) {\n\n            if(!angular.isObject(extra)) {\n                extra = {};\n            }\n            return RegionConnection.callMethod(\"switch.action\", {\n                \"system_id\": device.system_id,\n                \"action\": action,\n                \"extra\": extra\n                });\n        };\n\n        return new SwitchesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/switches.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Tag Manager\n *\n * Manages all of the tags in the browser. The manager uses the\n * RegionConnection to load the tags, update the tags, and listen for\n * notification events about tags.\n */\n\nangular.module('MAAS').factory(\n    'TagsManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager', function(\n            $q, $rootScope, RegionConnection, Manager) {\n\n        function TagsManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"tag\";\n\n            // Listen for notify events for the tag object.\n            var self = this;\n            RegionConnection.registerNotifier(\"tag\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        TagsManager.prototype = new Manager();\n\n        // Helper for autocomplete that will return a string of tags that\n        // contain the query text.\n        TagsManager.prototype.autocomplete = function(query) {\n            var matching = [];\n            angular.forEach(this._items, function(item) {\n                if(item.name.indexOf(query) > -1) {\n                    matching.push(item.name);\n                }\n            });\n            return matching;\n        };\n\n        return new TagsManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/tags.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS User Manager\n *\n * Manages all of the users in the browser. The manager uses the\n * RegionConnection to load the users, update the users, and listen for\n * notification events about users.\n */\n\nangular.module('MAAS').factory(\n    'UsersManager',\n    ['RegionConnection', 'Manager', 'ErrorService',\n    function(RegionConnection, Manager, ErrorService) {\n\n        function UsersManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"user\";\n\n            // Holds the authenticated user for the connection.\n            this._authUser = null;\n\n            // Listen for notify events for the user object.\n            var self = this;\n            RegionConnection.registerNotifier(\"user\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        UsersManager.prototype = new Manager();\n\n        // Get the authenticated user for the connection.\n        UsersManager.prototype.getAuthUser = function() {\n            return this._authUser;\n        };\n\n        // Return true if the authenticated user is super user.\n        UsersManager.prototype.isSuperUser = function() {\n            var authUser = this.getAuthUser();\n            if(!angular.isObject(authUser)) {\n                return false;\n            }\n            return authUser.is_superuser;\n        };\n\n        // Return true if the authenticated user has uploaded at\n        // least one SSH key.\n        UsersManager.prototype.getSSHKeyCount = function() {\n            authuser = this._authUser;\n            if(!angular.isObject(authuser)) {\n                return 0;\n            }\n            return authuser.sshkeys_count;\n        };\n\n        // Load the authenticated user.\n        UsersManager.prototype._loadAuthUser = function() {\n            var self = this;\n            return RegionConnection.callMethod(\"user.auth_user\", {}).then(\n                function(user) {\n                    if(angular.isObject(self._authUser)) {\n                        // Copy the user into the authUser. This keeps the\n                        // reference the same, not requiring another call to\n                        // getAuthUser.\n                        angular.copy(user, self._authUser);\n                    } else {\n                        self._authUser = user;\n                    }\n                    return self._authUser;\n                }, function(error) {\n                    ErrorService.raiseError(error);\n                });\n        };\n\n        UsersManager.prototype._replaceItem = function(item) {\n            Manager.prototype._replaceItem.call(this, item);\n\n            // Update the authenticated user if updated item has the\n            // same primary key.\n            if(angular.isObject(this._authUser) &&\n                this._authUser[this._pk] === item[this._pk]) {\n                // Copy the item into the authUser. This keeps the reference\n                // the same, not requiring another call to getAuthUser.\n                angular.copy(item, this._authUser);\n            }\n        };\n\n        UsersManager.prototype.loadItems = function() {\n            // Load the auth user when all the items are loaded as well.\n            this._loadAuthUser();\n            return Manager.prototype.loadItems.call(this);\n        };\n\n        UsersManager.prototype.reloadItems = function() {\n            // Load the auth user when all the items are reloaded as well.\n            this._loadAuthUser();\n            return Manager.prototype.reloadItems.call(this);\n        };\n\n        // Mark the user as completed the intro.\n        UsersManager.prototype.markIntroComplete = function() {\n            var self = this;\n            return RegionConnection.callMethod(\n                \"user.mark_intro_complete\", {}).then(\n                    function(user) {\n                        if(angular.isObject(self._authUser)) {\n                            // Copy the user into the authUser. This keeps the\n                            // reference the same, not requiring another call\n                            // to getAuthUser.\n                            angular.copy(user, self._authUser);\n                        } else {\n                            self._authUser = user;\n                        }\n                        return self._authUser;\n                    }, function(error) {\n                        ErrorService.raiseError(error);\n                    });\n        };\n\n        return new UsersManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/users.js","/* Copyright 2015-2016 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS VLAN Manager\n *\n * Manages all of the VLANs in the browser. The manager uses the\n * RegionConnection to load the VLANs, update the VLANs, and listen for\n * notification events about VLANs.\n */\n\nangular.module('MAAS').factory(\n    'VLANsManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager', 'SubnetsManager',\n    function($q, $rootScope, RegionConnection, Manager, SubnetsManager) {\n\n        function VLANsManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"vlan\";\n\n            // Listen for notify events for the vlan object.\n            var self = this;\n            RegionConnection.registerNotifier(\"vlan\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        VLANsManager.prototype = new Manager();\n\n        VLANsManager.prototype.getName = function(vlan) {\n            var name = vlan.vid;\n            if(vlan.vid === 0) {\n                name = \"untagged\";\n            } else if(angular.isString(vlan.name) && vlan.name !== \"\") {\n                name += \" (\" + vlan.name + \")\";\n            }\n            return name;\n        };\n\n        // Delete the VLAN.\n        VLANsManager.prototype.deleteVLAN = function(vlan) {\n            return RegionConnection.callMethod(\n                \"vlan.delete\", { \"id\": vlan.id }, true);\n        };\n\n        // This is needed for testing: in the normal course of things,\n        // rack_sids is generated entirely by the websocket handler.\n        VLANsManager.prototype.addRackController = function(vlan, rack) {\n            vlan.rack_sids.push(rack.system_id);\n        };\n\n        // Configure DHCP on the VLAN\n        VLANsManager.prototype.configureDHCP = function(\n           vlan, controllers, extra, relay_vlan) {\n           var params = {\n               \"id\": vlan.id,\n               \"controllers\": controllers,\n               \"extra\": extra\n           };\n           if(relay_vlan === null || angular.isNumber(relay_vlan)) {\n              params.relay_vlan = relay_vlan;\n           }\n           return RegionConnection.callMethod(\n                \"vlan.configure_dhcp\", params, true);\n        };\n\n        // Disable DHCP on the VLAN\n        VLANsManager.prototype.disableDHCP = function(vlan) {\n            return RegionConnection.callMethod(\n                \"vlan.configure_dhcp\", {\n                    \"id\": vlan.id,\n                    \"controllers\": [],\n                    \"relay_vlan\": null\n                }, true);\n        };\n\n        // Create a VLAN.\n        VLANsManager.prototype.create = function(vlan) {\n            // We don't add the item to the list because a NOTIFY event will\n            // add the domain to the list. Adding it here will cause angular to\n            // complain because the same object exist in the list.\n            return RegionConnection.callMethod(\"vlan.create\", vlan);\n        };\n\n        return new VLANsManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/vlans.js","/* Copyright 2015 Canonical Ltd.  This software is licensed under the\n * GNU Affero General Public License version 3 (see the file LICENSE).\n *\n * MAAS Zone Manager\n *\n * Manages all of the zones in the browser. The manager uses the\n * RegionConnection to load the zones, update the zones, and listen for\n * notification events about zones.\n */\n\nangular.module('MAAS').factory(\n    'ZonesManager',\n    ['$q', '$rootScope', 'RegionConnection', 'Manager', function(\n            $q, $rootScope, RegionConnection, Manager) {\n\n        function ZonesManager() {\n            Manager.call(this);\n\n            this._pk = \"id\";\n            this._handler = \"zone\";\n\n            // Listen for notify events for the zone object.\n            var self = this;\n            RegionConnection.registerNotifier(\"zone\",\n                function(action, data) {\n                    self.onNotify(action, data);\n                });\n        }\n\n        ZonesManager.prototype = new Manager();\n\n        // Return the default zone.\n        ZonesManager.prototype.getDefaultZone = function() {\n            if(this._items.length === 0) {\n                return null;\n            } else {\n                var i;\n                for(i=0;i<this._items.length;i++) {\n                    if(this._items[i].id === 0) {\n                        return this._items[i];\n                    }\n                }\n            }\n            return this._items[0];\n        };\n\n        return new ZonesManager();\n    }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/maasserver/static/js/angular/factories/zones.js"],"sourceRoot":""}