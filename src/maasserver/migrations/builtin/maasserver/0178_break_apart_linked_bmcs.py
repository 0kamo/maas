# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-09-18 12:28
from __future__ import unicode_literals

import re

from django.db import migrations
from provisioningserver.drivers.power.registry import PowerDriverRegistry


def get_none_chassis_power_types():
    """Return the power_types that are not chassis."""
    return [
        ptype
        for ptype, driver in PowerDriverRegistry
        if not driver.chassis
    ]


def break_apart_linked_bmcs(apps, schema_editor):
    BMC = apps.get_model("maasserver", "BMC")
    power_types = get_none_chassis_power_types()
    for bmc in BMC.objects.filter(power_type__in=power_types).prefetch_related(
            'node_set'):
        nodes = list(bmc.node_set.all())
        for node in nodes[1:]:
            bmc.id = None
            bmc._state.adding = True
            bmc.save()
            node.bmc = bmc
            node.save()


class Migration(migrations.Migration):

    dependencies = [
        ('maasserver', '0177_remove_unique_together_on_bmc'),
    ]

    operations = [
        migrations.RunPython(break_apart_linked_bmcs),
    ]
