#!/bin/sh -e

. /usr/share/debconf/confmodule
db_version 2.0

maas_sync_migrate_db(){
	maas syncdb --noinput
	maas migrate maasserver --noinput
	maas migrate metadataserver --noinput
}

restart_apache2(){
	if [ -x /usr/sbin/invoke-rc.d ]; then
		invoke-rc.d apache2 restart || true
	else
		/etc/init.d/apache2 restart || true
	fi
}

if [ -f /usr/share/dbconfig-common/dpkg/postinst.pgsql ]; then
	. /usr/share/dbconfig-common/dpkg/postinst.pgsql
fi

if [ "$1" = "configure" ] && [ -z "$2" ]; then

	#########################################################
	################ Folder Permissions  ####################
	#########################################################
	mkdir -p /var/lib/maas/media/storage
	chown -R www-data:www-data /var/lib/maas/

	#########################################################
	################  Configure Apache2  ####################
	#########################################################
	# handle apache configs
	if [ -e /etc/maas/maas-http.conf -a \
		! -e /etc/apache2/conf.d/maas-http.conf ]; then
		ln -sf /etc/maas/maas-http.conf /etc/apache2/conf.d/maas-http.conf
	fi

	# enable apache modules needed
	a2enmod expires
	a2enmod wsgi

	# Need to restart apache to pickup web configs
	restart_apache2

	#########################################################
	########### Configure maas user for Cobbler #############
	#########################################################

	# Create 'maas' user and password to autoconfigure
	cblr_pass=`pwgen`
	hash=$(printf "maas:Cobbler:$cblr_pass" | md5sum | awk '{print $1}')
	[ -e /etc/cobbler/users.digest ] || install -o root -g root -m 0600 /dev/null /etc/cobbler/users.digest
	htpasswd -D /etc/cobbler/users.digest "maas" || true
	printf "maas:Cobbler:$hash\n" >> /etc/cobbler/users.digest

	if grep -qs "^\ \{1,\}password: [a-zA-Z0-9]\{1,\}$" /etc/maas/pserv.yaml; then
		sed -i "s/^\ \{1,\}password: [a-zA-Z0-9]\{1,\}$/  password: "$cblr_pass"/" /etc/maas/pserv.yaml
	fi

	#########################################################
	##########  Configure DEFAULT_MAAS_URL  #################
	#########################################################

	# Obtain IP address of default route and change DEFAULT_MAAS_URL.
	while read Iface Destination Gateway Flags RefCnt Use Metric Mask MTU Window IRTT; do
		[ "$Mask" = "00000000" ] && break
	done < /proc/net/route
	interface="$Iface"
	ipaddr=$(LC_ALL=C /sbin/ip -4 addr list dev "$interface" scope global)
	ipaddr=${ipaddr#* inet }
	ipaddr=${ipaddr%%/*}
	# Set the IP address of the interface with default route
	if [ "$ipaddr" ]; then
		if grep -qs "^DEFAULT_MAAS_URL\ \= \"[a-zA-Z0-9:/.]\{0,\}\"$" /etc/maas/maas_local_settings.py; then
			sed -i "s/^DEFAULT_MAAS_URL\ \= \"[a-zA-Z0-9:/.]\{0,\}\"$/DEFAULT_MAAS_URL = \"http:\/\/"$ipaddr"\/\"/" \
                               /etc/maas/maas_local_settings.py
		fi
	fi

	#########################################################
	################  Configure Logging  ####################
	#########################################################

	# Give appropriate permissions
	if [ ! -f /var/log/maas/maas.log ]; then
		touch /var/log/maas/maas.log
	fi
	chown -R root:www-data /var/log/maas
	chmod 620 /var/log/maas/maas.log
	chmod -R 775 /var/log/maas/oops

	# Create log directory base
	mkdir -p /var/log/maas/rsyslog
	chown -R syslog:syslog /var/log/maas/rsyslog
	# Make sure rsyslog reads our config
	if [ -x /usr/sbin/invoke-rc.d ]; then
		invoke-rc.d rsyslog restart
	fi
	
	#########################################################
	########## Configure longpoll rabbitmq config ###########
	#########################################################

	# Handle longpoll/rabbitmq publishing
	if [ -x /usr/sbin/invoke-rc.d ]; then
		invoke-rc.d rabbitmq-server restart || true
	else
		/etc/init.d/rabbitmq-server restart || true
	fi
	longpoll_user="maas_longpoll"
	longpoll_pass=`pwgen`
	longpoll_vhost="/maas_longpoll"
	if [ -x /usr/sbin/rabbitmqctl ]; then
		/usr/sbin/rabbitmqctl add_user "$longpoll_user" "$longpoll_pass" || true
		/usr/sbin/rabbitmqctl add_vhost "$longpoll_vhost" || true
		/usr/sbin/rabbitmqctl set_permissions -p "$longpoll_vhost" "$longpoll_user" ".*" ".*" ".*" || true
	fi

	if grep -qs "^\ \{1,\}password: \"[a-zA-Z0-9]\{0,\}\"$" /etc/maas/txlongpoll.yaml; then
		sed -i "s/^\ \{1,\}password: \"[a-zA-Z0-9]\{0,\}\"$/  password: \""$longpoll_pass"\"/" \
                       /etc/maas/txlongpoll.yaml
	fi
	if grep -qs "^RABBITMQ_PASSWORD\ \= '[a-zA-Z0-9]\{0,\}'$" /etc/maas/maas_local_settings.py; then
		sed -i "s/^RABBITMQ_PASSWORD\ \= '[a-zA-Z0-9]\{0,\}'$/RABBITMQ_PASSWORD = '"$longpoll_pass"'/" \
                       /etc/maas/maas_local_settings.py
	fi

	#########################################################
	################  Configure Database  ###################
	#########################################################

	# Need to for postgresql start so it doesn't fail on the installer
	if [ -x /usr/sbin/invoke-rc.d ]; then
		invoke-rc.d --force postgresql restart || true
	else
		/etc/init.d/postgresql restart || true
	fi
	# Create the database
	dbc_go maas $@
	if grep -qs "^\ \{1,\} 'PASSWORD': '[a-zA-Z0-9]\{0,\}',$" /etc/maas/maas_local_settings.py; then
		sed -i "s/^\ \{1,\} 'PASSWORD': '[a-zA-Z0-9]\{0,\}',$/        'PASSWORD': '"$dbc_dbpass"',/" \
                       /etc/maas/maas_local_settings.py
	fi
	# Only syncdb if we have selected to install it with dbconfig-common.
	db_get maas/dbconfig-install
	if [ "$RET" = "true" ]; then
		maas_sync_migrate_db
	fi

elif [ "$1" = "configure" ] && dpkg --compare-versions "$2" gt 0.1+bzr266+dfsg-0ubuntu1; then
	# If upgrading to any later package version, then upgrade db.
	if [ -x /usr/sbin/invoke-rc.d ]; then
		invoke-rc.d apache2 stop || true
	fi
	maas_sync_migrate_db
	restart_apache2
fi

db_stop

#DEBHELPER#

exit 0
