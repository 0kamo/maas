#!/bin/sh

set -e

. /usr/share/debconf/confmodule
db_version 2.0

RELEASE=`lsb_release -rs` || RELEASE=""

create_log_dir() {
    # create log dir
    if [ ! -d /var/lib/maas ]; then
        mkdir -p /var/lib/maas
    fi
    if [ ! -d /var/log/maas/oops ]; then
        mkdir -p /var/log/maas/oops
    fi
    # Give appropriate permissions
    chown -R maas:maas /var/lib/maas/
    chown -R maas:maas /var/log/maas
    chmod -R 775 /var/log/maas/oops
}

configure_maas_tgt(){
    # Set up iSCSI: add maas.conf to tgt conf.d.
    local tgtcfg="/etc/tgt/targets.conf"
    [ -d /etc/tgt/conf.d/ ] || 
        echo "Warning! $tgtcfg did not exist" 1>&2;
    mkdir -p /etc/tgt/conf.d/ /var/lib/maas/ephemeral/
    ln -sf /var/lib/maas/ephemeral/tgt.conf /etc/tgt/conf.d/maas.conf
}

extract_cluster_uuid(){
    # Extract ClUSTER_UUID setting from config file $1.  This will work
    # both the cluster celery config (which is python) and the cluster
    # config (which is shell).
    sed -n -e "s/^CLUSTER_UUID *= *[\"']\([^\"']*\).*/\1/p" "$1"
}

configure_cluster_uuid(){
    # The cluster uuid goes into maas_cluster.conf, but we also still
    # keep a copy in maas_local_celeryconfig_cluster.py (hopefully just
    # temporarily).  If an old uuid is configured, we replicate that to
    # maas_cluster.conf; otherwise, we want to generate one.
    local uuid


    if [ -n "$(extract_cluster_uuid /etc/maas/maas_cluster.conf)" ]; then
        # UUID is already set up.  Wonderful.
        return
    fi

    # Look for a UUID stored in the old location.
    uuid="$(extract_cluster_uuid /etc/maas/maas_local_celeryconfig_cluster.py)"

    if [ -z "$uuid" ]; then
        # No UUID at all yet.  Generate one, and insert it into its
        # placeholder in the old config location.
        uuid="$(uuidgen)"
        sed -i "s|^CLUSTER_UUID = None$|CLUSTER_UUID = '$uuid'|" \
            /etc/maas/maas_local_celeryconfig_cluster.py
    fi

    # Either way, at this point we have a uuid, and it is configured in
    # the old config location.
    #
    # Write it to maas_cluster.conf as well.  There is no initial
    # placeholder in this file, so just append the setting.
    echo "CLUSTER_UUID=\"$uuid\"" >>/etc/maas/maas_cluster.conf
}

enable_apache_version_mod(){
    COMMON_STATE=$(dpkg-query -f '${Status}' -W 'apache2.2-common' 2>/dev/null | awk '{print $3}' || true)
    if [ "$COMMON_STATE" = "installed" ] || [ "$COMMON_STATE" = "unpacked" ] ; then
        a2enmod version
    fi
}

configure_cluster_http(){
    case $RELEASE in
        12.04|12.10|13.04)
            if [ -e /etc/maas/maas-cluster-http.conf -a \
                ! -e /etc/apache2/conf.d/maas-cluster-http.conf ]; then
                ln -sf /etc/maas/maas-cluster-http.conf /etc/apache2/conf.d/maas-cluster-http.conf
            fi
            ;;
        *)
            # handle apache configs
            if [ -e /etc/maas/maas-cluster-http.conf -a \
                ! -e /etc/apache2/conf-enabled/maas-cluster-http.conf ]; then
                ln -sf /etc/maas/maas-cluster-http.conf /etc/apache2/conf-enabled/maas-cluster-http.conf
            fi
            ;;
    esac
}

configure_cluster_authbind() {
    MAAS_UID="`id -u maas`"
    if [ ! -f "/etc/authbind/byuid/$MAAS_UID" ]; then
        if [ ! -d "/etc/authbind/byuid" ]; then
            mkdir -p /etc/authbind/byuid
            chmod 755 /etc/authbind
            chmod 755 /etc/authbind/byuid
        fi
    fi
    echo '0.0.0.0/0:68,69' >/etc/authbind/byuid/$MAAS_UID
    chown maas:maas /etc/authbind/byuid/$MAAS_UID
    chmod 700 /etc/authbind/byuid/$MAAS_UID
}

restart_apache2(){
    if [ -x /usr/sbin/invoke-rc.d ]; then
        invoke-rc.d apache2 restart || true
    else
        /etc/init.d/apache2 restart || true
    fi
}

configure_pserv_generator(){
    # Get the MAAS_URL on configure/reconfigure and write it to the conf files.
    db_get maas-cluster-controller/maas-url || true
    if [ -n "$RET" ]; then
        sed -i "s|MAAS_URL=.*|MAAS_URL=\"$RET\"|" /etc/maas/maas_cluster.conf
        # Extract the hostname part.
        HOSTPART=$(echo $RET|awk '{ split($0,array,"/")} END{print array[3] }')
        # And substitute it in-place in pserv.yaml on an indented, non-commented
        # line.
        sed -ri "s|^([[:space:]]+)(#+[[:space:]]*)?(generator:[[:space:]]+https?://)[^:/]+|\1\3$HOSTPART|" /etc/maas/pserv.yaml
    fi
}



if [ "$1" = "configure" ] && [ -z "$2" ]; then
    # logging
    create_log_dir
    configure_maas_tgt
fi

if [ "$1" = "configure" ]; then
    if dpkg --compare-versions "$2" lt 0.1+bzr1239+dfsg-0ubuntu1; then
        create_log_dir
    fi

    configure_pserv_generator

    # These config files may contain a private cluster UUID.  Only maas
    # can read them; only root can write them
    chown root:maas \
        /etc/maas/maas_local_celeryconfig_cluster.py \
        /etc/maas/maas_cluster.conf
    chmod 0640 \
        /etc/maas/maas_local_celeryconfig_cluster.py \
        /etc/maas/maas_cluster.conf

    configure_cluster_uuid
    configure_cluster_authbind
    enable_apache_version_mod
    configure_cluster_http
    restart_apache2
fi

db_stop

#DEBHELPER#
