#!/bin/bash -e
#
# Copyright 2020 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).
#
#
# Helper to configure a PostgreSQL database for MAAS, and set up the MAAS snap
# accordingly.
#

# shellcheck source=snap/local/tree/helpers/_lib
. /snap/maas/current/helpers/_lib

# minimum supported Ubuntu release
MIN_UBUNTU_RELEASE="18.04"

MAAS_DBNAME="maasdb"
MAAS_DBUSER="maas"
MAAS_DBPASS=""


check_ubuntu_release() {
    if is_version "$(lsb_release -rs)" "<<" "$MIN_UBUNTU_RELEASE"; then
        error_exit "This command must be run on Ubuntu $MIN_UBUNTU_RELEASE or later."
    fi
}

ensure_snap_unused() {
    local current_mode
    current_mode=$(maas_snap_mode)
    [ "$current_mode" != "none" ] || return 0

    cat <<EOF

The MAAS snap is currently configured in "$current_mode" mode.
If you proceed, all existing data in the snap will be destroyed.

EOF
    local answer
    answer=$(ask_yes_no "Proceed?")
    [ "$answer" = "y" ] || exit 0
}

ensure_postgres_installed() {
    ! is_deb_installed postgresql || return 0
    echo "* Installing the PostgreSQL database server..."
    apt update -y
    apt install -y postgresql
}

random_password() {
    # taken from the dbconfig-common package
    env LANG=C LC_ALL=C tr -dc "[:alnum:]" < /dev/urandom 2>/dev/null |
        dd bs=1 count=12 2>/dev/null
}

pg_do() {
    sudo -iu postgres "$@"
}

pg_user_exists() {
    [ -n "$(pg_do psql -tc "\du $MAAS_DBUSER")" ]
}

pg_db_exists() {
    [ -n "$(pg_do psql -tc "\l $MAAS_DBNAME")" ]
}

setup_database() {
    echo "* Setting up PostgreSQL database for MAAS..."
    ! pg_db_exists || error_exit "\
The PostgreSQL database \"$MAAS_DBNAME\" already exists.
Please remove it before running the script.

To connect the MAAS snap to an existing database, run \"maas init\" and provide
details for the database.
"

    if pg_user_exists; then
        cat <<EOF

The PostgreSQL user "$MAAS_DBUSER" already exists.
If you proceed, the password for the user will be updated.

EOF

        local answer
        answer=$(ask_yes_no "Proceed?")
        [ "$answer" = "y" ] || exit 0
    fi

    MAAS_DBPASS=$(random_password)
    if pg_user_exists; then
        pg_do psql -c "ALTER USER \"$MAAS_DBUSER\" WITH ENCRYPTED PASSWORD '$MAAS_DBPASS'" >/dev/null
    else
        pg_do psql -c "CREATE USER \"$MAAS_DBUSER\" WITH ENCRYPTED PASSWORD '$MAAS_DBPASS'" >/dev/null
    fi
    pg_do createdb -O "$MAAS_DBUSER" "$MAAS_DBNAME" >/dev/null

    # allow connection from network for the maas user
    local pg_major
    pg_major=$(deb_version postgresql | sed 's/^\([0-9]\+\).*/\1/')
    local pg_hba="/etc/postgresql/$pg_major/main/pg_hba.conf"
    grep -q "^host[[:space:]]\\+${MAAS_DBNAME}\\b" "$pg_hba" ||
        printf "host\t%s\t%s\t0/0\tmd5\n" "$MAAS_DBNAME" "$MAAS_DBUSER" >> "$pg_hba"
}

maas_init() {
    cat <<EOF
The MAAS database has been created with the following details:

dbname:   $MAAS_DBNAME
user:     $MAAS_DBUSER
password: $MAAS_DBPASS

If you proceed, MAAS can now be set up with this configuration.  Otherwise,
"maas init" can be run later, and configured with these parameters for the
database configuration.

EOF

    local answer
    answer=$(ask_yes_no "Proceed?")
    [ "$answer" = "y" ] || exit 0

    echo "* Initializing MAAS..."
    # prefill some of the questions, remaining ones will be asked to the user
    /snap/bin/maas \
        init \
        --mode region+rack \
        --force \
        --database-host localhost \
        --database-name "$MAAS_DBNAME" \
        --database-user "$MAAS_DBUSER" \
        --database-pass "$MAAS_DBPASS"
}

check_root
check_ubuntu_release
ensure_snap_unused
ensure_postgres_installed
setup_database
maas_init
